<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OscarLib</name>
    </assembly>
    <members>
        <member name="T:csammisrun.OscarLib.Utility.ChatInvitationConnection">
            <summary>
            This is not a real connection
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.Connection">
            <summary>
            Encapsulates a connection to an OSCAR server
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.Connection.CreateDirectConnectSocket(System.String,System.Int32,System.Delegate)">
            <summary>
            Begins the socket creation process
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.Connection.CreateDCSEndDnsLookup(System.IAsyncResult)">
            <summary>
            Ends the DNS lookup phase of connection and begins connecting the socket to the host
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.Connection.CreateDCSEndInitialConnection(System.IAsyncResult)">
            <summary>
            Ends the connection phase and returns a connected socket
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.Connection.isConnecting">
            <summary>
            A value indicating whether or not this connection is in the process of connecting
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.Connection.connectionTimeout">
            <summary>
            A timer that controls determining when a connection attempt has timed out
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.Connection.isDisconnecting">
            <summary>
            A value indicating whether or not this connection is in the process of disconnecting
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.Connection.connectionId">
            <summary>
            The unique ID of this connection
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.Connection.parentSession">
            <summary>
            The <see cref="T:csammisrun.OscarLib.ISession"/> that owns this connection
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.Connection.server">
            <summary>
            The server to which to connect
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.Connection.port">
            <summary>
            The port to which to connect
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.Connection.readyForData">
            <summary>
            A value indicating whether or not this connection is ready to accept data
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.Connection.socket">
            <summary>
            The <see cref="T:System.Net.Sockets.Socket"/> underlying this connection
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.Connection.cookie">
            <summary>
            The cookie to send in the connection handshaking phase
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.Connection.#ctor(csammisrun.OscarLib.ISession,System.Int32)">
            <summary>
            Creates a new connection
            </summary>
            <param name="parent">The <see cref="T:csammisrun.OscarLib.ISession"/> that owns this connection</param>
            <param name="id">The connection's unique ID</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.Connection.ConnectToServer">
            <summary>
            Connects to the server and performs the initial handshaking
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.Connection.StartTimeoutPeriod(System.Int32)">
            <summary>
            Starts counting down until a connection timeout event occurs
            </summary>
            <param name="seconds">The number of seconds to elapse until the connection times out</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.Connection.StopTimeoutPeriod">
            <summary>
            Stops the timeout timer
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.Connection.DisconnectFromServer(System.Boolean)">
            <summary>
            Disconnects from the OSCAR server
            </summary>
            <param name="error"><c>true</c> if the disconnection is resulting from an error, <c>false</c> otherwise</param>
            <returns><c>true</c> if the disconnection succeeded without error,
            <c>false</c> otherwise</returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.Connection.GetFLAPHeader(System.Byte[])">
            <summary>
            Unmarshals a byte array into a FLAP header
            </summary>
            <param name="buffer">A byte array</param>
            <returns>A populated FLAP header</returns>
            <remarks>
            This method always assumes that the FLAP header is at the beginning of
            the buffer. The FLAP header is always the first six bytes of a communication
            frame coming from the server, and it is read into a six-byte buffer by
            itself at the beginning of a socket read operation.
            </remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.Connection.OnServerConnectionCompleted">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Utility.Connection.ServerConnectionCompleted"/> event
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.Connection.ReadHeader">
            <summary>
            Gets the next FLAP header from the server
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.Connection.ProcessFLAP(System.IAsyncResult)">
            <summary>
            Processes the asynchronous receipt of a FLAP
            </summary>
            <param name="res">The <see cref="T:System.IAsyncResult"/> of a BeginReceive call</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.Connection.ReadPacket(System.Int32)">
            <summary>
            Synchronously read in a packet
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.Connection.ReadPacketAsync(System.Int32)">
            <summary>
            Reads a packet of the specified length asynchronously.
            Data is returned in the <see cref="E:csammisrun.OscarLib.Utility.Connection.ReadPacketAsyncComplete"/> event.
            </summary>
            <param name="datalength">The number of bytes to read from the socket</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.Connection.SendFLAP(System.Byte[])">
            <summary>
            Sends a single FLAP
            </summary>
            <param name="buffer">The byte buffer to send</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.Connection.SendPacket(System.Byte[],System.AsyncCallback)">
            <summary>
            Asynchronously sends a raw packet, calling the specified method when finished
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.Connection.SendPacket(System.Byte[],System.Int32,System.Int32,System.AsyncCallback)">
            <summary>
            Asynchronously sends a raw packet, calling the specified method when finished
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.Connection.ReceivePacket(System.Byte[],System.AsyncCallback)">
            <summary>
            Asynchronously receives a raw packet, calling the specified method when finished
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.Connection.ConnectionTimedOut(System.Object)">
            <summary>
            30 seconds have elapsed since the connection attempt started
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Utility.Connection.ServerConnectionCompleted">
            <summary>
            Occurs when the server connection is completed
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Utility.Connection.ReadPacketAsyncComplete">
            <summary>
            Occurs when a packet read via <see cref="M:csammisrun.OscarLib.Utility.Connection.ReadPacketAsync(System.Int32)"/> has arrived
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.Connection.ParentSession">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.ISession"/> that owns this connection object
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.Connection.Connecting">
            <summary>
            Gets or sets a value indicating whether or not this connection
            is in the initial "connecting" phase -- that is, the time between
            connection to the server and the client sending SNAC(01,02)
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.Connection.Connected">
            <summary>
            Gets a value indicating whether the underlying socket is connected
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.Connection.DataSocket">
            <summary>
            Gets a reference to the main socket used for data transfer
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.Connection.Server">
            <summary>
            Gets or sets the server to which to connect
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.Connection.Port">
            <summary>
            Gets or sets the port to which to connect
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.Connection.Cookie">
            <summary>
            Gets or sets the authentication cookie to send to the server
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.Connection.ReadyForData">
            <summary>
            Gets or sets a value indicating whether or not this connection
            is ready to send data
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.Connection.ID">
            <summary>
            Gets the Connection's ID, as assigned by the <see cref="T:csammisrun.OscarLib.Utility.ConnectionManager"/>
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.Connection.ConnectionTimeout">
            <summary>
            Gets or sets a Timer controlling the socket's initial connection timeout
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.Connection.FLAPSequence">
            <summary>
            Gets the next FLAP sequence ID in the sequence 0 through 2^15 - 1, inclusive
            </summary>
            <returns>The next FLAP sequence ID</returns>
            <remarks>The sequence ID series wraps around if it is about to overflow</remarks>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.Connection.SocketConnectionData">
            <summary>
            Encapsulates socket connection information
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectConnection.#ctor(csammisrun.OscarLib.ISession,System.Int32,csammisrun.OscarLib.Utility.DirectConnectionMethod,csammisrun.OscarLib.Utility.DirectConnectRole)">
            <summary>
            Creates a new Direct Connection
            </summary>
            <param name="parent">The <see cref="T:csammisrun.OscarLib.ISession"/> that owns this connection</param>
            <param name="id">The connection's unique ID</param>
            <param name="dcmethod">The method (direct or proxied) that the connection is to use</param>
            <param name="role">The role of this connection in a Rendezvous session</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectConnection.ReadHeader">
            <summary>
            Not implemented in DirectConnection
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectConnection.SendFLAP(System.Byte[])">
            <summary>
            Not implemented in DirectConnection
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectConnection.ConnectToServer">
            <summary>
            Connect to a remote user using Rendezvous
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectConnection.AcceptDirectConnectionInvitation">
            <summary>
            Accepts an invitation to direct connect
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectConnection.OnDirectConnectFailed(System.String)">
            <summary>
            Signals to implementing classes that the connection attempt failed
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectConnection.OnDirectConnectReady">
            <summary>
            Signals to implementing classes that the connection is ready to use
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectConnection.ProxyInitializeSend">
            <summary>
            Synchronously sends a rendezvous proxy INITSEND message
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectConnection.ProxyInitializeReceive">
            <summary>
            Synchronously sends a rendezvous proxy INITRECV message
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectConnection.ReadProxyPacket">
            <summary>
            Synchronously reads a packet from a Rendezvous proxy connection
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectConnection.InsertProxyHeader(System.Byte[],csammisrun.OscarLib.Utility.RendezvousProxyCommand,System.Int32@)">
            <summary>
            Inserts a 12-byte header into a Rendezvous proxy negotiation packet
            </summary>
            <param name="data">The byte buffer containing the packet</param>
            <param name="command">The <see cref="T:csammisrun.OscarLib.Utility.RendezvousProxyCommand"/> to send</param>
            <param name="index">The offset at which to insert the header</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectConnection.ProxyReceivedReady(System.IAsyncResult)">
            <summary>
            The negotiated proxy connection has received a READY packet, 
            </summary>
            <param name="res"></param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectConnection.InitProxyConnectFinished(System.Net.Sockets.Socket,System.String)">
            <summary>
            Completes the initial connection to the proxy server
            </summary>
            <remarks>This method is used to complete the proxy server transaction for both
            Stage 1 sending and Stage 2 receiver-redirect proxy scenarios</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectConnection.StartSendThroughStage2Proxy">
            <summary>
            Sends a Rendezvous INITRECV and begins sending the file through the proxy connection
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectConnection.StartReceiveThroughDirectConnection">
            <summary>
            Connect to the sender and begin receiving the file
            </summary>
            <remarks>If the direct connection fails at this stage, control is passed to <see cref="M:csammisrun.OscarLib.Utility.DirectConnection.FallbackToStage2Connection"/></remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectConnection.InitReceiveFileConnectFinished(System.Net.Sockets.Socket,System.String)">
            <summary>
            Connection to sender has completed
            </summary>
            <remarks>
            If the socket connection fails at this stage, control is passed to <see cref="M:csammisrun.OscarLib.Utility.DirectConnection.FallbackToStage2Connection"/>.
            </remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectConnection.StartReceiveThroughProxy">
            <summary>
            Set up the connection to receive data through a stage 1 or stage 3 proxy transfer
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectConnection.InitProxyReceiveConnectFinished(System.Net.Sockets.Socket,System.String)">
            <summary>
            Completes the final connection to the proxy server
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectConnection.FallbackToStage2Connection">
            <summary>
            Direct connection to the sender has failed, attempt a proxy redirect
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.DirectConnection.Capability">
            <summary>
            Gets the OSCAR capability used by this Direct Connection
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.DirectConnection.Sequence">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.Utility.RendezvousSequence"/> of the connection
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.DirectConnection.Role">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.Utility.DirectConnectRole"/> of the connection
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.DirectConnection.Other">
            <summary>
            Gets or sets the <see cref="T:csammisrun.OscarLib.UserInfo"/> of the other user in this direct connection
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.DirectConnection.Method">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.Utility.DirectConnectionMethod"/> in use by this connection
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.DirectConnection.Type">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.Utility.RendezvousType"/> of this connection
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.ChatConnection">
            <summary>
            Encapsulates a connection to an OSCAR chat room
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ChatConnection.#ctor(csammisrun.OscarLib.ISession,System.Int32,csammisrun.OscarLib.ChatRoom)">
            <summary>
            Creates a new chat connection
            </summary>
            <param name="parent">The <see cref="T:csammisrun.OscarLib.ISession"/> that owns this connection</param>
            <param name="id">The connection's unique ID</param>
            <param name="roominfo">A <see cref="P:csammisrun.OscarLib.Utility.ChatConnection.ChatRoom"/> object</param>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.ChatConnection.ChatRoom">
            <summary>
            Gets the <see cref="P:csammisrun.OscarLib.Utility.ChatConnection.ChatRoom"/> that is using this connection
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.ServerConnectionCompletedHandler">
            <summary>
            Handles a server connection completed event
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.ConnectionReadPacketHandler">
            <summary>
            Handles a packet read complete event
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.DataPacket">
            <summary>
            Encapsulates an incoming or outgoing data packet
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.DataPacket.FLAP">
            <summary>
            The FLAP header that was received with the packet
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.DataPacket.ParentConnection">
            <summary>
            The connection that will send or has received the packet
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.DataPacket.ParentSession">
            <summary>
            The session that owns the packet
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.DataPacket.SNAC">
            <summary>
            The SNAC header that was either received with the packet
            or will determine how the packet is sent
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DataPacket.#ctor">
            <summary>
            Initializes a new DataPacket
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DataPacket.#ctor(System.Byte[])">
            <summary>
            Initializes a new DataPacket from a byte array
            </summary>
            <param name="data">A byte array used to construct a <see cref="T:csammisrun.OscarLib.Utility.ByteStream"/>
            for the <see cref="P:csammisrun.OscarLib.Utility.DataPacket.Data"/> property</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DataPacket.#ctor(csammisrun.OscarLib.Utility.ByteStream)">
            <summary>
            Initializes a new DataPacket from a ByteStream
            </summary>
            <param name="stream">A <see cref="T:csammisrun.OscarLib.Utility.ByteStream"/> that will be exposed
            as the <see cref="P:csammisrun.OscarLib.Utility.DataPacket.Data"/> property.</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DataPacket.ResetByteStream(csammisrun.OscarLib.Utility.ByteStream)">
            <summary>
            Sets the current <see cref="P:csammisrun.OscarLib.Utility.DataPacket.Data"/> parameter to a new <see cref="T:csammisrun.OscarLib.Utility.ByteStream"/>
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.DataPacket.Data">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.Utility.ByteStream"/> containing the packet's data
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.RendezvousProxyCommand">
            <summary>
            Describes the AOL Rendezvous proxy commands
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.RendezvousProxyCommand.Error">
            <summary>
            An error occured in the proxy connection
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.RendezvousProxyCommand.InitializeSend">
            <summary>
            Used to initialize the proxy connection for sending a file
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.RendezvousProxyCommand.Acknowledge">
            <summary>
            The proxy is acknowledging a command
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.RendezvousProxyCommand.InitializeReceive">
            <summary>
            Used to initialize the proxy connection for receiving a file
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.RendezvousProxyCommand.Ready">
            <summary>
            The proxy connection is set up and ready
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.RendezvousProxyPacket">
            <summary>
            Encapsulates a proxy negotiation packet
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.DirectConnectionMethod">
            <summary>
            Defines methods of creating direct connections
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.DirectConnectionMethod.Direct">
            <summary>
            Directly connect to the peer
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.DirectConnectionMethod.Proxied">
            <summary>
            Connect to the peer via a proxy
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.DirectConnectType">
            <summary>
            Specifies the type of the Direct Connection
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.DirectConnectType.DirectIM">
            <summary>
            The Direct Connection is continuous and should not be closed after a single transfer
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.DirectConnectType.FileTransfer">
            <summary>
            The Direct Connection is to be used to transfer a file and then disconnect
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.DirectConnectionFailed">
            <summary>
            A handler for alerting child classes of <see cref="T:csammisrun.OscarLib.Utility.DirectConnection"/> of a connection failure
            </summary>
            <param name="reason">A string describing the reason for the failure</param>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.DirectConnectionReady">
            <summary>
            A handler for alerting child classes of <see cref="T:csammisrun.OscarLib.Utility.DirectConnection"/> when the connection completes successfully
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.DirectConnectRole">
            <summary>
            Specifies the role that created a Direct Connection
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.DirectConnectRole.Initiator">
            <summary>
            This connection initiated the Rendezvous session
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.DirectConnectRole.Receiver">
            <summary>
            This connection was created as a result of a Rendezvous invitation
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.DataReaderCompleteHandler">
            <summary>
            Provides a handler for alerting a <see cref="T:csammisrun.OscarLib.Utility.DirectIMConnection"/> when a
            <see cref="T:csammisrun.OscarLib.Utility.DirectIMDataReader"/> has completed its work
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.DataWriterCompleteHandler">
            <summary>
            Provides a handler for alerting a <see cref="T:csammisrun.OscarLib.Utility.DirectIMConnection"/> when a
            <see cref="T:csammisrun.OscarLib.Utility.DirectIMDataWriter"/> has completed its work
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.DirectIMFlags">
            <summary>
            Describes the flags that can accompany a Direct IM
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.DirectIMFlags.None">
            <summary>
            The DirectIM packet is an ordinary message
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.DirectIMFlags.AutoResponse">
            <summary>
            The message being sent is an automatic response (away message)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.DirectIMFlags.TypingPacket">
            <summary>
            The message being sent indicates a change in typing status
            </summary>
            <remarks>Sent alone, this flag indicates the typing has ceased. Sent with either <see cref="F:csammisrun.OscarLib.Utility.DirectIMFlags.UserTyping"/> or <see cref="F:csammisrun.OscarLib.Utility.DirectIMFlags.UserTyped"/>,
            the semantics of the packet are as described in those flags' respective comments.</remarks>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.DirectIMFlags.UserTyping">
            <summary>
            The remote user is typing
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.DirectIMFlags.UserTyped">
            <summary>
            The remote user has paused in their typing
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.DirectIMFlags.ConfirmationPacket">
            <summary>
            This packet is to confirm the successful negotiation of a direct connection
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.DirectIMConnection">
            <summary>
            Describes a stateful Rendezvous connection used to transmit text messages and images
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectIMConnection.#ctor(csammisrun.OscarLib.ISession,System.Int32,csammisrun.OscarLib.Utility.DirectConnectionMethod,csammisrun.OscarLib.Utility.DirectConnectRole)">
            <summary>
            Initializes a new DirectIMConnection
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectIMConnection.ReadHeader">
            <summary>
            Reads a ODC header from the base Rendezvous connection
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectIMConnection.SendMessage(csammisrun.OscarLib.DirectIM)">
            <summary>
            Queues a <see cref="T:csammisrun.OscarLib.DirectIM"/> for sending
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectIMConnection.SendConfirmationPacket">
            <summary>
            Send a confirmation packet to the remote client, verifying that the connection is good
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectIMConnection.MessageSendCallback(System.Object)">
            <summary>
            Dequeues a single message and sends it immediately
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectIMConnection.EndReadHeader(System.IAsyncResult)">
            <summary>
            Processes the received message
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.DirectIMConnection.Capability">
            <summary>
            Returns the DirectIM capability CLSID
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.DirectIMDataReader">
            <summary>
            Encapsulates the logic to read a message from a DirectIMConnection stream
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectIMDataReader.#ctor(csammisrun.OscarLib.Utility.DirectIMConnection,csammisrun.OscarLib.DirectIM)">
            <summary>
            Initializes a new DirectIMDataReader
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectIMDataReader.Read(System.UInt32)">
            <summary>
            Begins the data reading process
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectIMDataReader._conn_ReadPacketAsyncComplete(csammisrun.OscarLib.Utility.Connection,System.Byte[])">
            <summary>
            Append a chunk of data onto the full message buffer
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectIMDataReader.ProcessBuffer">
            <summary>
            Process the contents of the raw message into the DirectIM object
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectIMDataReader.IndexOfInBuffer(System.String,System.Byte[])">
            <summary>
            Finds an ASCII string occurance in a byte buffer
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.DirectIMDataReader.Message">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.DirectIM"/> being populated by the data reader
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Utility.DirectIMDataReader.DataReaderComplete">
            <summary>
            Signals that the DataReader has finished processing the message
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.DirectIMDataWriter">
            <summary>
            Encapsulates the logic to spool out a message from a DirectIMConnection stream
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectIMDataWriter.#ctor(csammisrun.OscarLib.Utility.DirectIMConnection,csammisrun.OscarLib.DirectIM)">
            <summary>
            Initializes a new DirectIMDataReader
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.DirectIMDataWriter.Write">
            <summary>
            Begins the data writing process
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Utility.DirectIMDataWriter.DataWriterComplete">
            <summary>
            Signals that the DataReader has finished processing the message
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.Family">
            <summary>
            Encapsulates a description of a single SNAC family
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.Family.#ctor(System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.String,System.String)">
            <summary>
            Constructs a new SNAC family
            </summary>
            <param name="ID">The ID of the SNAC family</param>
            <param name="version">The version of this family implemented by the client</param>
            <param name="toolID">The ToolID of this family</param>
            <param name="toolversion">The ToolVersion of this family</param>
            <param name="name">The human-readable name of the family</param>
            <param name="description">A human-readable description of the family</param>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.Family.ID">
            <summary>
            Gets the SNAC family ID
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.Family.Version">
            <summary>
            Gets the version of this family implemented by the client
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.Family.ToolID">
            <summary>
            Gets the ToolID of this family
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.Family.ToolVersion">
            <summary>
            Gets the ToolVersion of this family
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.Family.Name">
            <summary>
            Gets the human-readable name of this family
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.Family.Description">
            <summary>
            Gets the human-readable description of this family
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.FileTransferConnection.#ctor(csammisrun.OscarLib.ISession,System.Int32,csammisrun.OscarLib.Utility.DirectConnectionMethod,csammisrun.OscarLib.Utility.DirectConnectRole)">
            <summary>
            Initializes a new FileTransferConnection
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.FileTransferConnection.BeginSendFile">
            <summary>
            Begins to send a file through the RendezvousData's Transfer socket
            </summary>
            <remarks>This method cancels the direct connection itself rather than throw an exception</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.FileTransferConnection.SendFileTransmitterHandshake">
            <summary>
            Send an OFT PROMPT message and receive an ACK message
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.FileTransferConnection.SendFileTransmitterSendChunk">
            <summary>
            Sends a chunk of a file to the recepient
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.FileTransferConnection.SendFileTransmitterSendEnd(System.IAsyncResult)">
            <summary>
            Called when a chunk of data has been sent to the remote client
            </summary>
            <param name="res">An <see cref="T:System.IAsyncResult"/> object</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.FileTransferConnection.BeginReceiveFile">
            <summary>
            Receives the PROMPT message and responds with an ACK message, then prepares the transfer socket to receive data
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.FileTransferConnection.SendFileTransferReceive(System.IAsyncResult)">
            <summary>
            The callback function for socket reads during a file transfer
            </summary>
            <param name="res">An <see cref="T:System.IAsyncResult"/> object</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.FileTransferConnection.SendFileReceiverDone">
            <summary>
            Sends a DONE message
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.FileTransferConnection.CancelFileTransfer(System.String)">
            <summary>
            Cancel an in-progress file transfer
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.FileTransferConnection.Checksum">
            <summary>
            Performs an OSCAR File Transfer checksum 
            </summary>
            <returns>The checksum of the file</returns>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.FileTransferConnection.LocalFileName">
            <summary>
            Gets or sets the path to the local file to send or receive
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.FileTransferConnection.LocalFileNameEncoding">
            <summary>
            Gets or sets the encoding of the filename to send
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.FileTransferConnection.Capability">
            <summary>
            Returns the SendFiles capability
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.FileTransferConnection.TotalFiles">
            <summary>
            Gets the total number of files to send
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.FileTransferConnection.TotalFileSize">
            <summary>
            Gets the total number of bytes to send
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.PacketDispatcher">
            <summary>
            Provides a dispatch point for received <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/>s
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.PacketDispatcher.RegisterSnacFamilyHandler(csammisrun.OscarLib.ISnacFamilyHandler,System.UInt16)">
            <summary>
            Register a <see cref="T:csammisrun.OscarLib.ISnacFamilyHandler"/> for a SNAC family
            </summary>
            <param name="handler">The handler to register</param>
            <param name="snacFamily">The SNAC family handled by <paramref name="handler"/></param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.PacketDispatcher.DispatchPacket(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Dispatches a newly received <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> according to its SNAC family
            </summary>
            <param name="dp">The packet to dispatch</param>
            <returns><c>true</c> if the packet was handled, <c>false</c> if no handlers were registered for its SNAC family</returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ProcessQueue.Enqueue(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Enqueues a data packet to be processed by SNAC handling functions
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ProcessQueue.SendQueue(System.Object)">
            <summary>
            Sends the contents of the dispatch queue
            </summary>
            <param name="threadstate">Always <c>null</c></param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ProcessQueue.DoDispatch(System.Object)">
            <summary>
            Performs packet dispatching logic
            </summary>
            <param name="obj">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> to dispatch</param>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.RateClass">
            <summary>
            Encapsulates one of the rate classes
            </summary>
            <remarks>
            <para>If a SNAC belongs to a rate class, the RateClass object is the one responsible for actually sending it.</para>
            <para>
            The rate calculation code was taken from Kopete, KDE's native instant messanger program: 
            http://kopete.kde.org/
            </para>
            </remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.RateClass.#ctor">
            <summary>
            Creates a new rate class
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.RateClass.Enqueue(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Enqueues a DataPacket to be sent asynchronously
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.RateClass.StartLimitedTransmission">
            <summary>
            Begin sending DataPackets in server-limited time slices
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.RateClass.TimeToNextSend">
            <summary>
            Calculates the time to the next packet send, in milliseconds
            </summary>
            <returns>The time to the next packet send, in milliseconds</returns>
            <remarks>See the remarks for <see cref="T:csammisrun.OscarLib.Utility.RateClass"/> for code credit.</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.RateClass.CalculateNewLevel(System.Int32)">
            <summary>
            Calculates the sender's new rate level
            </summary>
            <param name="timediff">The time in milliseconds since the last packet send</param>
            <returns>The sender's new rate level</returns>
            <remarks>See the remarks for <see cref="T:csammisrun.OscarLib.Utility.RateClass"/> for code credit.</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.RateClass.UpdateRateInfo">
            <summary>
            Updates the sender's level and resets the last-sent time
            </summary>
            <remarks>See the remarks for <see cref="T:csammisrun.OscarLib.Utility.RateClass"/> for code credit.</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.RateClass.SetTimer(System.Object)">
            <summary>
            Sets the timer for the necessary wait period, or if there is none,
            send a packet immediately
            </summary>
            <remarks>See the remarks for <see cref="T:csammisrun.OscarLib.Utility.RateClass"/> for code credit.</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.RateClass.SendOne">
            <summary>
            Sends a single packet from the queue
            </summary>
            <returns>Returns a value indicating whether or not a packet was actually sent</returns>
            <remarks>See the remarks for <see cref="T:csammisrun.OscarLib.Utility.RateClass"/> for code credit.</remarks>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.RateClass.WindowSize">
            <summary>
            Gets or sets the size of the window used in calculating the average time between packets
            </summary>
            <remarks>
            For a screen name that has never sent any packets, the server sets this value
            to 0.
            </remarks>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.RateClass.ClearLevel">
            <summary>
            Gets or sets the level at which the client is free to resume sending data
            </summary>
            <remarks>
            As of this writing, this value is set by the server to 0x0C00
            </remarks>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.RateClass.AlertLevel">
            <summary>
            Gets or sets the level at which the client is being warned about sending data
            too fast, but is not yet being limited
            </summary>
            <remarks>
            As of this writing, this value is set by the server to 0x0900
            </remarks>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.RateClass.LimitLevel">
            <summary>
            Gets or sets the level at which the client is being limited and cannot send data
            without being disconnected from the server
            </summary>
            <remarks>
            As of this writing, this value is set by the server to 0x0700
            </remarks>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.RateClass.DisconnectLevel">
            <summary>
            Gets or sets the level at which the client will be disconnected from the server
            </summary>
            <remarks>This value is not used by the client because, by the time it becomes
            relevant, the client is already disconnected.</remarks>
            <remarks>
            As of this writing, this value is set by the server to 0x0500
            </remarks>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.RateClass.CurrentLevel">
            <summary>
            Gets or sets the client's current rate level
            </summary>
            <remarks>
            For a screen name that has never sent any packets, the server sets this value
            to 0x0D00.
            </remarks>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.RateClass.MaxLevel">
            <summary>
            Gets or sets the maximum calculable rate level
            </summary>
            <remarks>
            As of this writing, this value is set by the server to 0x1100
            </remarks>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.RateClass.LastTime">
            <summary>
            Gets or sets a value in milliseconds of the last time a packet was sent by the client
            </summary>
            <remarks>
            For a screen name that has never sent any packets, the server sets this value
            to 0x0900.
            </remarks>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.RateClass.CurrentState">
            <summary>
            Gets or sets the client's current packet sending state
            </summary>
            <remarks>
            For a screen name that has never sent any packets, the server sets this value
            to 0.
            </remarks>
        </member>
        <member name="T:csammisrun.OscarLib.MessageDeliveryUpdateEventHandler">
            <summary>
            Provides a callback for notifying the user of message delivery updates
            </summary>
            <param name="sender">The current session's <see cref="T:csammisrun.OscarLib.MessageManager"/></param>
            <param name="e">A <see cref="T:csammisrun.OscarLib.MessageStatusEventArgs"/> describing the event</param>
        </member>
        <member name="T:csammisrun.OscarLib.MessageStatusEventArgs">
            <summary>
            Details about when and to whom a message was sent
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.MessageStatusEventArgs.#ctor(csammisrun.OscarLib.Cookie,System.String)">
            <summary>
            Initializes a new MessageStatusInfo stamped with the current time
            </summary>
            <param name="cookie">The cookie uniquely identifying the message</param>
            <param name="destination">The screenname to which the message was sent</param>
        </member>
        <member name="P:csammisrun.OscarLib.MessageStatusEventArgs.Destination">
            <summary>
            Gets the screen name to which the message was sent
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.MessageStatusEventArgs.Cookie">
            <summary>
            Gets the cookie which uniquely identifies the message
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.MessageStatusEventArgs.Status">
            <summary>
            Gets the status of the message
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.MessageStatusEventArgs.Timestamp">
            <summary>
            Gets the time at which the message was sent
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.InformationMessageHandler">
            <summary>
            Provides a callback function for informational messages sent by the OSCAR library
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="message">A status message</param>
        </member>
        <member name="T:csammisrun.OscarLib.WarningMessageHandler">
            <summary>
            Provides a callback function for warning messages sent by the OSCAR library
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="errorcode">A <see cref="T:csammisrun.OscarLib.ServerErrorCode"/> describing the warning</param>
            <remarks>
            Messages received on this event are non-fatal errors, the session will continue
            </remarks>
        </member>
        <member name="T:csammisrun.OscarLib.ErrorMessageHandler">
            <summary>
            Provides a callback function for error messages sent by the OSCAR library
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="errorcode">A <see cref="T:csammisrun.OscarLib.ServerErrorCode"/> describing the error</param>
            <remarks>
            Messages received on this event are fatal, and the session will end
            </remarks>
        </member>
        <member name="T:csammisrun.OscarLib.TypingNotificationEventHandler">
            <summary>
            Provides a callback function for typing notifications sent by the server
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.LoginCompletedHandler">
            <summary>
            Provides a callback function to be called when the login sequence is completed
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
        </member>
        <member name="T:csammisrun.OscarLib.LoginStatusUpdateHandler">
            <summary>
            Provides a callback function to be called during the login sequence to alert the user
            of positive progress
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="message">A status message</param>
            <param name="percentdone">The percentage of the login progress that has been completed</param>
        </member>
        <member name="T:csammisrun.OscarLib.LoginFailedHandler">
            <summary>
            Provides a callback function to be called if the login sequence fails
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="errorcode">A description of the failure</param>
        </member>
        <member name="T:csammisrun.OscarLib.MessageReceivedHandler">
            <summary>
            Provides a callback function for receiving ICBM messages sent by the server
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.OfflineMessagesReceivedEventHandler">
            <summary>
            Handles the receipt of offline messages from the server
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.OfflineMessagesReceivedEventArgs">
            <summary>
            Contains event information for messages received offline
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.OfflineMessagesReceivedEventArgs.#ctor(System.String,System.Collections.ObjectModel.Collection{csammisrun.OscarLib.OfflineIM})">
            <summary>
            Initializes a new set of parameters for an offline messages received event
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.OfflineMessagesReceivedEventArgs.ScreenName">
            <summary>
            The screen name that received the messages
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.OfflineMessagesReceivedEventArgs.ReceivedMessages">
            <summary>
            Gets the messages that were received offline
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.FileTransferRequestReceivedHandler">
            <summary>
            Provides a callback function for receiving file transfer requests
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="sender">The <see cref="T:csammisrun.OscarLib.UserInfo"/> of the client requesting the transfer</param>
            <param name="IP">The verified IP address of the remote client</param>
            <param name="filename">The name of the file the remote client is attempting to send</param>
            <param name="filesize">The size of the file, in bytes</param>
            <param name="message">The message received with the file transfer request</param>
            <param name="key">The unique key needed to respond to this request</param>
        </member>
        <member name="T:csammisrun.OscarLib.DirectIMRequestReceivedHandler">
            <summary>
            Provides a callback function for receiving Direct IM transfer requests
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="sender">The <see cref="T:csammisrun.OscarLib.UserInfo"/> of the client requesting the session</param>
            <param name="message">The message received with the DirectIM request</param>
            <param name="key">The unique key needed to respond to this request</param>
        </member>
        <member name="T:csammisrun.OscarLib.UserInfoReceivedHandler">
            <summary>
            Provides a callback function for querying a user's information
            </summary>
            <param name="sender">The <see cref="T:csammisrun.OscarLib.StatusManager"/> object raising the event</param>
            <param name="info">A <see cref="T:csammisrun.OscarLib.UserInfoResponse"/> structure describing the user</param>
        </member>
        <member name="T:csammisrun.OscarLib.UserStatusReceivedHandler">
            <summary>
            Provides a callback function for receiving a user status notification from the server
            </summary>
            <param name="sender">The <see cref="T:csammisrun.OscarLib.StatusManager"/> object raising the event</param>
            <param name="userinfo">A <see cref="T:csammisrun.OscarLib.UserInfo"/> block describing the user</param>
        </member>
        <member name="T:csammisrun.OscarLib.SearchByEmailResultsHandler">
            <summary>
            Provides a callback function for receiving search by email results from the server
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="email">The email address that was searched for</param>
            <param name="results">The screennames that are associated with the email address</param>
        </member>
        <member name="T:csammisrun.OscarLib.PopupMessageHandler">
            <summary>
            Provides a callback function for receiving popup messages from the server
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="width">The width of the popup box, in pixels</param>
            <param name="height">The height of the popup box, in pixels</param>
            <param name="delay">The autohide delay of the popup box, in seconds</param>
            <param name="url">The URL associated with the message</param>
            <param name="message">The message to display</param>
        </member>
        <member name="T:csammisrun.OscarLib.UndeliverableMessageEventHandler">
            <summary>
            Provides a callback function for undeliverable message notices from the server
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.MessageAcceptedEventHandler">
            <summary>
            Provides a callback function for message accepted notifications from the server
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.SearchResultsHandler">
            <summary>
            Provides a callback function for directory search results sent by the server
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="results">The results of the directory search</param>
        </member>
        <member name="T:csammisrun.OscarLib.InterestsReceivedHandler">
            <summary>
            Provides a callback function for getting a list of interest items
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="results">The results of the interests request</param>
        </member>
        <member name="T:csammisrun.OscarLib.UserOfflineHandler">
            <summary>
            Provides a callback function for receiving user offline notifications
            </summary>
            <param name="sender">The <see cref="T:csammisrun.OscarLib.StatusManager"/> raising the event</param>
            <param name="userinfo">A <see cref="T:csammisrun.OscarLib.UserInfo"/> block describing the user</param>
        </member>
        <member name="T:csammisrun.OscarLib.ContactListFinishedHandler">
            <summary>
            Provides a callback function for notifiying the client once the SSI list has been sent
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="lastModificationDate">the date when the buddylist was modified at last</param>
        </member>
        <member name="T:csammisrun.OscarLib.BuddyItemReceivedHandler">
            <summary>
            Provides a callback function for receiving a new buddy item at signon
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="buddy">An <see cref="T:csammisrun.OscarLib.SSIBuddy"/> object</param>
        </member>
        <member name="T:csammisrun.OscarLib.BuddyItemRemovedHandler">
            <summary>
            Provides a callback function for removal of a buddy item from the server at runtime
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="buddy">An <see cref="T:csammisrun.OscarLib.SSIBuddy"/> object</param>
        </member>
        <member name="T:csammisrun.OscarLib.GroupItemReceivedHandler">
            <summary>
            Provides a callback function for receiving a new group item at signon
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="group">An <see cref="T:csammisrun.OscarLib.SSIGroup"/>"/&gt; object</param>
        </member>
        <member name="T:csammisrun.OscarLib.GroupItemRemovedHandler">
            <summary>
            Provides a callback function for removal of a group item from the server at runtime
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="group">An <see cref="T:csammisrun.OscarLib.SSIGroup"/> object</param>
        </member>
        <member name="T:csammisrun.OscarLib.MasterGroupItemReceivedHandler">
            <summary>
            Provides a callback function for receiving a master group item at signon
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="numgroups">The number of groups</param>
        </member>
        <member name="T:csammisrun.OscarLib.SSIEditCompleteHandler">
            <summary>
            Provides a callback function to alert the client when an SSI edit is complete
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
        </member>
        <member name="T:csammisrun.OscarLib.AuthorizationRequestReceivedHandler">
            <summary>
            Provides a callback function to aleart the client when a authorization request has been received
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="screenname">the screenname that ask for authorization</param>
            <param name="reason">the reason message</param>
        </member>
        <member name="T:csammisrun.OscarLib.AuthorizationResponseReceivedHandler">
            <summary>
            Provides a callback function to aleart the client when a authorization response has been received
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="screenname">the screenname that granted or declined the authorization</param>
            <param name="authorizationGranted">the reason message</param>
            <param name="reason"></param>
        </member>
        <member name="T:csammisrun.OscarLib.FutureAuthorizationReceivedHandler">
            <summary>
            Provides a callback function to aleart the client when a future authorization granted response has been received
            </summary>
            <param name="sess"></param>
            <param name="screenname"></param>
            <param name="reason"></param>
        </member>
        <member name="T:csammisrun.OscarLib.WarningReceivedHandler">
            <summary>
            Provides a callback function for receiving a warning notification
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="newlevel">The client's new warning level</param>
            <param name="anonymous"><c>true</c> if this warning was sent anonymously, <c>false</c> otherwise</param>
            <param name="ui">A <see cref="T:csammisrun.OscarLib.UserInfo"/> structure describing the warning user. If <paramref name="anonymous"/> is
            <c>true</c>, this structure is unpopulated</param>
        </member>
        <member name="T:csammisrun.OscarLib.MessageOfTheDayReceivedHandler">
            <summary>
            Provides a callback function for receiving the MOTD from the server at signon
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="motdtype">The type of the MOTD</param>
            <param name="message">The message string</param>
        </member>
        <member name="T:csammisrun.OscarLib.DirectoryUpdateAcknowledgedHandler">
            <summary>
            Provides a callback function for receiving directory update acknowledgements
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="success"><c>true</c> if the directory update succeded, and <c>false</c> otherwise</param>
        </member>
        <member name="T:csammisrun.OscarLib.ReportingIntervalReceivedHandler">
            <summary>
            Provides a callback function for receiving status report intervals from the server
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="hours">The minimum status reporting interval, in hours</param>
        </member>
        <member name="T:csammisrun.OscarLib.FileTransferProgressHandler">
            <summary>
            Provides a callback function for tracking the progress of a file transfer
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="cookie">The rendezvous cookie belonging to the file being transfered</param>
            <param name="BytesTransfered">The number of bytes transfered so far</param>
            <param name="BytesTotal">The total number of bytes to be transfered</param>
        </member>
        <member name="T:csammisrun.OscarLib.DirectIMIncomingMessageProgressHandler">
            <summary>
            Provides a callback function for tracking the progress of an incoming DirectIM message
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="cookie">The rendezvous cookie belonging to the DirectIM session</param>
            <param name="BytesTransfered">The number of bytes transfered so far</param>
            <param name="BytesTotal">The total number of bytes to be transfered</param>
        </member>
        <member name="T:csammisrun.OscarLib.DirectIMOutgoingMessageProgressHandler">
            <summary>
            Provides a callback function for tracking the progress of an outgoing DirectIM message
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="cookie">The rendezvous cookie belonging to the DirectIM session</param>
            <param name="BytesTransfered">The number of bytes transfered so far</param>
            <param name="BytesTotal">The total number of bytes to be transfered</param>
        </member>
        <member name="T:csammisrun.OscarLib.FileTransferCancelledHandler">
            <summary>
            Provides a callback function for receiving notification of a cancelled transfer
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="other">The <see cref="T:csammisrun.OscarLib.UserInfo"/> of the user on the other side of the connection</param>
            <param name="cookie">The rendezvous cookie belonging to the cancelled file</param>
            <param name="reason">The reason for the cancellation</param>
        </member>
        <member name="T:csammisrun.OscarLib.FileTransferCompletedHandler">
            <summary>
            Provides a callback function for receiving notification of a completed transfer
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="cookie">The rendezvous cookie belonging to the completed file</param>
        </member>
        <member name="T:csammisrun.OscarLib.DirectIMSessionChangedHandler">
            <summary>
            Provides a callback function for receiving notification of a newly connected or disconnected DirectIM session
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="other">The <see cref="T:csammisrun.OscarLib.UserInfo"/> of the user on the other side of the connection</param>
            <param name="cookie">The rendezvous cookie belonging to the session</param>
        </member>
        <member name="T:csammisrun.OscarLib.DirectIMReceivedHandler">
            <summary>
            Provides a callback function for receiving DirectIMs sent by a remote user
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="message">A <see cref="T:csammisrun.OscarLib.DirectIM"/> message</param>
        </member>
        <member name="T:csammisrun.OscarLib.ChatRoomJoinedHandler">
            <summary>
            Provides a callback function for notification of successfully joining a chat room
            </summary>
            <param name="sender">The <see cref="T:csammisrun.OscarLib.ChatRoomManager"/> raising the event</param>
            <param name="newroom">A <see cref="T:csammisrun.OscarLib.ChatRoom"/> object representing the new room</param>
        </member>
        <member name="T:csammisrun.OscarLib.ChatRoomErrorHandler">
            <summary>
            Provides a callback function for notification of an error in a chat room
            </summary>
            <param name="sender">The <see cref="T:csammisrun.OscarLib.ChatRoomManager"/> raising the event</param>
            <param name="newroom">A <see cref="T:csammisrun.OscarLib.ChatRoom"/> object representing the room in error</param>
        </member>
        <member name="T:csammisrun.OscarLib.ChatInvitationReceivedHandler">
            <summary>
            Provides a callback function for receiving chat room invitations
            </summary>
            <param name="sess">The <see cref="T:csammisrun.OscarLib.ISession"/> object raising the event</param>
            <param name="sender">A <see cref="T:csammisrun.OscarLib.UserInfo"/> object describing the inviter</param>
            <param name="roomname">The name of the chatroom</param>
            <param name="message">An invitation chatroom</param>
            <param name="encoding">The text encoding used in the chatroom</param>
            <param name="language">The language used in the chatroom</param>
            <param name="key">The unique key needed to respond to this request</param>
        </member>
        <member name="T:csammisrun.OscarLib.ProxiedSocketFactoryDelegate">
            <summary>
            Provides a factory function for connecting sockets through a proxy
            </summary>
            <param name="host">The host to which to connect</param>
            <param name="port">The port on the host to which to connect</param>
            <param name="callback">A callback in which to receive the socket and, potentially, an error message.</param>
            <returns>A TCP stream socket ready to send and receive data</returns>
            <remarks>
            <para>This delegate is intended to be used if OscarLib is part of an application that provides a global
            socket connection factory through various proxies.</para>
            <para>The <paramref name="callback"/> parameter must be a delegate that accepts a Socket and a string as its parameters.</para>
            </remarks>
        </member>
        <member name="T:csammisrun.OscarLib.PacketDispatchExceptionArgs">
            <summary>
            Encapuslates the arguments to a packet dispatch exception event
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.PacketDispatchExceptionArgs.#ctor(System.Exception,csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Initializes a new PacketDispatchExceptionArgs
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.PacketDispatchExceptionArgs.Exception">
            <summary>
            The exception that was raised during dispatch
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.PacketDispatchExceptionArgs.Packet">
            <summary>
            The data packet that caused the exception
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Attachment">
            <summary>
            A piece of data transmitted over a DirectIM connection
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Attachment.#ctor(System.Int32,System.Byte[])">
            <summary>
            Initializes a new Attachment
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Attachment.ID">
            <summary>
            Gets the ID of the attachment in the message
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Attachment.Data">
            <summary>
            Gets a new <see cref="T:System.IO.MemoryStream"/> consisting of the attachment data
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.DirectIM">
            <summary>
            An instant message sent via a direct connection
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.IM">
            <summary>
            A generic instant message
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.IM.GetEncodingFromCharset(System.UInt16,System.UInt16)">
            <summary>
            Gets an <see cref="T:System.Text.Encoding"/> from an instant message's charset and sub-charset arguments
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.IM.GetCharsetCodesFromEncoding(System.Text.Encoding,System.UInt16@,System.UInt16@)">
            <summary>
            Gets a charset and sub-charset code from an <see cref="T:System.Text.Encoding"/>
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.IM.icbmCookie">
            <summary>
            The <see cref="P:csammisrun.OscarLib.IM.Cookie"/> that uniquely identifies the message
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.IM.isAutoResponse">
            <summary>
            A value indicating whether the message was received as an
            automated response
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.IM.message">
            <summary>
            The message that was received
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.IM.screenName">
            <summary>
            The screen name that sent the message
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.IM.userInfo">
            <summary>
            A <see cref="T:csammisrun.OscarLib.UserInfo"/> object describing the message's sender
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.IM.#ctor(System.String)">
            <summary>
            Initializes a new instant message from a screenname
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.IM.#ctor(csammisrun.OscarLib.UserInfo)">
            <summary>
            Initializes a new instant message received with a <see cref="T:csammisrun.OscarLib.UserInfo"/> block
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.IM.ScreenName">
            <summary>
            Gets the screenname that sent the message
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.IM.SenderInfo">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.UserInfo"/> block describing the message sender, if one exists
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.IM.Cookie">
            <summary>
            Gets the unique cookie identifying this message
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.IM.IsAutoResponse">
            <summary>
            Gets a value indicating whether or not this message is an auto response (away message)
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.IM.Message">
            <summary>
            Gets the message that has been received
            </summary>
            <remarks>This string is encoded in UTF16-BE</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.DirectIM.#ctor(System.String,csammisrun.OscarLib.Utility.DirectIMConnection)">
            <summary>
            Initializes a new Direct IM from a screenname
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.DirectIM.ToByteArray">
            <summary>
            Creates an ODC2 packet for sending
            </summary>
            <returns></returns>
        </member>
        <member name="M:csammisrun.OscarLib.DirectIM.GetAttachmentDataLength">
            <summary>
            Returns the size of the attachment data
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.DirectIM.AttachmentsToByteArray">
            <summary>
            Returns a byte array consisting of the Direct IM attachments in ODC2 format
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.DirectIM.Connection">
            <summary>
            Gets the connection that received the message
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.DirectIM.Encoding">
            <summary>
            Gets or sets the received encoding of the message
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.DirectIM.Attachments">
            <summary>
            Gets the list of attachments to this message
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.OfflineIM">
            <summary>
            An IM that was received offline
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.OfflineIM.#ctor(System.String)">
            <summary>
            Initializes a new offline instant message from a screenname
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.OfflineIM.#ctor(csammisrun.OscarLib.UserInfo)">
            <summary>
            Initializes a new offline instant message received with a <see cref="T:csammisrun.OscarLib.UserInfo"/> block
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.OfflineIM.#ctor(csammisrun.OscarLib.IM)">
            <summary>
            Initializes a new offline instant message from a realtime instant message
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.OfflineIM.ReceivedOn">
            <summary>
            Gets the UTC-offset date at which this offline message was originally received
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Cookie">
            <summary>
            Encapsulates a uniquely identifying cookie
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Cookie.#ctor(System.Byte[])">
            <summary>
            Initializes a new <see cref="T:csammisrun.OscarLib.Cookie"/> from a byte array
            </summary>
            <remarks>This constructor makes a new copy of the <paramref name="bytes"/> array</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Cookie.CreateCookieForSending">
            <summary>
            Creates a new random <see cref="T:csammisrun.OscarLib.Cookie"/> suitable for transmission
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Cookie.CreateNullTerminatedCookieForSending">
            <summary>
            Creates a new random <see cref="T:csammisrun.OscarLib.Cookie"/> suitable for transmission
            </summary>
            <remarks>The last byte in this Cookie is guaranteed to be 0x00</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Cookie.GetReceivedCookie(System.Byte[])">
            <summary>
            Creates a new <see cref="T:csammisrun.OscarLib.Cookie"/> from received data
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Cookie.GetByteCount">
            <summary>
            Returns the number of bytes in the cookie
            </summary>
            <returns>The number of bytes in the cookie</returns>
        </member>
        <member name="M:csammisrun.OscarLib.Cookie.ToByteArray">
            <summary>
            Returns the representation of the cookie as a byte array
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Cookie.ToString">
            <summary>
            Returns the representation of the cookie as a string
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Cookie.CompareTo(System.Object)">
            <summary>
            Oye...
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:csammisrun.OscarLib.Capabilities">
            <summary>
            Describes OSCAR client capabilities
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Capabilities.None">
            <summary>
            No capabilities
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Capabilities.VoiceChat">
            <summary>
            Client supports voice chat
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Capabilities.DirectPlay">
            <summary>
            Client supports direct play service
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Capabilities.SendFiles">
            <summary>
            Client supports sendfile-style file transfer
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Capabilities.GetFiles">
            <summary>
            Client supports getfile-style file transfer
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Capabilities.RouteFinder">
            <summary>
            Client supports route finder (ICQ clients only)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Capabilities.DirectIM">
            <summary>
            Client supports DirectIM and IMImage
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Capabilities.BuddyIcon">
            <summary>
            Client supports buddy icon service messages
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Capabilities.StocksAddIn">
            <summary>
            Client supports the stock ticker add-in
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Capabilities.Channel2Ext">
            <summary>
            Client supports channel 2 extended messages (ICQ only)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Capabilities.Games">
            <summary>
            Client supports the games service
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Capabilities.BuddyListTransfer">
            <summary>
            Client supports buddy list transfers
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Capabilities.AIMtoICQ">
            <summary>
            Signals the server to allow AIM and ICQ interoperation
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Capabilities.UTF8">
            <summary>
            Client supports UTF-8 encoded messages
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Capabilities.Unknown1">
            <summary>
            Unknown capability (ICQ only)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Capabilities.Unknown2">
            <summary>
            Unknown capability (ICQ only)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Capabilities.Unknown3">
            <summary>
            Unknown capability (ICQ only)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Capabilities.Unknown4">
            <summary>
            Unknown capability (ICQ only)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Capabilities.Chat">
            <summary>
            Client supports chat service
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Capabilities.TrillianSecureIM">
            <summary>
            Client supports SecureIM channel-2 messages (Trillian only)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Capabilities.SIMKopete">
            <summary>
            SIM/Kopete clients set this capability to identify themselves
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Capabilities.OscarLib">
            <summary>
            OscarLib-based clients set this capability to identify themselves
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Capabilities.iChat">
            <summary>
            iChat support? Okay then
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Capabilities.RTF">
            <summary>
            Client supports RTF messages (ICQ only)
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.ChatRoomChangedHandler">
            <summary>
            Handles a chat room change event
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.ChatRoom">
            <summary>
            Describes the properties of an OSCAR chat room
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ChatRoom.DEFAULT_EXCHANGE">
            <summary>
            A default exchange number to use when none is specified
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ChatRoom.CHATROOM_CHARSET1">
            <summary>
            Value:  ASCII string
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ChatRoom.CHATROOM_CHARSET2">
            <summary>
            Value:  ASCII string
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ChatRoom.CHATROOM_CONTENTTYPE">
            <summary>
            Value:  ASCII string
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ChatRoom.CHATROOM_CREATION_TIME">
            <summary>
            Value: uint
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ChatRoom.CHATROOM_DISPLAYNAME">
            <summary>
            Value:  ASCII string
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ChatRoom.CHATROOM_FLAGS">
            <summary>
            Value: ushort
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ChatRoom.CHATROOM_LANGUAGE1">
            <summary>
            Value:  ASCII string
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ChatRoom.CHATROOM_LANGUAGE2">
            <summary>
            Value:  ASCII string
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ChatRoom.CHATROOM_MAX_OCCUPANTS">
            <summary>
            Value: ushort
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ChatRoom.CHATROOM_MESSAGE_LENGTH">
            <summary>
            Value: ushort
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ChatRoom.CHATROOM_PERMISSIONS">
            <summary>
            Value:  byte
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ChatRoom.AolUriParser">
            <summary>
            Defines a regular expression to parse an aol:// URI
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoom.#ctor(System.String)">
            <summary>
            Create a new <see cref="T:csammisrun.OscarLib.ChatRoom"/> from an aol:// URI
            </summary>
            <param name="uri">A URI using the aol:// scheme</param>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoom.#ctor(System.String,System.UInt16)">
            <summary>
            Creates a new ChatRoomInfo
            </summary>
            <param name="roomName">The name of the chat room</param>
            <param name="exchange">The exchange on which to create the room</param>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoom.#ctor(System.String,System.UInt16,System.Text.Encoding,System.Globalization.CultureInfo)">
            <summary>
            Creates a new ChatRoomInfo
            </summary>
            <param name="roomName">The name of the chat room</param>
            <param name="exchange">The exchange on which to create the room</param>
            <param name="charset">The character set used by the room</param>
            <param name="language">The language used by the room</param>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoom.#ctor(csammisrun.OscarLib.Utility.ByteStream)">
            <summary>
            Creates a new <see cref="T:csammisrun.OscarLib.ChatRoom"/> from a received <see cref="T:csammisrun.OscarLib.Utility.ByteStream"/>
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoom.LeaveRoom">
            <summary>
            Disconnects from the chat room
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoom.SendMessage(System.String)">
            <summary>
            Send a message to this chatroom using the room's established character set and language
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoom.SendMessage(System.String,System.Text.Encoding,System.Globalization.CultureInfo)">
            <summary>
            Send a message to this chatroom using a specific character set and language
            </summary>
            <param name="message">The message to send</param>
            <param name="charset">The character set in which to encode the message</param>
            <param name="language">The language of the message</param>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoom.SendMessage(System.String,System.Text.Encoding,System.String)">
            <summary>
            Send a message to this chatroom using a specific character set and language
            </summary>
            <param name="message">The message to send</param>
            <param name="charset">The character set in which to encode the message</param>
            <param name="language">The two-letter code of the language of the message</param>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoom.ProcessRoomUpdate(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes an update to the chat room information -- SNAC(0E,02)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object containing SNAC(0E,02)</param>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoom.ProcessUsersJoined(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes a list of users who have joined a chat room -- SNAC(0E,03)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object containing SNAC(0E,03)</param>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoom.ProcessUsersLeft(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes a list of users who have left a chat room -- SNAC(0E,04)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object containing SNAC(0E,04)</param>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoom.ProcessIncomingMessage(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes a message received from a chat room -- SNAC(0E,06)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object containing SNAC(0E,06)</param>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoom.WriteToByteStream(csammisrun.OscarLib.Utility.ByteStream)">
            <summary>
            Writes the ChatRoomInfo's parameters to a byte stream for transmission
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ChatRoom.UserJoined">
            <summary>
            Raised when a user joins the chat room
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ChatRoom.UserLeft">
            <summary>
            Raised when a user leaves the chat room
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ChatRoom.MessageReceived">
            <summary>
            Raised when a message is received by the chat room
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.ChatRoom.FullName">
            <summary>
            The fully-qualified name of the chat room
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.ChatRoom.DisplayName">
            <summary>
            The name of the chat room that is fit to display to the client
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.ChatRoom.Exchange">
            <summary>
            The exchange number of the chat room
            </summary>
            <remarks>Ideally, neither the exchange nor the <see cref="P:csammisrun.OscarLib.ChatRoom.Instance"/> number
            should be exposed to the user</remarks>
        </member>
        <member name="P:csammisrun.OscarLib.ChatRoom.Instance">
            <summary>
            The instance number of the chat room
            </summary>
            <remarks>Ideally, neither the instance nor the <see cref="P:csammisrun.OscarLib.ChatRoom.Exchange"/> number
            should be exposed to the user</remarks>
        </member>
        <member name="P:csammisrun.OscarLib.ChatRoom.CreationTime">
            <summary>
            The GMT creation time of the chat room
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.ChatRoom.CreationPermissions">
            <summary>
            A value indicating whether or not new chat rooms can be created
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.ChatRoom.Flags">
            <summary>
            The flags of the chat room
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.ChatRoom.MaxMessageLength">
            <summary>
            The maximum message length that can be sent to the room
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.ChatRoom.MaxOccupants">
            <summary>
            The maximum number of users that can join the chat room
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.ChatRoom.Occupants">
            <summary>
            Gets the list of current room members
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.FLAPHeader">
            <summary>
            Represents a FLAP header. FLAP is the lowest level of communication in the OSCAR protocol
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.FLAPHeader.IDByte">
            <summary>
            IDByte is the frame-start sign, and is always 0x2A
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.FLAPHeader.Channel">
            <summary>
            Channels are used to identify different types of communication on a single wire
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.FLAPHeader.DatagramSequenceNumber">
            <summary>
            Datagram sequence number, used for error detection
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.FLAPHeader.DataSize">
            <summary>
            The size, in bytes, of the data which follows the header
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.FLAPChannels">
            <summary>
            The five possible FLAP communication channels
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.SNACHeader">
            <summary>
            Represents a SNAC header. A SNAC is the basic communication unit sent between client and server
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SNACHeader.FamilyServiceID">
            <summary>
            Identifies which service group this SNAC belongs to
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SNACHeader.FamilySubtypeID">
            <summary>
            Further divides the service group identified by FamilyServiceID
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SNACHeader.Flags">
            <summary>
            General SNAC properties
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SNACHeader.RequestID">
            <summary>
            Used in request-response exchanges, the client sets the RequestID and the server responds with a SNAC having an identical RequestID
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.DelayedFrame">
            <summary>
            Encapsulates a delayed frame that will be sent after a successful service request
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.DirectoryEntry">
            <summary>
            Encapsulates the result of a directory search
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.DirectoryEntry.Address">
            <summary>
            Street address
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.DirectoryEntry.City">
            <summary>
            City of residence
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.DirectoryEntry.Country">
            <summary>
            Country of residence
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.DirectoryEntry.Email">
            <summary>
            Email address
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.DirectoryEntry.FirstName">
            <summary>
            First name
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.DirectoryEntry.Interest">
            <summary>
            Interest
            </summary>
            <remarks>Format unknown</remarks>
        </member>
        <member name="F:csammisrun.OscarLib.DirectoryEntry.LastName">
            <summary>
            Last name
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.DirectoryEntry.MaidenName">
            <summary>
            Maiden name
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.DirectoryEntry.MiddleName">
            <summary>
            Middle name
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.DirectoryEntry.NickName">
            <summary>
            Nick name
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.DirectoryEntry.Region">
            <summary>
            The region of the strings
            </summary>
            <remarks>This will most likely be "us-ascii"</remarks>
        </member>
        <member name="F:csammisrun.OscarLib.DirectoryEntry.ScreenName">
            <summary>
            User's screenname
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.DirectoryEntry.State">
            <summary>
            State of residence
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.DirectoryEntry.ZIPCode">
            <summary>
            ZIP code
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.DirectoryEntry.#ctor(System.String)">
            <summary>
            Creates a new DirectoryEntry structure and initializes its members to <paramref name="init"/>
            </summary>
            <param name="init">The string with which to initialize the structure members</param>
        </member>
        <member name="T:csammisrun.OscarLib.Environ">
            <summary>
            Available to every class in OscarLib to handle the problem that the Compact Framework
            doesn't support Environment.NewLine
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Environ.NewLine">
            <summary>
            A string describing the newline character sequence on the local platform
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.RendezvousType">
            <summary>
            Describes one of the types of Rendezvous connections
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.RendezvousType.Invite">
            <summary>
            The message is an invitation
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.RendezvousType.Cancel">
            <summary>
            The message is a cancellation
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.RendezvousType.Accept">
            <summary>
            The message is accepting an invitation
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.RendezvousType.Unknown">
            <summary>
            Unknown message type
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.RendezvousSequence">
            <summary>
            Describes Rendezvous sequence data
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.RendezvousSequence.DirectOrStage1">
            <summary>
            This Rendezvous message is setting up for a direct connection or stage 1 proxy connection
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.RendezvousSequence.Stage2">
            <summary>
            This Rendezvous message is requesting a stage 2 proxy redirection
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.RendezvousSequence.Stage3">
            <summary>
            This Rendezvous message is requesting a stage 3 proxy redirection
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.RendezvousData.TypeFromUshort(System.UInt16)">
            <summary>
            Returns the <see cref="T:csammisrun.OscarLib.Utility.RendezvousType"/> representation of a ushort
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.RendezvousData.SequenceFromUshort(System.UInt16)">
            <summary>
            Returns the <see cref="T:csammisrun.OscarLib.Utility.RendezvousSequence"/> representation of a ushort
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.RendezvousData.UshortFromType(csammisrun.OscarLib.Utility.RendezvousType)">
            <summary>
            Returns the ushort representation of a <see cref="T:csammisrun.OscarLib.Utility.RendezvousType"/>
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.RendezvousData.UshortFromSequence(csammisrun.OscarLib.Utility.RendezvousSequence)">
            <summary>
            Returns the ushort representation of a <see cref="T:csammisrun.OscarLib.Utility.RendezvousSequence"/>
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.RendezvousData.#ctor">
            <summary>
            Initializes a new RendezvousData object with a random cookie
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.RendezvousData.ParentSession">
            <summary>
            Gets or sets the <see cref="T:csammisrun.OscarLib.ISession"/> that owns this connection
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.RendezvousData.Cookie">
            <summary>
            Gets or sets the eight-byte cookie that identifies this connection
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.RendezvousData.Sequence">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.Utility.RendezvousSequence"/> of this connection
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.RendezvousData.UseProxy">
            <summary>
            Gets or sets a value indicating whether the AOL proxy should be used to route data
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.RendezvousData.UserInfo">
            <summary>
            Gets or sets the <see cref="P:csammisrun.OscarLib.Utility.RendezvousData.UserInfo"/> of the remote client
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.RendezvousData.Capability">
            <summary>
            Gets or sets the <see cref="T:csammisrun.OscarLib.Capabilities"/> that this connection is handling
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.ICQFlags">
            <summary>
            Describes settable ICQ flags
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQFlags.Normal">
            <summary>
            No special flags are set
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQFlags.WebAware">
            <summary>
            Client is Web Aware
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQFlags.ShowIP">
            <summary>
            Server can reveal client's IP address
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQFlags.Birthday">
            <summary>
            Today is the user's birthday
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQFlags.ActiveWebfront">
            <summary>
            User has an ICQ homepage
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQFlags.DCDisabled">
            <summary>
            Direct Connect is disabled
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQFlags.DCAuthorizationOnly">
            <summary>
            Direct Connect requires authorization
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQFlags.DCContactsOnly">
            <summary>
            Direct Connect with users on this client's contact list only
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.ICQStatus">
            <summary>
            Describes the client's online state
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQStatus.Online">
            <summary>
            Client is online
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQStatus.Away">
            <summary>
            Client is away
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQStatus.DoNotDisturb">
            <summary>
            Client has set the "Do Not Disturb" flag
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQStatus.NotAvailable">
            <summary>
            Client is not available
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQStatus.Occupied">
            <summary>
            Client is occupied
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQStatus.FreeForChat">
            <summary>
            Client is free for chat
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQStatus.Invisible">
            <summary>
            Client is invisible
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.ICQInfo">
            <summary>
            ICQ information
            </summary>
            <remarks>TODO:  Needs an overhaul</remarks>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.Age">
            <summary>
            Age
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.BirthDay">
            <summary>
            Birthday
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.BirthMonth">
            <summary>
            Birth month
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.BirthYear">
            <summary>
            Birth year
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.EmailAddresses">
            <summary>
            Email addresses
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.Firstname">
            <summary>
            First name
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.Gender">
            <summary>
            Gender
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.HomeAddress">
            <summary>
            Home street address
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.HomeCity">
            <summary>
            Home city
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.HomeCountry">
            <summary>
            Home country
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.HomeFax">
            <summary>
            Home fax number
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.HomePhone">
            <summary>
            Home phone number
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.HomeState">
            <summary>
            Home state
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.HomeZip">
            <summary>
            Home postal code
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.Information">
            <summary>
            Information
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.Language1">
            <summary>
            Language 1
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.Language2">
            <summary>
            Language 2
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.Language3">
            <summary>
            Language 3
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.Lastname">
            <summary>
            Last name
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.MobilePhone">
            <summary>
            Mobile phone
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.Nickname">
            <summary>
            Nickname
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.PersonalURL">
            <summary>
            Homepage
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.Screenname">
            <summary>
            Screenname
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.WorkAddress">
            <summary>
            Work street address
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.WorkCity">
            <summary>
            Work city
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.WorkCompany">
            <summary>
            Work company
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.WorkCountry">
            <summary>
            Work country
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.WorkDivision">
            <summary>
            Work division
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.WorkFax">
            <summary>
            Work fax
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.WorkPhone">
            <summary>
            Work phone
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.WorkPosition">
            <summary>
            Work position
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.WorkState">
            <summary>
            Work state
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.WorkWebsite">
            <summary>
            Work website
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ICQInfo.WorkZip">
            <summary>
            Work postal code
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.InterestItem">
            <summary>
            Encapsulates an interest involved in user searching (SNAC family 0x000F)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.InterestItem.Group">
            <summary>
            <c>true</c> if this item is a group of interests, <c>false</c> if it is a single interest
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.InterestItem.ID">
            <summary>
            The ID of the group or, if this is a single interest, the ID of the parent group
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.InterestItem.Name">
            <summary>
            The name of the group or the interest
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.OSCARIdentification">
            <summary>
            Encapsulates identification information needed by an OSCAR client
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.OSCARIdentification.ClientBuild">
            <summary>
            Build number
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.OSCARIdentification.ClientDistribution">
            <summary>
            Client distribution number
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.OSCARIdentification.ClientId">
            <summary>
            The client ID number
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.OSCARIdentification.ClientLesser">
            <summary>
            Lesser version number
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.OSCARIdentification.ClientMajor">
            <summary>
            Major version number
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.OSCARIdentification.ClientMinor">
            <summary>
            Minor version number
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.OSCARIdentification.ClientName">
            <summary>
            The name of the client
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.PrivacySetting">
            <summary>
            Describes the available privacy settings
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.PrivacySetting.AllowAllUsers">
            <summary>
            All users are allowed to contact this client
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.PrivacySetting.BlockAllUsers">
            <summary>
            No users are allowed to contact this client
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.PrivacySetting.AllowOnlyPermitList">
            <summary>
            Only the users on this client's permit list are allowed to make contact
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.PrivacySetting.BlockOnlyDenyList">
            <summary>
            Only the users on this client's block list cannot make contact
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.PrivacySetting.AllowOnlyBuddyList">
            <summary>
            Only the users on this client's buddy list are allowed to make contact
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.SNACFamily">
            <summary>
            The main SNAC families
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SNACFamily.BasicOscarService">
            <summary>
            Basic control service - service negotiation, rate control, warnings
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SNACFamily.LocationService">
            <summary>
            This service is used to get/change user online data (like profile or capabilities or AIM away messages)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SNACFamily.BuddyListManagementService">
            <summary>
            This service is used to manage old-style buddy lists and for presense online/offline/status notifications
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SNACFamily.ICBMService">
            <summary>
            Used for Instant Messages (IM) and warnings
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SNACFamily.AdvertisementsService">
            <summary>
            This service is depricated. AOL clients currently use web services to get ad data (AIM Only)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SNACFamily.InvitationService">
            <summary>
            This is used to send AIM service invitation email to a friend (AIM Only)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SNACFamily.AdministrativeService">
            <summary>
            This service is used to manage AIM user account data (screenname formating, email) and for account confirmation (AIM Only)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SNACFamily.PopupNoticesService">
            <summary>
            Servers use this small family to popup a special message window on the client side (AIM Only)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SNACFamily.PrivacyManagementService">
            <summary>
            Client use this message to manage its visible/invisible lists and user class permissions
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SNACFamily.UserLookupService">
            <summary>
            This service used by old AIM clients to search users by email (not used anymore) (AIM Only)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SNACFamily.UsageStatsService">
            <summary>
            This is used by AOL to gather statistic information about client usage
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SNACFamily.TranslationService">
            <summary>
            This service is depricated (AIM Only)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SNACFamily.ChatService">
            <summary>
            AIM chat service (get/send messages, join/left notification, warnings, room update info, etc) (AIM Only)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SNACFamily.DirectoryUserSearch">
            <summary>
            This service is used by modern AIM clients for user search (by email, by name/details, by interests) (AIM Only)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SNACFamily.SSIService">
            <summary>
            This service allows clients to store their contact list data locally (buddies, groups, comments, visibility, invisibility, ignore, perms mask) on the server
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SNACFamily.ICQExtensionsService">
            <summary>
            This service is used by ICQ clients for compatibility with the old Mirabilis ICQ server database engine (info, search, offline messages, sms and other) (ICQ Only)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SNACFamily.AuthorizationRegistrationService">
            <summary>
            This service is used for client registration/authorization
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SNACFamily.EmailService">
            <summary>
            This service is completely undocumented in the Russian docs, but libfaim evidently does something with it
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SNACFamily.BroadcastService">
            <summary>
            This is an IServerd extension to allow a client to send broadcasts. If a client has permissions to send broadcasts, it will get this family in SNAC(01,03)
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.GenericServiceControls">
            <summary>
            The subtypes for family 0x01
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.ClientServerError">
            <summary>
            Client / Server error. Can be sent by client or server.
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.ClientOnline">
            <summary>
            Client is now online and ready for normal function (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.SupportedSNACFamiles">
            <summary>
            List of server-supported SNAC familes (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.NewServiceRequest">
            <summary>
            Request for new service (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.NewServiceResponse">
            <summary>
            Redirection for 0x04 subtype (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.RateLimitRequest">
            <summary>
            Request rate limits information (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.RateLimitResponse">
            <summary>
            Rate limits information response (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.AcknowledgeRateLimits">
            <summary>
            Acknowledge rate limitations (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.DeleteRateLimitRequest">
            <summary>
            Delete rate limits group (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.RateLimitChangedResponse">
            <summary>
            Rate information changed / rate limit warning (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.PauseRequest">
            <summary>
            Server pause command (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.PauseResponse">
            <summary>
            Client pause acknowledgement (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.ResumeRequest">
            <summary>
            Server resume command  (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.OwnInformationRequest">
            <summary>
            Request own online information (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.OwnInformationResponse">
            <summary>
            Requested online info response (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.EvilNotification">
            <summary>
            Evil notification (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.SetIdleTime">
            <summary>
            Set idle time (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.MigrationNotice">
            <summary>
            Migration notice and information (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.MessageOfTheDay">
            <summary>
            Message of the day (MOTD) (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.SetPrivacyFlags">
            <summary>
             Set privacy flags (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.WellKnownURLs">
            <summary>
            Well-known URLs (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.NoOp">
            <summary>
            No operation (NOP) (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.ServerServicesVersionRequest">
            <summary>
            Request server services versions (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.ServerServicesVersionResponse">
            <summary>
            Server services versions (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.SetExtendedStatus">
            <summary>
            Set extended status (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.ClientVerificationRequest">
            <summary>
            Client verification request (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.ClientVertificationResponse">
            <summary>
            Client verification response (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.GenericServiceControls.ClientExtendedStatus">
            <summary>
             Client's extended status from server (server -> client)
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.LocationServices">
            <summary>
            The subtypes for family 0x02
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.LocationServices.ClientServerError">
            <summary>
            Client / Server error. Can be sent by client or server.
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.LocationServices.LimitationsParamsRequest">
            <summary>
            Limitations / parameters request (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.LocationServices.LimitationsParamsResponse">
            <summary>
            Limitations / parameters response (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.LocationServices.SetUserInformation">
            <summary>
            Set own user information (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.LocationServices.BasicInformationRequest">
            <summary>
            Request a client's user information (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.LocationServices.UserInformationResponse">
            <summary>
            User information response (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.LocationServices.WatcherSubRequest">
            <summary>
            Watcher subrequest (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.LocationServices.WatcherReply">
            <summary>
            Watcher notification (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.LocationServices.UpdateDirectoryInfoRequest">
            <summary>
            Update directory information (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.LocationServices.UpdateDirectoryInfoResponse">
            <summary>
            Update directory information response (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.LocationServices.SNAC020CRequest">
            <summary>
            Query for SNAC(0x02,0x0C) (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.LocationServices.SNAC020BReply">
            <summary>
            Reply to SNAC(0x02,0x0B) (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.LocationServices.UpdateInterestsRequest">
            <summary>
            Update user directory interests (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.LocationServices.UpdateInterestsResponse">
            <summary>
            Update user directory interests response (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.LocationServices.ExtendedInformationRequest">
            <summary>
            User information query (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.BuddyListManagementService.ClientServerError">
            <summary>
            Client / Server error. Can be sent by client or server.
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.AdvertisementsService.ClientServerError">
            <summary>
            Client / Server error. Can be sent by client or server.
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.AdvertisementsService.AdRequest">
            <summary>
            Request for ads (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.AdvertisementsService.AdResponse">
            <summary>
            Server sends requested ads in GIF format (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.InvitationService.ClientServerError">
            <summary>
            Client / Server error. Can be sent by client or server.
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.InvitationService.InvitationRequest">
            <summary>
            Invite a friend to join AIM (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.InvitationService.InvitationResponse">
            <summary>
            Invitiation acknowledgement (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.AdministrativeService.ClientServerError">
            <summary>
            Client / Server error. Can be sent by client or server.
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.AdministrativeService.AccountInfoRequest">
            <summary>
            Request account information (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.AdministrativeService.AccountInfoResponse">
            <summary>
            Requested account information (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.AdministrativeService.AccountInfoChangeRequest">
            <summary>
            Request to change account information (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.AdministrativeService.AccountInfoChangeResponse">
            <summary>
            Account information change acknowledgement (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.AdministrativeService.AccountConfirmRequest">
            <summary>
            Request to confirm an account (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.AdministrativeService.AccountConfirmResponse">
            <summary>
            Account confirmation acknowledgement (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.AdministrativeService.AccountDeleteRequest">
            <summary>
            Request to delete an account (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.AdministrativeService.AccountDeleteResponse">
            <summary>
            Account deletion acknowledgement (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.PopupNoticesService.ClientServerError">
            <summary>
            Client / Server error. Can be sent by client or server.
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.PopupNoticesService.DisplayPopupMessage">
            <summary>
            A command to display a popup message (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.PrivacyManagementService.ClientServerError">
            <summary>
            Client / Server error. Can be sent by client or server.
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.PrivacyManagementService.ServiceParametersRequest">
            <summary>
            Request service parameters (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.PrivacyManagementService.ServiceParametersResponse">
            <summary>
            Requested service parameters (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.PrivacyManagementService.SetGroupPermissionsMask">
            <summary>
            Set group permissions mask (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.PrivacyManagementService.AddToVisibleList">
            <summary>
            Add to visible list (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.PrivacyManagementService.DeleteFromVisibleList">
            <summary>
            Delete from visible list (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.PrivacyManagementService.AddToInvisibleList">
            <summary>
            Add to invisible list (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.PrivacyManagementService.DeleteFromInvisibleList">
            <summary>
            Delete from invisible list (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.PrivacyManagementService.ServiceError">
            <summary>
            Error in service (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.PrivacyManagementService.AddToVisibleList2">
            <summary>
            Add to visible list (?) (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.PrivacyManagementService.DeleteFromVisibleList2">
            <summary>
            Delete from visible list (?) (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.UserLookupService.ClientServerError">
            <summary>
            Client / Server error. Can be sent by client or server.
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.UserLookupService.FindUserByEmailRequest">
            <summary>
            Search for a user by e-mail (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.UserLookupService.FindUserByEmailResponse">
            <summary>
            Search results (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.UsageStatsService.ClientServerError">
            <summary>
            Client / Server error. Can be sent by client or server.
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.UsageStatsService.SetMinimumInterval">
            <summary>
            Set minimum reporting interval (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.UsageStatsService.UsageReport">
            <summary>
            Usage stats report (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.UsageStatsService.UsageReportAck">
            <summary>
            Acknowledgement of receipt of a usage stats report (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.TranslationService.ClientServerError">
            <summary>
            Client / Server error. Can be sent by client or server.
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.TranslationService.TranslateRequest">
            <summary>
            Client translation request (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.TranslationService.TranslateResponse">
            <summary>
            Server translation response
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.ChatNavigationService.ClientServerError">
            <summary>
            Client / Server error. Can be sent by client or server.
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.ChatNavigationService.LimitsRequest">
            <summary>
            Request limitations (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.ChatNavigationService.ExchangeInformationRequest">
            <summary>
            Request exchange information (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.ChatNavigationService.RoomInformationRequest">
            <summary>
            Request room information (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.ChatNavigationService.ExtendedRoomInformationRequest">
            <summary>
            Request extended room information (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.ChatNavigationService.MemberListRequest">
            <summary>
            Request a room's member list (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.ChatNavigationService.RoomSearchRequest">
            <summary>
            Search for a room (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.ChatNavigationService.CreateRoomRequest">
            <summary>
            Create a new room (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.ChatNavigationService.InformationResponse">
            <summary>
            Server's response to requested information (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.ChatService.ClientServerError">
            <summary>
            Client / Server error. Can be sent by client or server.
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.ChatService.RoomInformationUpdate">
            <summary>
            Room information update (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.ChatService.UsersJoinedNotification">
            <summary>
            Notification of users joining the room (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.ChatService.UsersLeftNotification">
            <summary>
            Notification of users leaving the room (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.ChatService.MessageFromClient">
            <summary>
            Channel message from client (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.ChatService.MessageToClient">
            <summary>
            Channel message to client (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.ChatService.EvilRequest">
            <summary>
            Evil request (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.ChatService.EvilResponse">
            <summary>
            Evil response (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.ChatService.ChatMessage">
            <summary>
            Chat message, data or error. Can be sent by client or server.
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.DirectorySearch.ClientServerError">
            <summary>
            Client / Server error. Can be sent by client or server.
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.DirectorySearch.SearchUserRequest">
            <summary>
            Client "search for user" request (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.DirectorySearch.SearchUserResponse">
            <summary>
            Server response to search request (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.DirectorySearch.InterestsListRequest">
            <summary>
            Request a client's interests list from the server (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.DirectorySearch.InterestsListResponse">
            <summary>
            Server response to interests list request (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SSIService.ClientServerError">
            <summary>
            Client / Server error. Can be sent by client or server.
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SSIService.ServiceParametersRequest">
            <summary>
            Request service parameters (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SSIService.ServiceParametersResponse">
            <summary>
            Service parameters response (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SSIService.ContactListInitialRequest">
            <summary>
            Request the contact list (first time) (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SSIService.ContactListCheckout">
            <summary>
            Contact list checkout (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SSIService.ContactListResponse">
            <summary>
            Server contact list response (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SSIService.LoadContactList">
            <summary>
            Load server-side copy of contact list after successful login (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SSIService.SSIEditAddItems">
            <summary>
            SSI Edit:  Add items. Can be sent by client or server.
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SSIService.SSIEditUpdateGroupHeader">
            <summary>
            SSI Edit:  Update group header. Can be sent by client or server.
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SSIService.SSIEditRemoveItem">
            <summary>
            SSI Edit:  Remove item. Can be sent by client or server.
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SSIService.SSIEditAcknowledge">
            <summary>
            SSI Edit acknowledgement (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SSIService.LocalSSIUpToDate">
            <summary>
            Client's local SSI is up-to-date (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SSIService.ContactsEditStart">
            <summary>
            Edit contacts - begin transaction. Can be sent by client or server.
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SSIService.ContactsEditEnd">
            <summary>
            Edit contacts - end transation. Can be sent by client or server.
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SSIService.SendFutureAuthorizationGrant">
            <summary>
            Grant future authorization to client (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SSIService.FutureAuthorizationGranted">
            <summary>
            Future authorization granted (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SSIService.RemoveSelfFromContact">
            <summary>
            Delete yourself from another client's contact list (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SSIService.SendAuthorizationRequest">
            <summary>
            Send authorization request (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SSIService.AuthorizationRequest">
            <summary>
            Authorization request (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SSIService.SendAuthorizationResponse">
            <summary>
            Send authorization reply (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SSIService.AuthorizationResponse">
            <summary>
            Authorization reply (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SSIService.YouWereAddedMessage">
            <summary>
            "You were added" (to another client's contact list) message (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.ICQExtensionsService.ClientServerError">
            <summary>
            Client / Server error. Can be sent by client or server.
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.ICQExtensionsService.MetaInformationRequest">
            <summary>
            Meta information request (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.ICQExtensionsService.MetaInformationResponse">
            <summary>
            Meta information response (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.AuthorizationRegistrationService.ServerError">
            <summary>
            Server error, registration refused. Can be sent by client or server.
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.AuthorizationRegistrationService.LoginRequest">
            <summary>
            Client login request, MD5 login sequence (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.AuthorizationRegistrationService.LoginResponse">
            <summary>
            Server login (or error) reply (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.AuthorizationRegistrationService.NewUINRequest">
            <summary>
            Request a new UIN (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.AuthorizationRegistrationService.NewUINResponse">
            <summary>
            New UIN response (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.AuthorizationRegistrationService.MD5AuthkeyRequest">
            <summary>
            Request an MD5 authkey (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.AuthorizationRegistrationService.MD5AuthkeyResponse">
            <summary>
            Server sends an MD5 authkey (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.AuthorizationRegistrationService.SecureIDRequest">
            <summary>
            Server requests a SecureID (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.AuthorizationRegistrationService.SecureIDResponse">
            <summary>
            Client sends a SecureID (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.BroadcastService.ServerError">
            <summary>
            Server error (server -> client)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.BroadcastService.BroadcastMessageRequest">
            <summary>
            Send broadcast message to server (client -> server)
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.BroadcastService.BroadcastMessageResponse">
            <summary>
            Server broadcast reply (server -> client)
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.SSIItem">
            <summary>
            Encapsulates a generic SSI item
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SSIItem.GroupID">
            <summary>
            The item's Group ID
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SSIItem.ItemID">
            <summary>
            The item's Item ID
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SSIItem.ItemType">
            <summary>
            The type of the item
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SSIItem.Name">
            <summary>
            The name of this item
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.SSIItem.Tlvs">
            <summary>
            The TLVs included with this SSI item
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.TypingNotification">
            <summary>
            Describes the types of Typing Notification messages that can be sent or received
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.TypingNotification.TypingFinished">
            <summary>
            Typing has finished
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.TypingNotification.TextTyped">
            <summary>
            Text was typed
            </summary>
            <remarks>
            This notification is sent when a client has paused in typing, but not finished.
            Gaim indicates this state by changing the color of the remote client's screenname to orange.
            </remarks>
        </member>
        <member name="F:csammisrun.OscarLib.TypingNotification.TypingStarted">
            <summary>
            Typing has started
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.UserInfo">
            <summary>
            Encapsulates an AIM/ICQ user information block
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.UserInfo.ScreenName">
            <summary>
            Gets the user's screenname
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.UserInfo.WarningLevel">
            <summary>
            Gets the user's current warning level
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.UserInfo.Class">
            <summary>
            Gets the user's <see cref="T:csammisrun.OscarLib.UserClass"/>
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.UserInfo.CreateTime">
            <summary>
            Gets date and time of the user's account creation
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.UserInfo.SignonTime">
            <summary>
            Gets the user's signon time (UTC)
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.UserInfo.IdleTime">
            <summary>
            Gets the user's idle time, in minutes
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.UserInfo.RegisterTime">
            <summary>
            Gets the date and time when this account was registered ("Member Since")
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.UserInfo.ICQUserStatus">
            <summary>
            Gets an ICQ user's status
            </summary>
            <remarks>This property will be empty (0) for an AIM user</remarks>
        </member>
        <member name="P:csammisrun.OscarLib.UserInfo.ExternalIPAddress">
            <summary>
            Gets an ICQ user's external IP address
            </summary>
            <remarks>This property will be empty for an AIM user</remarks>
        </member>
        <member name="P:csammisrun.OscarLib.UserInfo.DC">
            <summary>
            Gets an ICQ user's DC (DirectConnect) info
            </summary>
            <remarks>This property will be <c>null</c> for an AIM user</remarks>
        </member>
        <member name="P:csammisrun.OscarLib.UserInfo.ClientCapabilities">
            <summary>
            Gets the remote client's capability list
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.UserInfo.OnlineTime">
            <summary>
            Gets the user's online time, in seconds
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.UserInfo.Icon">
            <summary>
            Gets the user's buddy icon information
            </summary>
            <remarks>This property is <c>null</c> if no icon information has been received</remarks>
        </member>
        <member name="P:csammisrun.OscarLib.UserInfo.AvailableMessage">
            <summary>
            Gets the user's "available" message
            </summary>
            <remarks>This string is encoded in UTF-16</remarks>
        </member>
        <member name="T:csammisrun.OscarLib.UserDCInfo">
            <summary>
            DC information for a user
            </summary>
            <remarks>TODO:  Needs an overhaul, I have no idea what this is for</remarks>
        </member>
        <member name="F:csammisrun.OscarLib.UserDCInfo.AuthCookie">
            <summary>
            Authentication cookie
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UserDCInfo.ClientFutures">
            <summary>
            Client futures
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UserDCInfo.DCType">
            <summary>
            DC type
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UserDCInfo.DCVersion">
            <summary>
            DC version
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UserDCInfo.InternalIP">
            <summary>
            Internal IP
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UserDCInfo.InternalPort">
            <summary>
            Internal port number
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UserDCInfo.LastExtInfoUpdateTime">
            <summary>
            Last extended information update time
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UserDCInfo.LastExtStatusUpdateTime">
            <summary>
            Last status update time
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UserDCInfo.LastInfoUpdateTime">
            <summary>
            Last information update time
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UserDCInfo.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UserDCInfo.WebFrontPort">
            <summary>
            Web front port
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.UserClass">
            <summary>
            Describes an AOL user's class
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UserClass.Unconfirmed">
            <summary>
            Unconfirmed user
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UserClass.Administrator">
            <summary>
            AOL adminstrator
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UserClass.AOLStaff">
            <summary>
            AOL staff
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UserClass.Commercial">
            <summary>
            Commercial account
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UserClass.Free">
            <summary>
            Non-commercial account
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UserClass.Away">
            <summary>
            User is away
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UserClass.ICQ">
            <summary>
            ICQ user
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UserClass.Wireless">
            <summary>
            AOL Wireless user
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.BasicUserInfoRequest">
            <summary>
            Describes a request for user information, one block at a time
            </summary>
            <remarks>The BasicUserInfoRequest members cannot be ORed together. To request more
            than one type of information at a time, use the <see cref="T:csammisrun.OscarLib.UserInfoRequest"/> enumeration
            with the <see cref="M:csammisrun.OscarLib.ISession.RequestUserInfo(System.String,csammisrun.OscarLib.UserInfoRequest)"/> method</remarks>
        </member>
        <member name="F:csammisrun.OscarLib.BasicUserInfoRequest.GeneralInfo">
            <summary>
            General information -- the user's profile
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BasicUserInfoRequest.OnlineInfo">
            <summary>
            Online information -- a <see cref="T:csammisrun.OscarLib.UserInfo"/> block
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BasicUserInfoRequest.AwayMessage">
            <summary>
            Away message
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BasicUserInfoRequest.Capabilities">
            <summary>
            Client capabilities
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.UserInfoRequest">
            <summary>
            Describes a multi-part request for user information
            </summary>
            <remarks>The UserInfoRequest members can be ORed together</remarks>
        </member>
        <member name="F:csammisrun.OscarLib.UserInfoRequest.UserProfile">
            <summary>
            User's profile
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UserInfoRequest.AwayMessage">
            <summary>
            User's away message
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UserInfoRequest.Capabilities">
            <summary>
            Remote client's capabilities
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.UserInfoResponse">
            <summary>
            Encapsulates the results of a request for user information
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UserInfoResponse.AwayMessage">
            <summary>
            The user's away message
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UserInfoResponse.AwayMessageEncoding">
            <summary>
            The <see cref="T:System.Text.Encoding"/> of the user's away message string
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UserInfoResponse.ClientCapabilities">
            <summary>
            The remote client's capabilities
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UserInfoResponse.Info">
            <summary>
            The user's information structure
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UserInfoResponse.Profile">
            <summary>
            The user's profile
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UserInfoResponse.ProfileEncoding">
            <summary>
            The <see cref="T:System.Text.Encoding"/> of the user's profile string
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.UndeliverableMessageEventArgs">
            <summary>
            Describes an event received from the server indicating that
            a remote user could not send this client a message
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.UndeliverableMessageEventArgs.#ctor(System.Int32,csammisrun.OscarLib.UserInfo,System.Int32,csammisrun.OscarLib.UndeliverableMessageReason)">
            <summary>
            Initializes a new UndeliverableMessageEventArgs
            </summary>
            <param name="channel">The channel on which the message was missed</param>
            <param name="userInfo">A <see cref="T:csammisrun.OscarLib.UserInfo"/> block describing the sender</param>
            <param name="numberMissed">The number of messages missed from the sender</param>
            <param name="reason">An <see cref="T:csammisrun.OscarLib.UndeliverableMessageReason"/> value describing the failure</param>
        </member>
        <member name="P:csammisrun.OscarLib.UndeliverableMessageEventArgs.Reason">
            <summary>
            Gets an <see cref="T:csammisrun.OscarLib.UndeliverableMessageReason"/> value describing the delivery failure
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.UndeliverableMessageEventArgs.Sender">
            <summary>
            Gets a <see cref="T:csammisrun.OscarLib.UserInfo"/> block describing the sender
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.UndeliverableMessageEventArgs.NumberMissed">
            <summary>
            Gets the number of messages missed from the sender
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.UndeliverableMessageEventArgs.Channel">
            <summary>
            Gets the channel on which the messages were missed
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.MessageAcceptedEventArgs">
            <summary>
            Describes an event received from the server indicating that a message was
            accepted for delivery
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.MessageAcceptedEventArgs.#ctor(csammisrun.OscarLib.Cookie,System.String)">
            <summary>
            Initializes a new MessageAcceptedEventArgs
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.MessageAcceptedEventArgs.Cookie">
            <summary>
            Gets the uniquely identifying <see cref="P:csammisrun.OscarLib.MessageAcceptedEventArgs.Cookie"/> for this message
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.MessageAcceptedEventArgs.ScreenName">
            <summary>
            Gets the screen name to which this message was delivered
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.MessageReceivedEventArgs">
            <summary>
            Describes a message received event
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.MessageReceivedEventArgs.#ctor(csammisrun.OscarLib.IM)">
            <summary>
            Creates a new MessageReceivedEventArgs
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.MessageReceivedEventArgs.Message">
            <summary>
            Gets the message that was received
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.ChatRoomChangedEventArgs">
            <summary>
            Describes a chat room change event
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoomChangedEventArgs.#ctor(csammisrun.OscarLib.UserInfo)">
            <summary>
            Initializes a new ChatRoomChangedEventArgs
            </summary>
            <param name="user">The user that has joined or left the chat room</param>
        </member>
        <member name="P:csammisrun.OscarLib.ChatRoomChangedEventArgs.User">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.UserInfo"/> describing the user that has joined
            or left the chat room
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.TypingNotificationEventArgs">
            <summary>
            Describes a received typing notification event
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.TypingNotificationEventArgs.#ctor(System.String,csammisrun.OscarLib.TypingNotification)">
            <summary>
            Initializes a new TypingNotificationEventArgs
            </summary>
            <param name="screenname">The screen name of the user who sent the typing notification</param>
            <param name="notification">The type of typing notification received</param>
        </member>
        <member name="P:csammisrun.OscarLib.TypingNotificationEventArgs.ScreenName">
            <summary>
            Gets the screen name of the user who sent the typing notification
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.TypingNotificationEventArgs.Notification">
            <summary>
            Gets the type of typing notification received
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnPacketDispatchException(System.Exception,csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.PacketDispatchException"/> event
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnStatusUpdate(System.String)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.StatusUpdate"/> event
            </summary>
            <param name="message">A status message</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnLoginStatusUpdate(System.String,System.Double)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.LoginStatusUpdate"/> event
            </summary>
            <param name="message">A status message</param>
            <param name="percentdone">The percentage of the login progress that has been completed</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnWarning(csammisrun.OscarLib.ServerErrorCode)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.WarningMessage"/> event
            </summary>
            <param name="errorcode">A <see cref="T:csammisrun.OscarLib.ServerErrorCode"/> describing the warning</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnError(csammisrun.OscarLib.ServerErrorCode)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.ErrorMessage"/> event or the <see cref="E:csammisrun.OscarLib.ISession.LoginFailed"/> event
            </summary>
            <param name="errorcode">A <see cref="T:csammisrun.OscarLib.ServerErrorCode"/> describing the error</param>
            <remarks>If the login process has not completed, <see cref="E:csammisrun.OscarLib.ISession.LoginFailed"/> is raised.
            Otherwise, <see cref="E:csammisrun.OscarLib.ISession.ErrorMessage"/> is raised.</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnLoginComplete">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.LoginCompleted"/> event
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnWarningReceived(System.UInt16,System.Boolean,csammisrun.OscarLib.UserInfo)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.WarningReceived"/> event.
            </summary>
            <param name="newlevel">The client's new warning level</param>
            <param name="anonymous"><c>true</c> if this warning was sent anonymously, <c>false</c> otherwise</param>
            <param name="ui">A <see cref="T:csammisrun.OscarLib.UserInfo"/> structure describing the warning user. If <paramref name="anonymous"/> is
            <c>true</c>, this structure is unpopulated</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnDirectoryUpdateAcknowledged(System.Boolean)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.DirectoryUpdateAcknowledged"/> event
            </summary>
            <param name="success"><c>true</c> if the directory update succeded, and <c>false</c> otherwise</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnDirectConnectionRequestReceived(csammisrun.OscarLib.Cookie)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.FileTransferRequestReceived"/> event
            </summary>
            <param name="key">The unique key needed to respond to this request</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnChatInvitationReceived(csammisrun.OscarLib.UserInfo,System.String,System.String,System.Text.Encoding,System.String,csammisrun.OscarLib.Cookie)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.ChatInvitationReceived"/> event
            </summary>
            <param name="sender">A <see cref="T:csammisrun.OscarLib.UserInfo"/> object represnting the inviter</param>
            <param name="roomname">The name of the chatroom</param>
            <param name="message">An invitation chatroom</param>
            <param name="encoding">The text encoding used in the chatroom</param>
            <param name="language">The language used in the chatroom</param>
            <param name="key">The unique key needed to respond to this request</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnPopupMessage(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.PopupMessage"/> event
            </summary>
            <param name="width">The width of the popup box, in pixels</param>
            <param name="height">The height of the popup box, in pixels</param>
            <param name="delay">The autohide delay of the popup box, in seconds</param>
            <param name="url">The URL associated with the message</param>
            <param name="message">The message to display</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnSearchByEmailResults(System.String,System.String[])">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.SearchByEmailResults"/> event
            </summary>
            <param name="email">The email address that was searched for</param>
            <param name="results">The screennames that are associated with the email address</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnReportingIntervalReceived(System.Int32)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.ReportingIntervalReceived"/> event
            </summary>
            <param name="hours">The minimum status reporting interval, in hours</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnSearchResults(csammisrun.OscarLib.DirectoryEntry[])">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.SearchResults"/> event
            </summary>
            <param name="results">The results of the directory search</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnInterestsReceived(csammisrun.OscarLib.InterestItem[])">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.InterestsReceived"/> event
            </summary>
            <param name="results">The results of the interests request</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnContactListFinished(System.DateTime)">
            <summary>
            Notifies the server to activate the SSI data for the client, and to begin
            alerting its contacts that it is now online and ready to receive messages
            
            Implementing clients should call <see cref="M:csammisrun.OscarLib.ISession.ActivateBuddyList"/> in response to this event
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnBuddyItemReceived(csammisrun.OscarLib.SSIBuddy)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.BuddyItemReceived"/> event
            </summary>
            <param name="buddy">An <see cref="T:csammisrun.OscarLib.SSIBuddy"/> object</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnBuddyItemRemoved(csammisrun.OscarLib.SSIBuddy)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.BuddyItemRemoved"/> event
            </summary>
            <param name="buddy">An <see cref="T:csammisrun.OscarLib.SSIBuddy"/> object</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnGroupItemReceived(csammisrun.OscarLib.SSIGroup)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.GroupItemReceived"/> event
            </summary>
            <param name="group">An <see cref="T:csammisrun.OscarLib.SSIGroup"/>"/&gt; object</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnGroupItemRemoved(csammisrun.OscarLib.SSIGroup)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.GroupItemRemoved"/> event
            </summary>
            <param name="group">An <see cref="T:csammisrun.OscarLib.SSIGroup"/> object</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnMasterGroupItemReceived(System.Int32)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.MasterGroupItemReceived"/> event
            </summary>
            <param name="numgroups">The number of groups we are going to receive</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnSSIEditComplete">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.SSIEditComplete"/> event
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnAuthorizationRequestReceived(System.String,System.String)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.AuthorizationRequestReceived"/> event
            </summary>
            <param name="screenname">the screenname that ask for authorization</param>
            <param name="reason">the reason message</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnAuthorizationResponseReceived(System.String,System.Boolean,System.String)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.AuthorizationResponseReceived"/> event
            </summary>
            <param name="screenname">the screenname that should get the response</param>
            <param name="authorizationGranted">Determines, if the authorization will be granted or not.</param>
            <param name="reason">The reason message</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnAuthorizationResponseReceived(System.String,System.String)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.FutureAuthorizationReceived"/> event
            </summary>
            <param name="screenname">the screenname that should get the future authorization</param>
            <param name="reason">The reason message</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnLoginFailed(csammisrun.OscarLib.LoginErrorCode)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.LoginFailed"/> event
            </summary>
            <param name="errorcode">A <see cref="T:csammisrun.OscarLib.LoginErrorCode"/> describing the failure</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnFileTransferProgress(csammisrun.OscarLib.Cookie,System.UInt32,System.UInt32)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.FileTransferProgress"/> event
            </summary>
            <param name="cookie">The rendezvous cookie belonging to the file being transfered</param>
            <param name="bytestransfered">The number of bytes transfered so far</param>
            <param name="bytestotal">The total number of bytes to be transfered</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnDirectIMMessageProgress(System.Boolean,csammisrun.OscarLib.Cookie,System.UInt32,System.UInt32)">
            <summary>
            Raises the DirectIM message progress events
            </summary>
            <param name="incoming">A value indicating whether the message is incoming or outgoing</param>
            <param name="cookie">The rendezvous cookie belonging to the DirectIM session</param>
            <param name="bytestransfered">The number of bytes transfered so far</param>
            <param name="bytestotal">The total number of bytes to be transfered</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnFileTransferCancelled(csammisrun.OscarLib.UserInfo,csammisrun.OscarLib.Cookie,System.String)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.FileTransferCancelled"/> event
            </summary>
            <param name="other">The <see cref="T:csammisrun.OscarLib.UserInfo"/> of the user on the other side of the connection</param>
            <param name="cookie">The rendezvous cookie belonging to the cancelled file</param>
            <param name="reason">The reason for the cancellation</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnDirectIMSessionCancelled(csammisrun.OscarLib.Utility.DirectConnection,System.String)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.DirectIMSessionCancelled"/> event
            </summary>
            <param name="cookie">The rendezvous cookie belonging to the cancelled session</param>
            <param name="reason">The reason for the cancellation</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnDirectIMSessionClosed(csammisrun.OscarLib.UserInfo,csammisrun.OscarLib.Cookie)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.DirectIMSessionClosed"/>
            </summary>
            <param name="other">A <see cref="T:csammisrun.OscarLib.UserInfo"/> object describing the other session participant</param>
            <param name="cookie">The rendezvous cookie belonging to the cancelled session</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnDirectConnectionComplete(csammisrun.OscarLib.UserInfo,csammisrun.OscarLib.Cookie)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.DirectIMSessionReady"/> event
            </summary>
            <param name="other">A <see cref="T:csammisrun.OscarLib.UserInfo"/> object describing the other session participant</param>
            <param name="cookie">The rendezvous cookie belonging to the session</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnFileTransferCompleted(csammisrun.OscarLib.Cookie)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ISession.FileTransferCompleted"/> event
            </summary>
            <param name="cookie">The rendezvous cookie belonging to the completed file</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.OnDirectIMReceived(csammisrun.OscarLib.DirectIM)">
            <summary>
            Raises the <see cref="!:OscarLib_DirectIMReceived"/> event
            </summary>
            <param name="message">The <see cref="T:csammisrun.OscarLib.DirectIM"/> received</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.SetDefaultIdentification">
            <summary>
            Sets the session's <see cref="P:csammisrun.OscarLib.ISession.ClientIdentification"/> to the AOL defaults
            </summary>
            <exception cref="T:csammisrun.OscarLib.LoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is already logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.InitializeLogger(System.String)">
            <summary>
            Initialize the logging system
            </summary>
            <param name="baseDir">The directory in which to save log files</param>
            <returns>The full logfile path</returns>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.Logon(System.String,System.Int32)">
            <summary>
            Begins the process of logging in to the OSCAR service
            </summary>
            <param name="loginserver">The OSCAR login server</param>
            <param name="port">The OSCAR service port</param>
            <remarks>
            <para>
            This function is non-blocking, because the login process does not happen
            instantly. The OSCAR library will raise the <see cref="E:csammisrun.OscarLib.ISession.LoginCompleted"/> event
            when the login process has finished successfully.
            </para>
            <para>
            The OSCAR library raises periodic status update events throughout the login process
            via the <see cref="E:csammisrun.OscarLib.ISession.StatusUpdate"/> event.
            </para>
            <para>
            Errors may occur during the login process;  if an error occurs, the OSCAR library raises
            the <see cref="E:csammisrun.OscarLib.ISession.ErrorMessage"/> event, and stops the remaining login sequence.
            </para>
            </remarks>
            <exception cref="T:csammisrun.OscarLib.LoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is already logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.conn_ServerConnnectionCompleted(csammisrun.OscarLib.Utility.Connection)">
            <summary>
            This is only connected to the initial login server connection
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.Logoff">
            <summary>
            Disconnects all active OSCAR connections and resets the session
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.SetAvailableMessage(System.String)">
            <summary>
            Sets the client's available message
            </summary>
            <param name="message">The available message to set</param>
            <remarks>
            <para>
            If the session is logged in at the time SetAvailableMessage is called, the
            available message is reset immediately. Otherwise, it will be set once the
            session is logged in.
            </para>
            </remarks>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.RequestUserInfo(System.String,csammisrun.OscarLib.UserInfoRequest)">
            <summary>
            Requests long information about a user
            </summary>
            <param name="screenname">The user to get information about</param>
            <param name="type">The type of information to request</param>
            <remarks>Results are returned by the <see cref="!:UserInfoReceived"/> event</remarks>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.RequestBasicUserInfo(System.String,csammisrun.OscarLib.BasicUserInfoRequest)">
            <summary>
            Requests basic user information
            </summary>
            <param name="screenname">The user to get information about</param>
            <param name="type">The type of information to request</param>
            <remarks>
            <para>Results are returned by the <see cref="!:UserInfoReceived"/> event</para>
            <para>Gaim uses this method of user info request exclusively</para>
            </remarks>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.SearchUsersByEmail(System.String)">
            <summary>
            Requests a list of accounts associated with an email address
            </summary>
            <param name="email">The email address to use while searching</param>
            <throws cref="T:System.Exception">Thrown when the session is not logged in</throws>
            <remarks>Results are returned by the <see cref="E:csammisrun.OscarLib.ISession.SearchByEmailResults"/> event</remarks>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.SendAIMInvitation(System.String,System.String)">
            <summary>
            Sends an invitation to join AIM
            </summary>
            <param name="email">The email address of the person to invite</param>
            <param name="text">The text of the invitation</param>
            <remarks>
            The libfaim documentation contains this delightful vignette:
            <code>Once upon a time, there used to be a menu item in AIM clients that
            said something like "Invite a friend to use AIM..." and then it would
            ask for an email address and it would sent a mail to them saying
            how perfectly wonderful the AIM service is and why you should use it
            and click here if you hate the person who sent this to you and want to
            complain and yell at them in a small box with pretty fonts.</code>
            </remarks>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.AddBuddy(System.String,System.UInt16,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
             <summary>
             Adds a buddy to the client's server-side buddy list
             </summary>
             <param name="screenname">The screenname of the buddy to add</param>
             <param name="parentID">The ID of the parent group of the buddy</param>
             <param name="index">The index of the buddy in the group</param>
             <param name="alias">The alias of the buddy ("" for none)</param>
             <param name="email">The email address of the buddy ("" for none)</param>
             <param name="comment">The comment to be stored for the buddy ("" for none)</param>
             <param name="SMS">The SMS number for the buddy ("" for none)</param>
             <param name="soundfile">The soundfile for the buddy ("" for none)</param>
             <param name="authorziationRequired"><c>true</c> if we require authorization for this buddy, <c>false</c> otherwise</param>
            <param name="authorizationReason">The authorization reason/message that will be send to the client</param>
             <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
             <remarks>This function will probably not remain here; the SSI Manager will be made public</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.AddBuddy(System.String,System.UInt16,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
             <summary>
             Adds a buddy to the client's server-side buddy list
             </summary>
             <param name="screenname">The screenname of the buddy to add</param>
             <param name="parentID">The ID of the parent group of the buddy</param>
             <param name="alias">The alias of the buddy ("" for none)</param>
             <param name="email">The email address of the buddy ("" for none)</param>
             <param name="comment">The comment to be stored for the buddy ("" for none)</param>
             <param name="SMS">The SMS number for the buddy ("" for none)</param>
             <param name="soundfile">The soundfile for the buddy ("" for none)</param>
             <param name="authorziationRequired"><c>true</c> if we require authorization for this buddy, <c>false</c> otherwise</param>
            <param name="authorizationReason">The authorization reason/message that will be send to the client</param>
             <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
             <remarks>This function will probably not remain here; the SSI Manager will be made public</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.MoveBuddy(System.UInt16,System.UInt16,System.Int32)">
            <summary>
            Moves a buddy
            </summary>
            <param name="buddyID">The ID of the buddy to move</param>
            <param name="parentID">The ID of the destination group</param>
            <param name="index">The index in the destination group to move to</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.RemoveBuddy(System.UInt16,System.UInt16)">
            <summary>
            Remove a buddy
            </summary>
            <param name="buddyID">The ID of the buddy to remove</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.AddGroup(System.String,System.Int32)">
            <summary>
            Adds a group to the client's server-side buddy list
            </summary>
            <param name="groupname">The name of the new group</param>
            <param name="index">The index into the current list of groups</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.AddGroup(System.String,System.UInt16)">
            <summary>
            Adds a group to the client's server-side buddy list
            </summary>
            <param name="groupname">The name of the new group</param>
            <param name="id">The group id</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.AddGroup(System.String)">
            <summary>
            Adds a group to the client's server-side buddy list
            </summary>
            <param name="groupname">The name of the new group</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.AddMasterGroup(System.String)">
            <summary>
            Adds the master group. This is necessary if a contact list is empty to add further groups after
            </summary>
            <param name="groupname">The master group name</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.MoveGroup(System.UInt16,System.Int32)">
            <summary>
            Move a group in the buddy list
            </summary>
            <param name="groupID">The ID of the group to move</param>
            <param name="index">The new index of the group</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.RemoveGroup(System.UInt16)">
            <summary>
            Remove a group from the server-side buddy list
            </summary>
            <param name="groupID">ID of the group to remove</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.ActivateBuddyList">
            <summary>
            Tells AIM to begin sending UserStatus objects to client (online or away)
            Client should call in response to <see cref="E:csammisrun.OscarLib.ISession.ContactListFinished"/> event
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.RequestInterestsList">
            <summary>
            Requests a list of user interests from the server
            </summary>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.SendStatusReport">
            <summary>
            Sends a client status report to the server
            </summary>
            <remarks>
            <para>
            This report contains generic information about the client's machine. Its contents are as follows:
            <list>
            <item>The time the report was sent</item>
            <item>The client's screenname</item>
            <item>The name and version of Windows on this machine</item>
            <item>The name of this machine's processor</item>
            <item>The name and version of this machine's Winsock library</item>
            </list>
            </para>
            <para>This report should be sent at regular intervals by the client application. The minimum required
            reporting interval is sent by the server during login and received by the
            <see cref="E:csammisrun.OscarLib.ISession.ReportingIntervalReceived"/> event</para>
            </remarks>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.SendAuthorizationRequest(System.String,System.String)">
            <summary>
            Sends an icq authorization request
            </summary>
            <param name="screenname">the destination screenname</param>
            <param name="reason">the request reason</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.SendAuthorizationResponse(System.String,System.Boolean,System.String)">
            <summary>
            Sends an icq authorization response
            </summary>
            <param name="screenname">the destination screenname</param>
            <param name="grantAuthorization">true, if the authorization should be granted, otherwise false</param>
            <param name="reason">the reason for the decision</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.SendFutureAuthorizationGrant(System.String,System.String)">
            <summary>
            Grants the authorization to another screenname for the future
            </summary>
            <param name="screenname">The uin/screenname</param>
            <param name="reason">The reason message</param>
            <remarks>TODO ... seems to be obsolete in the current Oscar version</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.SendContactListCheckout">
            <summary>
            Sends a requests for the server side buddylist. Server should reply with
            the buddylist, or with the info that the client side buddylist is up to date
            <remarks>TODO have to be tested</remarks>
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.SendContactListCheckout(System.DateTime)">
            <summary>
            Sends a requests for the server side buddylist. Server should reply with
            the buddylist, or with the info that the client side buddylist is up to date
            </summary>
            <param name="lastModificationDate">the date when the client side buddylist was updated the last time</param>
            <remarks>TODO have to be tested</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.GetBuddyIcon(System.String)">
            <summary>
            Requests a remote client's buddy icon
            </summary>
            <param name="screenname">The screenname of the client</param>
            <param name="icon">The <see cref="!:IconInfo"/> of the client's icon, received from the
            <see cref="E:csammisrun.OscarLib.StatusManager.UserStatusReceived"/> event</param>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.SendFile(System.String,System.String)">
            <summary>
            Send a file to a remote client via a direct connection
            </summary>
            <param name="recipient">The screenname of the remote client</param>
            <param name="filename">The path of the file to send</param>
            <returns>A key with which to reference this file transfer, or "" if a warning was
            generated during the initialization process</returns>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.StartDirectIM(System.String,System.String)">
            <summary>
            Start a DirectIM session with a remote client via a direct connection
            </summary>
            <param name="recipient">The screenname of the remote client</param>
            <param name="message">A message with which to invite the remote client</param>
            <returns>A key with which to reference this DirectIM session, or "" if a warning was
            generated during the initialization process</returns>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.SendFileProxied(System.String,System.String)">
            <summary>
            Send a file to a remote client via an AOL proxy
            </summary>
            <param name="recipient">The screenname of the remote client</param>
            <param name="filename">The path of the file to send</param>
            <returns>A key with which to reference this file transfer, or "" if a warning was
            generated during the initialization process</returns>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.StartDirectIMProxied(System.String,System.String)">
            <summary>
            Start a DirectIM session with a remote client via an AOL proxy
            </summary>
            <param name="recipient">The screenname of the remote client</param>
            <param name="message">A message with which to invite the remote client</param>
            <returns>A key with which to reference this DirectIM session, or "" if a warning was
            generated during the initialization process</returns>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.AcceptDirectIMSession(csammisrun.OscarLib.Cookie)">
            <summary>
            Accept an invitation to a DirectIM session
            </summary>
            <param name="key">The key received in the <see cref="!:OscarLib_DirectIMRequestReceived"/> event</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.AcceptFileTransfer(csammisrun.OscarLib.Cookie,System.String)">
            <summary>
            Accept a file being sent to the client
            </summary>
            <param name="key">The key received in the <see cref="E:csammisrun.OscarLib.ISession.FileTransferRequestReceived"/> event</param>
            <param name="savelocation">The path to which to save the file</param>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
            <exception cref="T:System.Exception">Thrown when <paramref name="key"/> is not a valid file transfer key</exception>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.CancelFileTransfer(csammisrun.OscarLib.Cookie)">
            <summary>
            Cancel a pending or in-progress file transfer
            </summary>
            <param name="key">The key received with the transfer request</param>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
            <exception cref="T:System.Exception">Thrown when <paramref name="key"/> is not a valid file transfer key</exception>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.CancelDirectIMSession(csammisrun.OscarLib.Cookie)">
            <summary>
            Cancel a pending or in-progress Direct IM session
            </summary>
            <param name="key">The key received with the connection request</param>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
            <exception cref="T:System.Exception">Thrown when <paramref name="key"/> is not a valid file transfer key</exception>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.SetICQInfo(csammisrun.OscarLib.ICQInfo)">
            <summary>
            Update the user's ICQ settings on the server
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.HashPassword(System.Byte[])">
            <summary>
            Returns an MD5 hash of the client's password, an authorization key, and a constant string
            </summary>
            <param name="authkey">The authorization key sent by the server</param>
            <returns>A 16-byte MD5 hash</returns>
            <remarks>
            <para>
            The hashing process is fairly simple:
            <list>
            <item>The authorization key is put into a buffer</item>
            <item>The password itself is hashed via MD5 and appended to the buffer</item>
            <item>The constant string, "AOL Instant Messenger (SM)", is appended to the buffer in plaintext</item>
            <item>The entire buffer is MD5 hashed and returned to the caller</item>
            </list>
            </para>
            <para>
            This method exists to prevent the password from having to be passed around in a data structure
            </para>
            </remarks>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.StoreRequestID(System.UInt32,System.Object)">
            <summary>
            Stores data associated with a SNAC request/reply
            </summary>
            <param name="requestid">A SNAC request ID</param>
            <param name="data">The data to be stored</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.RetrieveRequestID(System.UInt32)">
            <summary>
            Retrieves data associated with a SNAC request/reply
            </summary>
            <param name="requestid">A SNAC request ID</param>
            <returns>The data previously stored by <see cref="M:csammisrun.OscarLib.ISession.StoreRequestID(System.UInt32,System.Object)"/></returns>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.SetPrivacyFromServer(csammisrun.OscarLib.PrivacySetting)">
            <summary>
            Sets the session's privacy setting sent by the server in SNAC(13,06)
            </summary>
            <param name="ps">One of the <see cref="T:csammisrun.OscarLib.PrivacySetting"/> enumeration members</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.SetPresence(System.Boolean)">
            <summary>
            Sets whether or not the client's idle time is public -- SNAC(13,06)
            </summary>
            <param name="publicidletime">true if others can see this client's idle time, false otherwise</param>
        </member>
        <member name="M:csammisrun.OscarLib.ISession.ParameterSetArrived">
            <summary>
            Keeps track of the SNAC parameter responses that have been received thus far
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.ISession.LastModificationDate">
            <summary>
            Gets or Sets the last modification date and time of the buddylist
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.ISession.ScreenName">
            <summary>
            Gets or sets the screen name associated with this session
            </summary>
            <remarks>
            The screen name cannot be set by this property while the client is offline.
            When the client is online, setting the screen name by this property changes the
            screen name's formatting on the server.
            </remarks>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="screenname"/> is not
            a valid AIM or ICQ screenname.</exception>
        </member>
        <member name="P:csammisrun.OscarLib.ISession.LoginPort">
            <summary>
            Gets or sets the port number used for OSCAR logins
            </summary>
            <remarks>
            Traditionally, this is port 5190; however, AIM 6 has been caught using port 443 to negotiate
            connections with login.oscar.aol.com and ars.oscar.aol.com.  Future versions of OscarLib may use
            this property to support login via port 443.
            </remarks>
        </member>
        <member name="P:csammisrun.OscarLib.ISession.ClientIdentification">
            <summary>
            Gets or sets this session's OSCAR identification information
            </summary>
            <exception cref="T:csammisrun.OscarLib.LoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is already logged in</exception>
        </member>
        <member name="P:csammisrun.OscarLib.ISession.ClientCapabilities">
            <summary>
            Gets or sets the OSCAR capabilities associated with the session
            </summary>
            <remarks>
            The client capabilities must be set before the session is logged in because the
            client's capabilities are communicated during the login process and are kept through
            the session.
            </remarks>
            <exception cref="T:csammisrun.OscarLib.LoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is already logged in</exception>
        </member>
        <member name="P:csammisrun.OscarLib.ISession.Encoding">
            <summary>
            Gets the recommented enocding format depending on the client capability settings
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.ISession.AvailableMessage">
            <summary>
            Gets the session's Available message string
            </summary>
            <remarks>To set the the session's Available message, use the
            <see cref="M:csammisrun.OscarLib.ISession.SetAvailableMessage(System.String)"/> method</remarks>
        </member>
        <member name="P:csammisrun.OscarLib.ISession.PublicIdleTime">
            <summary>
            Gets a value indicating whether this client's idle time is publicly available
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.ISession.LoggedIn">
            <summary>
            Gets a value indicating whether this client has completed the login process
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.ISession.SSI">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.SSIManager"/> associated with this session
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.ISession.Limits">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.LimitManager"/> associated with this session
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.ISession.ICQ">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.IcqManager"/> associated with this session
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.ISession.Messages">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.MessageManager"/> associated with this session
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.ISession.ChatRooms">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.ChatRoomManager"/> associated with this session
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.ISession.Graphics">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.GraphicsManager"/> associated with this session
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.ISession.Statuses">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.StatusManager"/> associated with this session
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.ISession.ScratchPath">
            <summary>
            Gets or sets a filesystem path where OscarLib can place received data
            </summary>
            <remarks>During an OSCAR Direct Connect session, "transient" files may come over the wire.
            If ScratchPath is set to a valid path, OscarLib will save the files locally and return
            <see cref="T:System.IO.FileStream"/> references to the objects. Otherwise, the files will
            be returned as <see cref="T:System.IO.MemoryStream"/> objects, which will take more active memory.</remarks>
        </member>
        <member name="P:csammisrun.OscarLib.ISession.Connections">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.Utility.ConnectionManager"/> associated with this session
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.ISession.Services">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.ServiceManager"/> associated with this session
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.ISession.Dispatcher">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.Utility.PacketDispatcher"/> associated with this session
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.ISession.Families">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.Utility.FamilyManager"/> associated with this session
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.ISession.RateClasses">
            <summary>
            Gets or sets the <see cref="T:csammisrun.OscarLib.Utility.RateClassManager"/> associated with this session
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.ISession.ProxiedSocketFactory">
            <summary>
            Gets or sets the <see cref="T:csammisrun.OscarLib.ProxiedSocketFactoryDelegate"/> to use to create new socket connections
            </summary>
            <remarks>By default, this property is set to <see cref="M:csammisrun.OscarLib.Session.DirectSocketConnectionFactory(System.String,System.Int32,System.Delegate)"/></remarks>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.PacketDispatchException">
            <summary>
            Occurs when an unhandled exception is raised in the course of dispatching and processing a packet
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.StatusUpdate">
            <summary>
            Occurs when the library generates a status update message
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.LoginStatusUpdate">
            <summary>
            Occurs when the library generates a status update message during login
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.WarningMessage">
            <summary>
            Occurs when the library generates a warning message
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.ErrorMessage">
            <summary>
            Occurs when the library generates an error message
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.LoginCompleted">
            <summary>
            Occurs when the login process is complete.
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.WarningReceived">
            <summary>
            Occurs when a remote client has warned this client
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.DirectoryUpdateAcknowledged">
            <summary>
            Occurs when the server sends acknowledgement of a directory update request
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.FileTransferRequestReceived">
            <summary>
            Occurs when a file transfer request is received
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.DirectIMRequestReceived">
            <summary>
            Occurs when a Direct IM transfer request is received
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.ChatInvitationReceived">
            <summary>
            Occurs when a chat room invitation is received
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.PopupMessage">
            <summary>
            Occurs when the server sends a popup message
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.SearchByEmailResults">
            <summary>
            Occurs when results from a user search are available
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.ReportingIntervalReceived">
            <summary>
            Occurs when the server sends the minimum status reporting interval at login
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.SearchResults">
            <summary>
            Occurs when the server sends the results of a directory search
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.InterestsReceived">
            <summary>
            Occurs when the server sends a list of interests
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.ContactListFinished">
            <summary>
            Occurs when the buddy list has been completely sent by the server
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.BuddyItemReceived">
            <summary>
            Occurs when the server sends a new buddy item to the client
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.BuddyItemRemoved">
            <summary>
            Occurs when a buddy item has been removed from the server-side list
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.GroupItemReceived">
            <summary>
            Occurs when the server sends a new group item to the client
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.GroupItemRemoved">
            <summary>
            Occurs when a buddy item has been removed from the server-side list
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.MasterGroupItemReceived">
            <summary>
            Occurs when the server sends the master group item to the client
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.SSIEditComplete">
            <summary>
            Occurs when the an SSI edit is completed
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.AuthorizationRequestReceived">
            <summary>
            Occurs when a client ask for authorization (ICQ)
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.AuthorizationResponseReceived">
            <summary>
            Occurs when a client granted or declined the authorization (ICQ)
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.FutureAuthorizationReceived">
            <summary>
            Occurs when a client granted the authorization for the future (ICQ)
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.LoginFailed">
            <summary>
            Occurs when the login sequence fails
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.FileTransferProgress">
            <summary>
            Occurs during a file transfer to indicate transfer progression
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.DirectIMIncomingMessageProgress">
            <summary>
            Occurs during a DirectIM session to indicate the progress of an incoming message
            </summary>
            <remarks>This event will only fire if the incoming message contains attachments</remarks>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.DirectIMOutgoingMessageProgress">
            <summary>
            Occurs during a DirectIM session to indicate the progress of an outgoing message
            </summary>
            <remarks>This event will only fire if the outgoing message contains attachments</remarks>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.FileTransferCancelled">
            <summary>
            Occurs when a file transfer has been cancelled
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.DirectIMSessionCancelled">
            <summary>
            Raised when a DirectIM session has been cancelled
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.DirectIMSessionClosed">
            <summary>
            Raised when a DirectIM session has been closed
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.DirectIMSessionReady">
            <summary>
            Raised when a DirectIM session is ready for data
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.FileTransferCompleted">
            <summary>
            Occurs when a file transfer has completed
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ISession.DirectIMReceived">
            <summary>
            Occurs when a Direct IM has been received
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.Logging">
            <summary>
            Provides static methods to log events and dump data
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.Marshal">
            <summary>
            The Marshal class contains utility functions
            to aid in marshalling and unmarshalling data into OSCAR-compatable
            format.
            </summary>
            <remarks>
            <para>
            The BitConverter class was not used to aid in byte-array-to-data-type
            functions due to the endian-ness of the data.
            As an example, consider the following byte array:
            <code>byte[] buffer = new byte[] {0x00,0x01,0x02,0x03};</code>
            When asked to create a ushort from the first two bytes in the array,
            BitConverter will return 128 (0x0100) as opposed to 1 (0x0001). The OSCAR
            protocol expects byte buffers to be read left-to-right, in network order
            format.
            </para>
            </remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.Marshal.InsertUshort(System.Byte[],System.UInt16,System.Int32)">
            <summary>
            Writes an unsigned short (two bytes) into an array
            </summary>
            <param name="buffer">A byte buffer</param>
            <param name="u">An unsigned short</param>
            <param name="index">The index at which to write the two bytes</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.Marshal.InsertUshort(System.Byte[],System.UInt16,System.Int32@)">
            <summary>
            Writes an unsigned short (two bytes) into an array
            </summary>
            <param name="buffer">A byte buffer</param>
            <param name="u">An unsigned short</param>
            <param name="index">The index at which to write the two bytes</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.Marshal.InsertUint(System.Byte[],System.UInt32,System.Int32@)">
            <summary>
            Writes an unsigned int (four bytes) into an array
            </summary>
            <param name="buffer">A byte buffer</param>
            <param name="u">An unsigned int</param>
            <param name="index">The index at which to write the four bytes</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.Marshal.InsertString(System.Byte[],System.String,System.Text.Encoding,System.Int32@)">
            <summary>
            Writes an string into an array
            </summary>
            <param name="buffer">A byte buffer</param>
            <param name="s">A string</param>
            <param name="encoding">An <see cref="T:System.Text.Encoding"/> describing the string</param>
            <param name="index">The index at which to write the string</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.Marshal.EncodingToAolMime(System.Text.Encoding)">
            <summary>
            Gets a byte array containing the AOL representation of the specified Encoding
            </summary>
            <param name="e">The <see cref="T:System.Text.Encoding"/> to convert</param>
            <returns>A byte array containing the US-ASCII string of the encoding</returns>
            <remarks>
            This function supports:
            	<list type="bullet">
              <item><see cref="P:System.Text.Encoding.ASCII"/> -- text/aolrtf; charset="us-ascii"</item>
            	<item><see cref="P:System.Text.Encoding.BigEndianUnicode"/> -- text/aolrtf; charset="unicode-2-0"</item>
            	<item>ISO-8859-1 (Latin1) -- text/aolrtf; charset="iso-8859-1"</item>
            	<item>Other -- text/aolrtf; charset="[webname]", where [webname] is the <see cref="P:System.Text.Encoding.WebName"/>
                    of the argument</item>
            	</list>
            </remarks>
        </member>
        <member name="T:csammisrun.OscarLib.ChatRoomManager">
            <summary>
            Handles chat room navigation and creation
            </summary>
            <remarks>This manager is responsible for processing SNACs from family 0x000D (ChatNav)
            and dispatching SNACs from family 0x000E to the correct <see cref="T:csammisrun.OscarLib.ChatRoom"/></remarks>
        </member>
        <member name="T:csammisrun.OscarLib.ISnacFamilyHandler">
            <summary>
            An interface implemented by manager objects that handle incoming data packets
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.ISnacFamilyHandler.ProcessIncomingPacket(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Process an incoming <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/>
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> received by the server</param>
        </member>
        <member name="F:csammisrun.OscarLib.ChatRoomManager.SNAC_CHATNAV_FAMILY">
            <summary>
            The SNAC family that handles chat room creation and information
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ChatRoomManager.SNAC_CHATROOM_FAMILY">
            <summary>
            The SNAC family used for chat room notifications and messages
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ChatRoomManager.ERROR">
            <summary>
            The subtype used to indicate a SNAC-level error
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ChatRoomManager.CHATNAV_PARAMETER_LIMITREQUEST">
            <summary>
            The subtype used to request chat room creation limitations
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ChatRoomManager.CHATNAV_CREATE_ROOM">
            <summary>
            The subtype used to create a new chat room
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ChatRoomManager.CHATNAV_PARAMETER_REPLY">
            <summary>
            The subtype used to indicate a parameter response
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ChatRoomManager.CHATROOM_INFO_UPDATE">
            <summary>
            The subtype used to indicate an update to chat room information
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ChatRoomManager.CHATROOM_USER_JOINED">
            <summary>
            The subtype used to indicate a user has joined the chatroom
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ChatRoomManager.CHATROOM_USER_LEFT">
            <summary>
            The subtype used to indicate a user has left the chatroom
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ChatRoomManager.CHATROOM_MESSAGE_RECEIVED">
            <summary>
            The subtype used to indicate a chatroom member has sent a message
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ChatRoomManager.chatParameterRequests">
            <summary>
            A map of reasons for receiving chat nav parameters
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ChatRoomManager.chatRoomCreationRequests">
            <summary>
            A map of SNAC creation request IDs to chat room objects
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoomManager.#ctor(csammisrun.OscarLib.ISession)">
            <summary>
            Initializes a new ChatRoomManager
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoomManager.CreateChatRoom(System.String,System.Globalization.CultureInfo,System.Text.Encoding)">
            <summary>
            Creates a new chat room
            </summary>
            <param name="roomname">The name of the room to create</param>
            <param name="language">The language to be used in the room</param>
            <param name="charset">The character set to be used in the room</param>
            <remarks>
            <para>
            This method uses default values for the chat room exchange and instance parameters that
            will not allow entry to an AOL Members Only chat room.  To join an AOL Members chat room,
            use the <see cref="M:csammisrun.OscarLib.ChatRoomManager.CreateChatRoom(System.String)"/> overload that takes an aol:// URL.</para>
            <para>Once the chat room has been created, you are automatically joined to it</para>
            </remarks>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoomManager.CreateChatRoom(System.String)">
            <summary>
            Join a chat room using an aol:// URI
            </summary>
            <param name="uri">A URI using the aol:// scheme</param>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoomManager.CreateChatRoom(System.String,System.UInt16,System.UInt16,System.Text.Encoding,System.Globalization.CultureInfo)">
            <summary>
            Creates a new chat room
            </summary>
            <param name="roomname">The name of the room to create</param>
            <param name="exchange">The exchange in which to create the room</param>
            <param name="instance">The instance number of the chat room</param>
            <param name="language">The language to be used in the room</param>
            <param name="charset">The character set to be used in the room</param>
            <remarks>
            <para>Once the chat room has been created, you are automatically joined to it</para>
            <para>This overload of CreateChatRoom allows the client to specify the exchange number.
            TODO:  explain this.</para>
            </remarks>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoomManager.JoinChatRoom(csammisrun.OscarLib.Cookie)">
            <summary>
            Accepts a chat room invite and joins the requested room
            </summary>
            <param name="invitationKey">The <see cref="T:csammisrun.OscarLib.Cookie"/> received with the invitation</param>
            <exception cref="T:System.ArgumentException">Thrown when the <paramref name="invitationKey"/> does
            not describe an outstanding chat room invitation.</exception>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoomManager.DeclineChatInvitation(csammisrun.OscarLib.Cookie)">
            <summary>
            Declines a chat room invite
            </summary>
            <param name="invitationKey">The <see cref="T:csammisrun.OscarLib.Cookie"/> received with the invitation</param>
            <exception cref="T:System.ArgumentException">Thrown when the <paramref name="invitationKey"/> does
            not describe an outstanding chat room invitation.</exception>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoomManager.RequestParameters">
            <summary>
            Requests parameter settings for the ChatNav SNAC family
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoomManager.CacheChatRoomInvitation(csammisrun.OscarLib.Cookie,csammisrun.OscarLib.ChatRoom)">
            <summary>
            Caches a chat room invitation
            </summary>
            <param name="invitationKey">The <see cref="T:csammisrun.OscarLib.Cookie"/> received with the invitation</param>
            <param name="chatRoom">The <see cref="T:csammisrun.OscarLib.ChatRoom"/> to cache</param>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoomManager.CreateChatRoom(csammisrun.OscarLib.ChatRoom)">
            <summary>
            Creates a new AIM chat room
            </summary>
            <param name="chatRoom">A <see cref="T:csammisrun.OscarLib.ChatRoom"/> object describing the room to create</param>
            <remarks>TODO:  I think this doesn't work, the fullname should be "create" maybe?</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoomManager.RequestChatRoomConnection(csammisrun.OscarLib.ChatRoom)">
            <summary>
            Sends a request for a new chat room connection -- SNAC(01,04)
            </summary>
            <param name="chatRoom">A <see cref="T:csammisrun.OscarLib.ChatRoom"/> object</param>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoomManager.OnChatNavServiceAvailable">
            <summary>
            Requests connections for any outstanding chat room invitations
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoomManager.OnChatRoomConnectionAvailable(csammisrun.OscarLib.ChatRoom)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.ChatRoomManager.ChatRoomJoined"/> event
            </summary>
            <param name="chatRoom">The chat room that has become available</param>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoomManager.ProcessIncomingPacket(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Process an incoming <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/>
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> received by the server</param>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoomManager.ProcessChatRoomCreationError(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Handles an error occuring during chat room navigation
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object containing SNAC(0D,01)</param>
        </member>
        <member name="M:csammisrun.OscarLib.ChatRoomManager.ProcessChatRoomInformation(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes requested chat room information -- SNAC(0D,09)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object containing SNAC(0D,09)</param>
        </member>
        <member name="E:csammisrun.OscarLib.ChatRoomManager.ChatRoomJoined">
            <summary>
            Occurs when a chat room has been successfully joined
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.ChatRoomManager.ChatRoomCreationFailed">
            <summary>
            Occurs when a chat room could not be created
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.ConnectionManager">
            <summary>
            Manages relationships between SNAC families and OSCAR connections
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ConnectionManager.#ctor(csammisrun.OscarLib.ISession)">
            <summary>
            Initializes the ConnectionManager
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ConnectionManager.AddDelayedPacket(System.UInt16,csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Adds a packet to a delay queue for sending at a later time
            </summary>
            <param name="family">The family of the delayed packet</param>
            <param name="dp">The packet to delay</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ConnectionManager.GetDelayedPackets(System.UInt16)">
            <summary>
            Gets an array of delayed packets
            </summary>
            <param name="family">The family of the delayed packets</param>
            <returns>An array of packets that have been delayed, or <c>null</c> if none exist</returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ConnectionManager.CreateNewConnection(System.UInt16)">
            <summary>
            Creates a new connection and associates it with a family
            </summary>
            <param name="family">A family to associate it with</param>
            <returns>The newly created connection</returns>
            <remarks>If the family passed to CreateNewConnection is 0x0001, the
            newly created connection is associated as the BOS connection for the session.</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ConnectionManager.DeregisterConnection(csammisrun.OscarLib.Utility.Connection,System.Boolean)">
            <summary>
            Removes a connection from the connection manager
            </summary>
            <param name="conn">The connection to remove</param>
            <param name="error"><c>true</c> if the deregistration is resulting from an error, <c>false</c> otherwise</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ConnectionManager.CreateNewChatConnection(csammisrun.OscarLib.ChatRoom)">
            <summary>
            Creates a new chat room connection
            </summary>
            <param name="roominfo">The name of the chat room</param>
            <returns>The newly created chat connection</returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ConnectionManager.CreateNewDirectIMConnection(csammisrun.OscarLib.Utility.DirectConnectionMethod,csammisrun.OscarLib.Utility.DirectConnectRole)">
            <summary>
            Creates a new DirectIM connection
            </summary>
            <param name="method">The <see cref="T:csammisrun.OscarLib.Utility.DirectConnectionMethod"/> to use for the transfer</param>
            <param name="role">The <see cref="T:csammisrun.OscarLib.Utility.DirectConnectRole"/> of the local client in the transfer</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ConnectionManager.CreateNewFileTransferConnection(csammisrun.OscarLib.Utility.DirectConnectionMethod,csammisrun.OscarLib.Utility.DirectConnectRole)">
            <summary>
            Creates a new file transfer connection
            </summary>
            <param name="method">The <see cref="T:csammisrun.OscarLib.Utility.DirectConnectionMethod"/> to use for the transfer</param>
            <param name="role">The <see cref="T:csammisrun.OscarLib.Utility.DirectConnectRole"/> of the local client in the transfer</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ConnectionManager.GetDirectConnectionByCookie(csammisrun.OscarLib.Cookie)">
            <summary>
            Gets a <see cref="T:csammisrun.OscarLib.Utility.DirectConnection"/> by its Rendezvous cookie
            </summary>
            <returns>The <see cref="T:csammisrun.OscarLib.Utility.DirectConnection"/> that corresponds to the cookie, or null if no corresponding DC is found</returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ConnectionManager.GetDirectConnectionByCookie(csammisrun.OscarLib.Cookie,System.Boolean)">
            <summary>
            Gets a <see cref="T:csammisrun.OscarLib.Utility.DirectConnection"/> by its Rendezvous cookie
            </summary>
            <returns>The <see cref="T:csammisrun.OscarLib.Utility.DirectConnection"/> that corresponds to the cookie, or null if no corresponding DC is found</returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ConnectionManager.GetDirectIMByScreenname(System.String)">
            <summary>
            Returns a <see cref="T:csammisrun.OscarLib.Utility.DirectIMConnection"/> by the screenname of the remote user
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ConnectionManager.RemoveDirectConnection(csammisrun.OscarLib.Cookie)">
            <summary>
            Removes a direct connection from the connection manager cache
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ConnectionManager.GetByFamily(System.UInt16)">
            <summary>
            Gets a <see cref="T:csammisrun.OscarLib.Utility.Connection"/> object by the SNAC family ID it is associated with
            </summary>
            <param name="family">A SNAC family ID</param>
            <returns>A <see cref="T:csammisrun.OscarLib.Utility.Connection"/> object, or <c>null</c> if the ID is not
            registered with the ConnectionManager.</returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ConnectionManager.RemoveChatConnection(System.String)">
            <summary>
            Disconnects from a chat room
            </summary>
            <param name="roomname">The roomname to disconnect</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ConnectionManager.AssignFamily(System.UInt16,csammisrun.OscarLib.Utility.Connection)">
            <summary>
            Assigns a <see cref="T:csammisrun.OscarLib.Utility.Connection"/> object to a SNAC family ID
            </summary>
            <param name="family">A SNAC family ID</param>
            <param name="conn">A <see cref="T:csammisrun.OscarLib.Utility.Connection"/> object</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ConnectionManager.GetFamilies(csammisrun.OscarLib.Utility.Connection)">
            <summary>
            Returns a list of families assigned to a given connection
            </summary>
            <param name="conn">A <see cref="T:csammisrun.OscarLib.Utility.Connection"/> object</param>
            <returns>An array of SNAC family IDs registered with <paramref name="conn"/></returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ConnectionManager.UniqueConnections">
            <summary>
            Gets a list of unique registered connections
            </summary>
            <returns>An ArrayList of <see cref="T:csammisrun.OscarLib.Utility.Connection"/> objects</returns>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.ConnectionManager.BOSConnection">
            <summary>
            Returns the BOS connection
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.ConnectionManager.PendingConnections">
            <summary>
            Gets a value indicating whether or not there are pending connections
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.FamilyManager">
            <summary>
            Manages a collection of Family objects
            </summary>
            <remarks>
            <para>
            The FamilyManager object exposes a variety of methods to abstract 
            interaction with Family objects. A client only needs to know the 
            SNAC ID of a family to call a FamilyManager Get* method and return
            information on that SNAC.
            </para>
            <para>
            In addition to managing the collection of Family object, FamilyManager
            also loads the family data from the XML #aim data file.
            </para>
            </remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.FamilyManager.#ctor">
            <summary>
            Constructs a new FamilyManager
            </summary>
            <remarks>After a FamilyManager is created, but before it is used, the </remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.FamilyManager.GetEnumerator">
            <summary>
            Returns an IEnumerator that can iterate through the FamilyMember
            </summary>
            <returns>An IDictionaryEnumerator</returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.FamilyManager.GetFamilyVersion(System.UInt16)">
            <summary>
            Gets the version of a family
            </summary>
            <param name="family">The ID of the family</param>
            <returns>The version of the family, or 0xFFFF if the family ID does not exist</returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.FamilyManager.GetFamilyToolID(System.UInt16)">
            <summary>
            Gets the tool ID of a family
            </summary>
            <param name="family">The ID of the family</param>
            <returns>The tool ID of the family, or 0xFFFF if the family ID does not exist</returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.FamilyManager.GetFamilyToolVersion(System.UInt16)">
            <summary>
            Gets the tool version of a family
            </summary>
            <param name="family">The ID of the family</param>
            <returns>The tool version of the family, or 0xFFFF if the family ID does not exist</returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.FamilyManager.GetFamilyName(System.UInt16)">
            <summary>
            Gets the name of a family
            </summary>
            <param name="family">The ID of the family</param>
            <returns>The name of the family, or an empty string if the family ID does not exist</returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.FamilyManager.GetFamilyDescription(System.UInt16)">
            <summary>
            Gets the description of a family
            </summary>
            <param name="family">The ID of the family</param>
            <returns>The description of the family, or an empty string if the family ID does not exist</returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.FamilyManager.GetFamily(System.UInt16)">
            <summary>
            Gets a raw Family object
            </summary>
            <param name="family">The ID of the family</param>
            <returns>The requested family, or null if the specified ID does not exist</returns>
            <remarks>Whenever possible, the other FamilyManager.Get* functions should be used instead of using GetFamily for raw access</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.FamilyManager.LoadFamilies">
            <summary>
            Loads the family information into a hashtable
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.FamilyManager.AddFrameToDelayQueue(csammisrun.OscarLib.Utility.SNACHeader,System.Byte[])">
            <summary>
            Adds a frame to the delay queue
            </summary>
            <param name="sh">The SNAC header of the frame to add</param>
            <param name="data">A byte array consisting of the delayed frame</param>
            <returns><c>true</c> if a queue already existed for this family, or
            <c>false</c> if <see cref="!:SNAC01.RequestNewService"/> should be called
            </returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.FamilyManager.GetDelayedFrames(System.UInt16)">
            <summary>
            Gets a queue of delayed frames
            </summary>
            <param name="family">The family of the delayed frames</param>
            <returns>A <see cref="T:System.Collections.Queue"/> containing any delayed frames, or
            <c>null</c> if there are no delayed frames for the family.</returns>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.FamilyManager.Count">
            <summary>
            Gets the number of families registered with this manager
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.GraphicsManager">
            <summary>
            Handles all requests for server-stored image data
            </summary>
            <remarks>This manager is responsible for processing SNACs from family 0x0010 (BART)</remarks>
        </member>
        <member name="F:csammisrun.OscarLib.GraphicsManager.SNAC_BART_FAMILY">
            <summary>
            The SNAC family responsible for buddy art
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.GraphicsManager.BART_ERROR">
            <summary>
            ICBM code for an error packet sent by the server
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.GraphicsManager.BART_UPLOAD">
            <summary>
            ICBM code for a request to upload buddy art
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.GraphicsManager.BART_UPLOAD_REPLY">
            <summary>
            ICBM code for a reply to a buddy art upload
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.GraphicsManager.BART_DOWNLOAD">
            <summary>
            ICBM code for a request to download buddy art
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.GraphicsManager.BART_DOWNLOAD_REPLY">
            <summary>
            ICBM code for a reply to a buddy art download
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.GraphicsManager.IsBlankIcon(System.Byte[])">
            <summary>
            Tests to see if the specified icon data is an AOL-set blank icon
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.GraphicsManager.#ctor(csammisrun.OscarLib.ISession)">
            <summary>
            Initializes a new GraphicsManager
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.GraphicsManager.UploadBuddyIcon(System.String)">
            <summary>
            Uploads a buddy icon to the AIM servers
            </summary>
            <param name="filename">The filename of the icon to upload</param>
        </member>
        <member name="M:csammisrun.OscarLib.GraphicsManager.DownloadBuddyIcon(System.String,csammisrun.OscarLib.BartID)">
            <summary>
            Downloads a buddy icon from the AIM servers
            </summary>
            <param name="screenName">The screenname to which the icon belongs</param>
            <param name="iconId">The ID of the icon stored on the server</param>
        </member>
        <member name="M:csammisrun.OscarLib.GraphicsManager.ProcessIncomingPacket(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Process an incoming <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> from SNAC family 0x10
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> received by the server</param>
        </member>
        <member name="M:csammisrun.OscarLib.GraphicsManager.ProcessDownloadReply(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes a download reply - SNAC(10,07)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(10,07)</param>
        </member>
        <member name="M:csammisrun.OscarLib.GraphicsManager.ProcessUploadReply(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes an upload reply - SNAC(10,03)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(10,03)</param>
        </member>
        <member name="M:csammisrun.OscarLib.GraphicsManager.OnBuddyIconDownloaded(System.String,csammisrun.OscarLib.BartID,System.String)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.GraphicsManager.BuddyIconDownloaded"/> event
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.GraphicsManager.OnBuddyIconUploadFailed(csammisrun.OscarLib.BartReplyCode)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.GraphicsManager.BuddyIconUploadFailed"/> event
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.GraphicsManager.VerifyIcon(System.String)">
            <summary>
            Verifies that a user-chosen icon fits within the image dimension parameters
            </summary>
            <param name="filename">The location of the image file</param>
            <returns><c>true</c> if the icon fits within parameters, <c>false</c> otherwise</returns>
        </member>
        <member name="M:csammisrun.OscarLib.GraphicsManager.VerifyJFIF(System.IO.FileStream)">
            <summary>
            Verifies that a JPEG File Interchange Format image falls inside the
            AOL-required dimensions:  between 48x48 and 50x50
            </summary>
            <param name="fs">
            An opened <see cref="T:System.IO.FileStream"/> two bytes into the JFIF.
            </param>
            <returns>
            <c>true</c> if the JFIF fits in the required dimensions,
            <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:csammisrun.OscarLib.GraphicsManager.VerifyGIF(System.IO.FileStream)">
            <summary>
            Verifies that a Graphics Interchange Format image falls inside the
            AOL-required dimensions:  between 48x48 and 50x50
            </summary>
            <param name="fs">
            An opened <see cref="T:System.IO.FileStream"/> two bytes into the GIF.
            </param>
            <returns>
            <c>true</c> if the GIF fits in the required dimensions,
            <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:csammisrun.OscarLib.GraphicsManager.VerifyBitmap(System.IO.FileStream)">
            <summary>
            Verifies that a Device-Independent Bitmap falls inside the AOL-required dimensions:  between 48x48 and 50x50
            </summary>
            <param name="fs">
            An opened <see cref="T:System.IO.FileStream"/> two bytes into the bitmap.
            </param>
            <returns>
            <c>true</c> if the bitmap fits in the required dimensions,
            <c>false</c> otherwise.
            </returns>
        </member>
        <member name="E:csammisrun.OscarLib.GraphicsManager.BuddyIconUploadCompleted">
            <summary>
            Occurs when a buddy icon upload completed without error
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.GraphicsManager.BuddyIconUploadFailed">
            <summary>
            Occurs when a buddy icon upload failed
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.GraphicsManager.BuddyIconReceived">
            <summary>
            Occurs when a buddy icon is received from the server
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.GraphicsManager.BuddyIconDownloaded">
            <summary>
            Occurs when a buddy icon is downloaded from the server
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.GraphicsManager.AutoSaveLocation">
            <summary>
            Gets or sets the file path to which downloaded icons are automatically saved
            </summary>
            <remarks>If AutoSaveLocation is set to a valid path, icons requested using
            <see cref="M:csammisrun.OscarLib.GraphicsManager.DownloadBuddyIcon(System.String,csammisrun.OscarLib.BartID)"/> are automatically saved to disk.  Requests for
            icons that have been saved locally return the locally saved icon instead of sending
            a new download request.</remarks>
        </member>
        <member name="P:csammisrun.OscarLib.GraphicsManager.OwnBuddyIcon">
            <summary>
            Gets the ID of the local user's buddy icon
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.BuddyIconUploadCompletedHandler">
            <summary>
            Provides a callback function for notification of icon upload success
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.BuddyIconUploadCompletedArgs">
            <summary>
            Encapsulates the arguments to an upload completed event
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.BuddyIconUploadCompletedArgs.#ctor(csammisrun.OscarLib.BartID)">
            <summary>
            Initializes a new BuddyIconUploadCompletedArgs
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.BuddyIconUploadCompletedArgs.BartID">
            <summary>
            The <see cref="P:csammisrun.OscarLib.BuddyIconUploadCompletedArgs.BartID"/> identifying the icon that was uploaded
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.BuddyIconUploadFailedHandler">
            <summary>
            Provides a callback function for notification of icon upload failure
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.BuddyIconUploadFailedArgs">
            <summary>
            Encapsulates the error code of an upload failure event
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.BuddyIconUploadFailedArgs.#ctor(csammisrun.OscarLib.BartReplyCode)">
            <summary>
            Initializes a new BuddyIconUploadFailedArgs
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.BuddyIconUploadFailedArgs.ErrorCode">
            <summary>
            Gets the error code from the failed upload attempt
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.BuddyIconReceivedHandler">
            <summary>
            Provides a callback function for notification of receiving a buddy icon from the server
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.BuddyIconReceivedEventArgs">
            <summary>
            Encapsulates the arguments from an icon received event
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.BuddyIconReceivedEventArgs.#ctor(System.String,csammisrun.OscarLib.BartID,System.IO.MemoryStream)">
            <summary>
            Initializes a new BuddyIconReceivedEventArgs
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.BuddyIconReceivedEventArgs.IconID">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.BartID"/> of the received icon
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.BuddyIconReceivedEventArgs.IconStream">
            <summary>
            Gets the <see cref="T:System.IO.MemoryStream"/> containing the icon data
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.BuddyIconReceivedEventArgs.ScreenName">
            <summary>
            Gets the screenname to which the icon belongs
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.BuddyIconDownloadedHandler">
            <summary>
            Provides a callback function for notification of downloading a buddy icon from the server
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.BuddyIconDownloadedEventArgs">
            <summary>
            Encapsulates the arguments from an icon download event
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.BuddyIconDownloadedEventArgs.#ctor(System.String,csammisrun.OscarLib.BartID,System.String)">
            <summary>
            Initializes a new BuddyIconDownloadedEventArgs
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.BuddyIconDownloadedEventArgs.IconID">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.BartID"/> of the downloaded icon
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.BuddyIconDownloadedEventArgs.IconFile">
            <summary>
            Gets the file path of the downloaded icon
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.BuddyIconDownloadedEventArgs.ScreenName">
            <summary>
            Gets the screenname to which the icon belongs
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.BartID">
            <summary>
            Represents a BART item ID
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.BartID.#ctor(csammisrun.OscarLib.Utility.ByteStream)">
            <summary>
            Initializes a new BartID from a byte stream
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.BartID.ToString">
            <summary>
            Gets a string that uniquely represents this BartID
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.BartID.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.BartID.Type">
            <summary>
            Gets the type of the BART item
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.BartID.Flags">
            <summary>
            Gets the flags set on the BART item
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.BartID.Data">
            <summary>
            Gets the data contained by the BART item
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.BartReplyCode">
            <summary>
            A reply code from a BART upload or download request
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartReplyCode.Success">
            <summary>
            The upload was successful
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartReplyCode.Invalid">
            <summary>
            The upload ID was malformed
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartReplyCode.NoCustomData">
            <summary>
            The upload type does not allow custom data
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartReplyCode.TooSmall">
            <summary>
            The data was too small for the type
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartReplyCode.TooBig">
            <summary>
            The data was too big for the type
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartReplyCode.InvalidType">
            <summary>
            Unknown type
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartReplyCode.Banned">
            <summary>
            Banned type
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartReplyCode.NotFound">
            <summary>
            The requested data was not found
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartReplyCode.DimensionsTooBig">
            <summary>
            The image dimensions are too big for the type
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.BartTypeId">
            <summary>
            Possible types for a BART object
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartTypeId.SmallBuddyIcon">
            <summary>
            GIF/JPG/BMP, &lt;= 32 pixels and 2k
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartTypeId.BuddyIcon">
            <summary>
            GIF/JPG/BMP, &lt;= 64 pixels and 7k
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartTypeId.StatusString">
            <summary>
            StringTLV format; DATA flag is always set
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartTypeId.ArrivalSound">
            <summary>
            WAV/MP3/MID, &lt;= 10K
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartTypeId.RichText">
            <summary>
            Byte array of rich text codes; DATA flag is always set
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartTypeId.SuperBuddyIcon">
            <summary>
            XML
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartTypeId.RadioStation">
            <summary>
            Opaque struct; DATA flag is always set
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartTypeId.BigBuddyIcon">
            <summary>
            SWF
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartTypeId.StatusStringTimeOfDay">
            <summary>
            Time when the status string is set
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartTypeId.CurrentAVTrack">
            <summary>
            XML file; Data flag should not be set
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartTypeId.DepartureSound">
            <summary>
            WAV/MP3/MID, &lt;= 10K
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartTypeId.IMChrome">
            <summary>
            GIF/JPG/BMP wallpaper
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartTypeId.IncomingIMSound">
            <summary>
            WAV/MP3, &lt;= 10K
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartTypeId.IMChromeXml">
            <summary>
            XML
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartTypeId.IMChromeTimers">
            <summary>
            Immersive Expressions
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartTypeId.EmoticonSet">
            <summary>
            Set of default Emoticons
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartTypeId.EncryptionCertificationChain">
            <summary>
            Cert chain for encryption certs
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartTypeId.SignatureCertificationChain">
            <summary>
            Cert chain for signing certs
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartTypeId.GatewayCertificate">
            <summary>
            Cert for enterprise gateway
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.BartFlags">
            <summary>
            Flags that can be applied to <see cref="T:csammisrun.OscarLib.BartID"/> objects
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartFlags.None">
            <summary>
            No flags
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartFlags.Custom">
            <summary>
            A custom blob
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartFlags.Data">
            <summary>
            The BartID data field is client-processed
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartFlags.Unknown">
            <summary>
            The identified BART object needs to be uploaded
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.BartFlags.Redirect">
            <summary>
            Use the current ID for the BART object type
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.AddedToRemoteListEventArgs">
            <summary>
            Contains information concerning a client adding the locally logged in UIN to their list
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.AddedToRemoteListEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new AddedToRemoteListEventArgs
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.AddedToRemoteListEventArgs.Uin">
            <summary>
            Gets the UIN of the user that added the locally logged in UIN to their list
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.AddedToRemoteListEventHandler">
            <summary>
            Handles the event of a remote ICQ user adding the locally logged in UIN to their list
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.SearchResultReceivedEventHandler">
            <summary>
            Handles the event if a search result for an icq user search has been received
            </summary>
            <param name="sender">the sender, that fired this event</param>
            <param name="searchResult">the searchresult object</param>
        </member>
        <member name="T:csammisrun.OscarLib.SmsMessageSentHandler">
            <summary>
            Handles the event of SMS message sent successfully.
            </summary>
            <param name="sender">sender of event</param>
            <param name="messageId">SMS message id</param>
        </member>
        <member name="T:csammisrun.OscarLib.SmsMessageErrorHandler">
            <summary>
            Handles the event of SMS message error.
            </summary>
            <param name="sender">sender of event</param>
            <param name="error">error description.</param>    
            <param name="param">error parameter.</param>
        </member>
        <member name="T:csammisrun.OscarLib.IcqManager">
            <summary>
            Performs the special functions for that special protocol, ICQ
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.IcqManager.END_OFFLINE_MESSAGES">
            <summary>
            ICQ code for the end of the offline message sequence
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.IcqManager.ICQ_INFORMATION_RECEIVED">
            <summary>
            ICQ code for received meta-information pertaining to an ICQ account
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.IcqManager.OFFLINE_MESSAGE">
            <summary>
            ICQ code for a received offline message
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.IcqManager.SSI_ADDED_TO_LIST">
            <summary>
            SSI code for a contact adding the current UIN to their list
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.IcqManager.#ctor(csammisrun.OscarLib.ISession)">
            <summary>
            Initializes a new IcqManager
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.IcqManager.ProcessIncomingPacket(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Process an incoming <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> from SNAC family 15 (and one from 13)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> received by the server</param>
        </member>
        <member name="M:csammisrun.OscarLib.IcqManager.BeginIcqByteStream(System.String)">
            <summary>
            Creates a byte stream with a common ICQ prefix
            </summary>
            <param name="uin">An ICQ UIN</param>
        </member>
        <member name="M:csammisrun.OscarLib.IcqManager.CreateIcqMetaHeader">
            <summary>
            Creates a SNAC header with the common ICQ properties
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.IcqManager.SendSMSMessage(System.String,System.String,System.String)">
            <summary>
            Sends an out-of-the-country text message
            </summary>
            <param name="number">The number to which to send the message</param>
            <param name="message">The message to send</param>
            <param name="alias">The sender's alias</param>
            <remarks><paramref name="message"/> must be in codepage 1252. A delivery receipt
            is automatically requested by this method.</remarks>
        </member>
        <member name="E:csammisrun.OscarLib.IcqManager.AddedToRemoteList">
            <summary>
            Raised when a remote ICQ user adds the locally logged in UIN to their list
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.IcqManager.SmsMessageSent">
            <summary>
            Raised when an SMS message was successfully sent.
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.IcqManager.SmsMessageError">
            <summary>
            Raised when an SMS message failed to be sent.
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.IcqManager.MetaResponseType.MetaDataReply">
            <summary>
            ICQ code for a received response for a meta data request
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.IcqManager.MetaResponseType.OfflineMessage">
            <summary>
            ICQ code for a received offline message
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.IcqManager.MetaResponseType.EndOfflineMessage">
            <summary>
            ICQ code for the end of the offline message sequence
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.LimitManager">
            <summary>
            Provides an access point for information about low-level protocol limitations
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.LimitManager.MaxProfileLength">
            <summary>
            Gets the maximum length of a user's profile
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.LimitManager.MaxCapabilities">
            <summary>
            Gets the maximum number of capabilities a client can have
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.LimitManager.MaxMessageSize">
            <summary>
            Gets the maximum message size, including all headers, that the OSCAR
            servers will accept
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.LimitManager.MaxSenderWarningLevel">
            <summary>
            Gets the maximum warning level that this client will accept messages from
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.LimitManager.MaxReceiverWarningLevel">
            <summary>
            Gets the maximum warning level that this client will send messages to
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.LimitManager.MaxGroups">
            <summary>
            Gets the maximum number of buddy list group items
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.LimitManager.MaxBuddies">
            <summary>
            Gets the maximum number of buddy list buddy items
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.LimitManager.MaxPermits">
            <summary>
            Gets the maximum number of buddy list "permit" items
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.LimitManager.MaxDenys">
            <summary>
            Gets the maximum number of buddy list "deny" items
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.MessageManager">
            <summary>
            Handles all incoming and outgoing peer-to-peer messages
            </summary>
            <remarks>
            <para>This manager is primarily responsible for handling the SNAC family 0x0004.
            The session's <see cref="T:csammisrun.OscarLib.IcqManager"/> and any <see cref="T:csammisrun.OscarLib.Utility.DirectIMConnection"/>s process their messages
            and dispatch them to this manager for distribution to the client, though the raw packets are
            processed elsewhere.</para>
            <para>Chat room messages are not handled by this manager.</para>
            </remarks>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.SNAC_ICBM_FAMILY">
            <summary>
            The SNAC family responsible for sending and receiving instant messages
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.ICBM_INCOMING_MESSAGE">
            <summary>
            ICBM code for an incoming message
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.ICBM_SEND_WARNING">
            <summary>
            ICBM code for sending a warning to a remote client
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.ICBM_OUTGOING_MESSAGE">
            <summary>
            ICBM code for an outgoing message
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.ICBM_MESSAGE_DELIVERED">
            <summary>
            ICBM code for a notification of delivered messages
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.ICBM_ERROR">
            <summary>
            ICBM code for an error packet sent by the server
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.ICBM_SET_PARAMETERS">
            <summary>
            ICBM code for setting the SNAC family parameters
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.ICBM_PARAMETER_LIST">
            <summary>
            ICBM code for a received parameter list
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.ICBM_REQUEST_PARAMETERS">
            <summary>
            ICBM code for requesting message parameters
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.ICBM_TYPING_NOTIFICATION">
            <summary>
            ICBM code for received typing notifications
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.ICBM_UNDELIVERABLE_MESSAGE">
            <summary>
            ICBM code for a notification of undeliverable messages
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.ICBM_WARNING_ACKNOWLEDGED">
            <summary>
            ICBM code for the acknowledgement of a previously sent warning
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.ICBM_RETRIEVE_OFFLINE_MESSAGES">
            <summary>
            ICBM code for requesting delivery of offline messages
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.ICQ_RETRIEVE_OFFLINE_MESSAGES">
            <summary>
            ICQ code for requesting delivery of offline messages
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.ICQ_DELETE_OFFLINE_MESSAGES">
            <summary>
            ICQ code for deleting offline messages
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.ICBM_OFFLINE_MESSAGES_SENT">
            <summary>
            ICBM code sent when the server has finished sending offline messages
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.DC_CLIENT_IP_ADDRESS">
            <summary>
            The client IP address of a direct connection
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.DC_MESSAGE">
            <summary>
            The message to send with a direct connection invitation
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.DC_PORT">
            <summary>
            The port of a direct connection
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.DC_PORT_COMPLIMENT">
            <summary>
            The compliment of a direct connection's port
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.DC_PROXY_IP_ADDRESS">
            <summary>
            The proxy IP address of a direct connection
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.DC_PROXY_IP_ADDRESS_COMPLIMENT">
            <summary>
            The compliment of a direct connection's proxy IP address
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.DC_SEQUENCE_NUMBER">
            <summary>
            The sequence number of a direct connection
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.DC_USE_PROXY_FLAG">
            <summary>
            A flag for a direct connection to use a proxy
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.DC_VERIFIED_IP_ADDRESS">
            <summary>
            The verified IP address of a direct connection
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.ERROR_CODE_BUDDYOFFLINE">
            <summary>
            A SNAC error code indicating that the recepient of a message is offline
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.ERROR_SUBCODE_OFFLINEMSGNOTSUPPORTED">
            <summary>
            A SNAC error subcode indicating that the intended recepient of an offline message cannot accept them
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.ERROR_SUBCODE_OFFLINESTORAGEFULL">
            <summary>
            A SNAC error subcode indicating that the intended recepient (?) of an offline message has exceeded their storage
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.messageStatuses">
            <summary>
            A map of message IDs and their destinations
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.offlineMessages">
            <summary>
            The list of offline messages collected by this manager
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.#ctor(csammisrun.OscarLib.ISession)">
            <summary>
            Initializes a new MessageManager
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.SendMessage(System.String,System.String)">
            <summary>
            Sends an instant message
            </summary>
            <param name="screenName">The screenname to receive the IM</param>
            <param name="message">The message to send</param>
            <remarks>Delivery confirmation results or sending errors will be returned in the <see cref="E:csammisrun.OscarLib.MessageManager.MessageDeliveryUpdate"/> event.</remarks>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.SendMessage(System.String,System.String,csammisrun.OscarLib.OutgoingMessageFlags)">
            <summary>
            Sends an instant message
            </summary>
            <param name="screenName">The screenname to receive the IM</param>
            <param name="message">The message to send</param>
            <param name="flags">A <see cref="T:csammisrun.OscarLib.OutgoingMessageFlags"/> enumeration specifying what
            additional information should be sent with the message</param>
            <remarks>Delivery confirmation results or sending errors will be returned in the <see cref="E:csammisrun.OscarLib.MessageManager.MessageDeliveryUpdate"/> event.</remarks>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.SendMessage(System.String,System.String,csammisrun.OscarLib.OutgoingMessageFlags,System.Collections.Generic.List{csammisrun.OscarLib.Attachment})">
            <summary>
            Sends an instant message
            </summary>
            <param name="screenName">The screenname to receive the IM</param>
            <param name="message">The message to send</param>
            <param name="flags">A <see cref="T:csammisrun.OscarLib.OutgoingMessageFlags"/> enumeration specifying what
            additional information should be sent with the message</param>
            <param name="attachments">A list of <see cref="T:csammisrun.OscarLib.Attachment"/>s to send with the message</param>
            <remarks>
            <para>Delivery confirmation results or sending errors will be returned in the <see cref="E:csammisrun.OscarLib.MessageManager.MessageDeliveryUpdate"/> event.</para>
            <para>If any attachments are specified in the <paramref name="attachments"/> list, this method will
            attempt to open a Direct Connection, a peer-to-peer connection that could expose the local
            IP address to the other participant in the conversation.  If a Direct Connection cannot be established,
            this method will not attempt to send the message without the attachments.  The <see cref="E:csammisrun.OscarLib.ISession.DirectIMSessionCancelled"/>
            event will be raised, and the client should attempt to send the message without attachments manually.</para></remarks>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.RetrieveOfflineMessages">
            <summary>
            Begin retrieving any offline messages stored on the server
            </summary>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.SendTypingNotification(System.String,csammisrun.OscarLib.TypingNotification)">
            <summary>
            Sends a typing notification
            </summary>
            <param name="screenName">The screenname to receive the typing notification</param>
            <param name="tn">A <see cref="E:csammisrun.OscarLib.MessageManager.TypingNotification"/> enumeration specifying what
            notification to send</param>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.InviteToChatRoom(csammisrun.OscarLib.ChatRoom,System.String,System.String)">
            <summary>
            Invites an AIM user to an AOL chatroom
            </summary>
            <param name="chatroom">The <see cref="T:csammisrun.OscarLib.ChatRoom"/> describing the chatroom</param>
            <param name="screenName">The screenname of the user to invite</param>
            <param name="message">A message to send along with the invitation</param>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.RequestDirectConnection(csammisrun.OscarLib.Utility.DirectConnection)">
            <summary>
            Sends a direct connection request
            </summary>
            <param name="conn">A <see cref="T:csammisrun.OscarLib.Utility.DirectConnection"/> object that will handle the request</param>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.SendDirectConnectionCancellation(csammisrun.OscarLib.Utility.DirectConnection,System.String)">
            <summary>
            Cancel a direct connection attempt
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.SendDirectConnectionAccept(csammisrun.OscarLib.Utility.DirectConnection)">
            <summary>
            Accept a direct connection attempt
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.SendWarning(System.String,System.Boolean)">
            <summary>
            Sends a warning to a remote client -- SNAC(04,08)
            </summary>
            <param name="screenname">The screenname of the client to warn</param>
            <param name="anonymous">Send the warning as anonymous or as yourself</param>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.RequestParametersList">
            <summary>
            Sends a request for parameter information -- SNAC(04,04)
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.UpdateParameters">
            <summary>
            Sets ICBM parameters to more reasonable values than the defaults -- SNAC(04,02)
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.ProcessIncomingPacket(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Process an incoming <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> from SNAC family 4
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> received by the server</param>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.ProcessIcbmError(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Proceses an error packet -- SNAC(04,01)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(04,01)</param>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.ProcessParametersList(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes the parameter information sent by the server -- SNAC(04,05)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(04,05)</param>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.ProcessWarningAcknowledgement(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes the acknowledgement of a warning sent by the server -- SNAC(04,09)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(04,09)</param>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.ProcessUndeliverableMessage(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes an undeliverable message notification sent by the server -- SNAC(04,0A)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(04,0A)</param>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.ProcessServerAcknowledgement(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes an "message accepted" notification sent by the server -- SNAC(04,0C)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(04,0C)</param>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.ProcessTypingNotification(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes a typing notification sent by the server -- SNAC(04,14)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(04,14)</param>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.ProcessOfflineMessagesSent(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes a notification that all offline messages have been retrieved -- SNAC(04,17)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(04,17), always empty</param>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.ProcessMessage(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes an ICBM message sent by the server -- SNAC(04,07)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(04,07)</param>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.ProcessChannelOneMessage(csammisrun.OscarLib.Utility.ByteStream,csammisrun.OscarLib.UserInfo)">
            <summary>
            Processes an incoming ICBM message on channel 1 -- SNAC(04,07)
            </summary>
            <param name="stream">A received <see cref="T:csammisrun.OscarLib.Utility.ByteStream"/></param>
            <param name="ui">The UserInfo block that came with this message</param>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.OnMessageReceived(csammisrun.OscarLib.IM)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.MessageManager.MessageReceived"/> event
            </summary>
            <param name="message">The <see cref="T:csammisrun.OscarLib.IM"/> that was received</param>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.GetChannelOneMessage(csammisrun.OscarLib.Utility.ByteStream,csammisrun.OscarLib.IM@)">
            <summary>
            Retrieves the message text from SNAC(04,07) TLV 02
            </summary>
            <param name="stream">A received <see cref="T:csammisrun.OscarLib.Utility.ByteStream"/></param>
            <param name="message">An <see cref="T:csammisrun.OscarLib.IM"/> object to be populated</param>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.ProcessChannelTwoMessage(csammisrun.OscarLib.Utility.ByteStream,csammisrun.OscarLib.UserInfo)">
            <summary>
            Process a ICBM that was sent over channel two - rich text messages, chat/filetransfer invites, buddy icons
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.ProcessChannel2Tlv05(csammisrun.OscarLib.Utility.ByteStream,csammisrun.OscarLib.UserInfo)">
            <summary>
            Processes the inner TLV list in TLV 0x0005 and returns a new DirectConnection
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.ProcessChatInvitationRequest(csammisrun.OscarLib.Utility.ChatInvitationConnection,csammisrun.OscarLib.Utility.ByteStream)">
            <summary>
            Performs processing on the 0x2711 TLV of a chat invitation request
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.ProcessDirectConnectionRequest(csammisrun.OscarLib.Utility.DirectConnection,csammisrun.OscarLib.Utility.ByteStream)">
            <summary>
            Performs TLV 0x2711 processing for direct connect (sendfiles, DirectIM) negotiation
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.ProcessChannelFourMessage(csammisrun.OscarLib.Utility.ByteStream,csammisrun.OscarLib.UserInfo)">
            <summary>
            Processes an incoming ICBM message on channel 4 (SMS response from ISRAEL)-- SNAC(04,07)
            </summary>
            <param name="stream">A received <see cref="T:csammisrun.OscarLib.Utility.ByteStream"/></param>
            <param name="ui">The UserInfo block that came with this message</param>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.GetChannelfourMessage(csammisrun.OscarLib.Utility.ByteStream,csammisrun.OscarLib.IM@)">
            <summary>
            Retrieves the message text from SNAC(04,07) TLV 05
            </summary>
            <param name="stream">A received <see cref="T:csammisrun.OscarLib.Utility.ByteStream"/></param>
            <param name="message">An <see cref="T:csammisrun.OscarLib.IM"/> object to be populated</param>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.ReadIcqOfflineMessage(System.String,csammisrun.OscarLib.Utility.ByteStream)">
            <summary>
            Processes a newly received offline message for the specified UIN
            </summary>
            <remarks>This is called from the ICQ manager, which receives the incoming
            offline message packet and sends it here for processing</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.EndOfflineMessageSequence(System.String,System.Boolean)">
            <summary>
            Processes a message from the server that offline message retrival is finished
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.DeleteIcqOfflineMessages">
            <summary>
            Deletes offline messages belonging to the user
            </summary>
            <remarks>This method also removes any offline messages locally cached by the manager.</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.AcceptIcbmOIM(csammisrun.OscarLib.OfflineIM)">
            <summary>
            Caches an offline message until the entire collection has been retrieved
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.SendMessageThroughServer(System.String,System.String,csammisrun.OscarLib.OutgoingMessageFlags)">
            <summary>
            Sends an ICBM on channel 1 -- SNAC(04,06)
            </summary>
            <param name="destination">The screenname to receive the IM</param>
            <param name="message">The message to send</param>
            <param name="flags">A <see cref="T:csammisrun.OscarLib.OutgoingMessageFlags"/> enumeration specifying what
            additional information should be sent with the message</param>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.InsertIcbmHeader(csammisrun.OscarLib.Utility.ByteStream,csammisrun.OscarLib.Cookie,System.UInt16,System.String)">
            <summary>
            Inserts an ICBM header
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.ConvertIPAddress(System.String)">
            <summary>
            Converts an IP address string to a NBO uint
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.MessageManager.GetOfflineMessageEncoding(System.Byte)">
            <summary>
            Infers the message encoding from the message type flag
            </summary>
            <param name="messageType">The message type flag received in the offline message notification</param>
            <returns>Either <see cref="P:System.Text.Encoding.ASCII"/> or <see cref="P:System.Text.Encoding.Unicode"/></returns>
            <remarks>According to Shutko, there are several message types that are "0xFE formatted."</remarks>
        </member>
        <member name="E:csammisrun.OscarLib.MessageManager.MessageReceived">
            <summary>
            Occurs when a new message is received
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.MessageManager.OfflineMessagesReceived">
            <summary>
            Occurs when offline messages have been retrieved from the server
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.MessageManager.TypingNotification">
            <summary>
            Occurs when the server sends a typing notification
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.MessageManager.MessageDeliveryUpdate">
            <summary>
            Occurs when a message delivery update is available
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.ICBMParameters.None">
            <summary>
            No parameters are supported
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.ICBMParameters.Basic">
            <summary>
            Client wants basic ICBM messages
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.ICBMParameters.MissedCalls">
            <summary>
            Client wants missed call (undeliverable message) notifications
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.ICBMParameters.ClientEvents">
            <summary>
            Client wants client event notifications
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.ICBMParameters.SMSMessaging">
            <summary>
            Client wants to send SMS messages
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.ICBMParameters.OfflineMessaging">
            <summary>
            Client supports offline messages
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageManager.ICBMParameters.All">
            <summary>
            A combination of all ICBM parameter flags
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.OutgoingMessageFlags">
            <summary>
            A set of flags that can be applied to outgoing messages
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.OutgoingMessageFlags.None">
            <summary>
            No flags
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.OutgoingMessageFlags.AutoResponse">
            <summary>
            The message is an auto-generated response
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.OutgoingMessageFlags.DeliverOffline">
            <summary>
            If the recepient is offline, try to deliver using Offline Messaging
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.UndeliverableMessageReason">
            <summary>
            Describes reasons for messages being undeliverable
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UndeliverableMessageReason.InvalidMessage">
            <summary>
            Message format was invalid
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UndeliverableMessageReason.MessageTooLarge">
            <summary>
            The message was too large to be delivered
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UndeliverableMessageReason.MessageRateExceeded">
            <summary>
            The sender's message sending rate was exceeded
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UndeliverableMessageReason.SenderTooEvil">
            <summary>
            The sender's warning level is too high to be delivered
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.UndeliverableMessageReason.SelfTooEvil">
            <summary>
            This client's warning level is too high to be delivered to
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.MessageStatus">
            <summary>
            Describes the statuses of message delivery
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageStatus.UnknownError">
            <summary>
            An unspecified error occured during message delivery
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageStatus.AcceptedForDelivery">
            <summary>
            The message was accepted by the server
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageStatus.BuddyOffline">
            <summary>
            The message was rejected because the destination buddy was offline
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageStatus.OfflineMessagesNotSupported">
            <summary>
            A message sent with <see cref="F:csammisrun.OscarLib.OutgoingMessageFlags.DeliverOffline"/> was rejected because the recepient does not
            support offline messages
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageStatus.OfflineStorageFull">
            <summary>
            A message sent with <see cref="F:csammisrun.OscarLib.OutgoingMessageFlags.DeliverOffline"/> was rejected because the recepient's
            offline storage is full
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.MessageStatus.MessageTimeout">
            <summary>
            The client has received no response from the server regarding the message
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.RateClassManager">
            <summary>
            Manages the five SNAC rate classes
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.RateClassManager.#ctor">
            <summary>
            Creates a new RateClassManager
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.RateClassManager.SetRateClassKey(System.UInt16,System.UInt16,System.Int32)">
            <summary>
            Associates a rate class with a SNAC family and subtype
            </summary>
            <param name="family">A SNAC family ID</param>
            <param name="subfamily">A SNAC subtype ID</param>
            <param name="rateclass">The index of the rate class to associate</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.RateClassManager.GetByID(System.Int32)">
            <summary>
            Gets a <see cref="T:csammisrun.OscarLib.Utility.RateClass"/> object by its ID number
            </summary>
            <param name="Id">A rate class ID number, 1 - 5</param>
            <returns>A <see cref="T:csammisrun.OscarLib.Utility.RateClass"/> object</returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.RateClassManager.SetByID(System.Int32,csammisrun.OscarLib.Utility.RateClass)">
            <summary>
            Sets a <see cref="T:csammisrun.OscarLib.Utility.RateClass"/> object by its ID number
            </summary>
            <param name="Id">A rate class ID number, 1 - 5</param>
            <param name="rc">A <see cref="T:csammisrun.OscarLib.Utility.RateClass"/> object</param>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.RateClassManager.Item(System.Int32)">
            <summary>
            Gets or sets a rate class by SNAC family and subtype
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.IServerSideItem">
            <summary>
            Defines an interface for all SSI items that exposes their unique ID
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.IServerSideItem.ItemID">
            <summary>
            The unique ID of the SSI item
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.SSIGroup">
            <summary>
            Encapsulates an SSI item representing a group of contacts
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.SSIGroup.Name">
            <summary>
            The name of the group
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.SSIGroup.ID">
            <summary>
            The group's ID number
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.SSIGroup.Children">
            <summary>
            The IDs of the <see cref="T:csammisrun.OscarLib.SSIBuddy"/> objects contained in this group
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.SSIGroup.Order">
            <summary>
            The order of the group in the master list
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.SSIGroup.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
        </member>
        <member name="P:csammisrun.OscarLib.SSIGroup.ItemID">
            <summary>
            The group ID of the group -- always zero
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.SSIBuddy">
            <summary>
            Encapsulates an SSI item representing a single contact
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.SSIBuddy.ID">
            <summary>
            The unique ID of the contact
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.SSIBuddy.SMS">
            <summary>
            The contact's SMS information
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.SSIBuddy.Comment">
            <summary>
            A locally assigned comment about this contact
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.SSIBuddy.Alerts">
            <summary>
            Two bytes representing the different possible alert styles
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.SSIBuddy.SoundFile">
            <summary>
            A sound file to play when this contact signs on
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.SSIBuddy.AwaitingAuthorization">
            <summary>
            Indicates whether the local client is awaiting authorization by the remote contact
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.SSIBuddy.AuthorizationReason">
            <summary>
            The reason message that can be transmitted, if authorization is required
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.SSIBuddy.#ctor(System.UInt16)">
            <summary>
            Creates a new SSIBuddy object
            </summary>
            <param name="id">The ItemID for the object</param>
        </member>
        <member name="M:csammisrun.OscarLib.SSIBuddy.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
        </member>
        <member name="P:csammisrun.OscarLib.SSIBuddy.GroupID">
            <summary>
            The ID of the contact's parent group
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.SSIBuddy.Name">
            <summary>
            The actual name of the contact
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.SSIBuddy.DisplayName">
            <summary>
            The display name of the contact
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.SSIBuddy.Email">
            <summary>
            The locally assigned email address of this contact
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.SSIBuddy.UnprocessedTLVs">
            <summary>
            Gets a list of TLVs sent by the server that went unprocessed by OscarLib
            </summary>
            <remarks>As of at least 11-2006, there are two TLVs that seem to be necessary in SSI item modifications, 0x006A and 0x006D.
            This list provides a handy place to keep track of them.</remarks>
        </member>
        <member name="P:csammisrun.OscarLib.SSIBuddy.ItemID">
            <summary>
            The unique ID of the contact
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.SSIPermit">
            <summary>
            Encapsulates an SSI item representing a single Permit item
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.SSIPermit.Name">
            <summary>
            The contact name associated with item
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.SSIPermit.ID">
            <summary>
            The unique ID of the item
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.SSIPermit.#ctor(System.UInt16)">
            <summary>
            Creates a new SSIPermitDeny object
            </summary>
            <param name="id">The ItemID for the object</param>
        </member>
        <member name="M:csammisrun.OscarLib.SSIPermit.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
        </member>
        <member name="P:csammisrun.OscarLib.SSIPermit.ItemID">
            <summary>
            The unique ID of the item
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.SSIDeny">
            <summary>
            Encapsulates an SSI item representing a single Deny item
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.SSIDeny.Name">
            <summary>
            The contact name associated with item
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.SSIDeny.ID">
            <summary>
            The unique ID of the item
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.SSIDeny.#ctor(System.UInt16)">
            <summary>
            Creates a new SSIDeny object
            </summary>
            <param name="id">The ItemID for the object</param>
        </member>
        <member name="M:csammisrun.OscarLib.SSIDeny.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
        </member>
        <member name="P:csammisrun.OscarLib.SSIDeny.ItemID">
            <summary>
            The unique ID of the item
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.SSIIcon.ComputeItems(System.String)">
            <summary>
            Computes checksums and hashes for a buddy icon
            </summary>
            <param name="filename">The filename of the icon</param>
            <returns><c>true</c> if the server-side icon should be updated, <c>false</c> otherwise</returns>
        </member>
        <member name="T:csammisrun.OscarLib.SSIPermitDenySetting">
            <summary>
            Encapsulates the permit/deny settings stored on the server
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.SSIManager">
            <summary>
            Provides an interface for managing Server-Stored Information
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.SSIManager.CHILDPADDING">
            <summary>
            The number of objects a list of child objects is padded by to avoid resizing
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.#ctor(csammisrun.OscarLib.ISession)">
            <summary>
            Creates a new SSIManager
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.AddSSIItem(csammisrun.OscarLib.Utility.SSIItem)">
            <summary>
            Adds an SSI item to the local list
            </summary>
            <param name="si">An <see cref="T:csammisrun.OscarLib.Utility.SSIItem"/> item</param>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.UpdateSSIItem(csammisrun.OscarLib.Utility.SSIItem)">
            <summary>
            Updates an SSI item on the local list
            </summary>
            <param name="si">An <see cref="T:csammisrun.OscarLib.Utility.SSIItem"/> item</param>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.RemoveSSIItem(csammisrun.OscarLib.Utility.SSIItem)">
            <summary>
            Removes an SSI item from the local list
            </summary>
            <param name="si">An <see cref="T:csammisrun.OscarLib.Utility.SSIItem"/> item</param>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.CreateGroup(csammisrun.OscarLib.Utility.SSIItem,System.Boolean)">
            <summary>
            Creates a new <see cref="T:csammisrun.OscarLib.SSIGroup"/> from an SSI item sent by the server
            </summary>
            <param name="item">The received <see cref="T:csammisrun.OscarLib.Utility.SSIItem"/> object</param>
            <param name="modify">A value indicating whether the group is being modified by the server or created for the first time</param>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.GetGroupByName(System.String)">
            <summary>
            Gets a single <see cref="T:csammisrun.OscarLib.SSIGroup"/> object by its name
            </summary>
            <param name="name">The name of the group to return</param>
            <returns>
            A <see cref="T:csammisrun.OscarLib.SSIGroup"/> object, or <c>null</c> if there is no SSIGroup
            object with the given name
            </returns>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.GetGroupByID(System.UInt16)">
            <summary>
            Gets a single <see cref="T:csammisrun.OscarLib.SSIGroup"/> object by its ID number
            </summary>
            <param name="id">The ID number of the group to return</param>
            <returns>
            A <see cref="T:csammisrun.OscarLib.SSIGroup"/> object, or <c>null</c> if there is no SSIGroup
            object with the given ID number
            </returns>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.AddGroup(System.String,System.Int32)">
            <summary>
            Adds a new group to the client's list
            </summary>
            <param name="groupname">The name of the new group</param>
            <param name="index">The index of the new group</param>
            <remarks>The group is initially empty</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.AddGroup(System.String,System.UInt16)">
            <summary>
            Adds a new group to the client's list
            </summary>
            <param name="groupname">The name of the new group</param>
            <param name="id">The id of the new group</param>
            <remarks>The group is initially empty</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.AddGroup(System.String)">
            <summary>
            Adds a new group to the client's list
            </summary>
            <param name="groupname">The name of the new group</param>
            <remarks>The group is initially empty</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.RenameGroup(System.UInt16,System.String)">
            <summary>
            Renames an existing group
            </summary>
            <param name="groupID">The ID of the group to be renamed</param>
            <param name="newname">The new name of the group</param>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.AddChildToGroup(System.UInt16,System.Int32,System.UInt16)">
            <summary>
            Adds a child item from a group
            </summary>
            <param name="groupID">The ID of the group to which to add a child</param>
            <param name="index">The index of the child in the group</param>
            <param name="childID">The ID of the child to add</param>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.AddChildToGroup(System.UInt16,System.UInt16)">
            <summary>
            Adds a child item to a group
            </summary>
            <param name="groupID">The ID of the group to which to add a child</param>
            <param name="childID">The ID of the child to add</param>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.ShuffleChildren(System.UInt16,System.Int32,System.UInt16)">
            <summary>
            Shuffles children within a group
            </summary>
            <param name="groupID">The group to shuffle</param>
            <param name="index">The new index of the childID</param>
            <param name="childID">The ID to be moved</param>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.RemoveChildFromGroup(System.UInt16,System.UInt16)">
            <summary>
            Removes a child item from a group
            </summary>
            <param name="groupID">The ID of the group from which to remove a child</param>
            <param name="childID">The ID of the child to remove</param>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.MoveBuddy(csammisrun.OscarLib.SSIBuddy,csammisrun.OscarLib.SSIGroup,System.Int32)">
            <summary>
            Moves a buddy
            </summary>
            <param name="buddy">The buddy to be moved</param>
            <param name="destination">The new parent group for the buddy</param>
            <param name="index">The new index in the destination group</param>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.MoveGroup(csammisrun.OscarLib.SSIGroup,System.Int32)">
            <summary>
            Moves a group within the contact list
            </summary>
            <param name="group">The group to move</param>
            <param name="index">The new index</param>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.RemoveGroup(csammisrun.OscarLib.SSIGroup)">
            <summary>
            Removes a group from the client's list
            </summary>
            <param name="group">The local <see cref="T:csammisrun.OscarLib.SSIGroup"/> object</param>
            <remarks>This method will remove all buddy items that are children of the group</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.AddSSIGroupToManager(csammisrun.OscarLib.SSIGroup)">
            <summary>
            Encapsulates the operation to add an SSI group to the internal lists and counters
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.RemoveSSIGroupFromManager(csammisrun.OscarLib.SSIGroup)">
            <summary>
            Encapsulates the operation to remove an SSI group from the internal lists and counters
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.CreateBuddy(csammisrun.OscarLib.Utility.SSIItem)">
            <summary>
            Creates a new <see cref="T:csammisrun.OscarLib.SSIBuddy"/> from an SSI item sent by the server
            </summary>
            <param name="item">The received <see cref="T:csammisrun.OscarLib.Utility.SSIItem"/> object</param>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.GetBuddyByID(System.UInt16,System.UInt16)">
            <summary>
            Gets a single buddy by its ID number
            </summary>
            <param name="buddyid">The ID number of the buddy to return</param>
            <param name="groupid">The ID number of the group to which the buddy belongs</param>
            <returns>An <see cref="T:csammisrun.OscarLib.SSIBuddy"/> object, or <c>null</c>
            if the buddy ID does not exist</returns>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.AddBuddy(System.String,System.UInt16,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Adds a new buddy to the client's list
            </summary>
            <param name="name">The buddy's screen name</param>
            <param name="parentID">The ID of the group to which the buddy should be added</param>
            <param name="index">The index of the buddy in the group</param>
            <param name="alias">The alias of the buddy</param>
            <param name="email">The buddy's email address</param>
            <param name="SMS">The buddy's SMS contact number</param>
            <param name="comment">A comment about this buddy</param>
            <param name="soundfile">The path of a local soundfile associated with this buddy</param>
            <param name="authorizationRequired">Determines if the buddy needs authorization</param>
            <param name="authorizationReason">the authorization reason/message which will be send to the buddy</param>
            <returns>The ID number of the newly created buddy</returns>
            <remarks>
            SSI modification requires acknowledgement from the server. The newly created SSIBuddy
            item will be returned to the client upon successful addition
            </remarks>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.AddBuddy(System.String,System.UInt16,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Adds a new buddy to the client's list
            </summary>
            <param name="name">The buddy's screen name</param>
            <param name="parentID">The ID of the group to which the buddy should be added</param>
            <param name="alias">The alias of the buddy</param>
            <param name="email">The buddy's email address</param>
            <param name="SMS">The buddy's SMS contact number</param>
            <param name="comment">A comment about this buddy</param>
            <param name="soundfile">The path of a local soundfile associated with this buddy</param>
            <param name="authorizationRequired">Determines if the buddy needs authorization</param>
            <param name="authorizationReason">the authorization reason/message which will be send to the buddy</param>
            <returns>The ID number of the newly created buddy</returns>
            <remarks>
            SSI modification requires acknowledgement from the server. The newly created SSIBuddy
            item will be returned to the client upon successful addition
            </remarks>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.AddBuddy(System.String,System.UInt16,System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Adds a new buddy to the client's list
            </summary>
            <param name="name">The buddy's screen name</param>
            <param name="parentID">The ID of the group to which the buddy should be added</param>
            <param name="index">The index of the buddy in the group</param>
            <param name="alias">The alias of the buddy</param>
            <param name="email">The buddy's email address</param>
            <param name="SMS">The buddy's SMS contact number</param>
            <param name="comment">A comment about this buddy</param>
            <param name="soundfile">The path of a local soundfile associated with this buddy</param>
            <returns>The ID number of the newly created buddy</returns>
            <remarks>
            SSI modification requires acknowledgement from the server. The newly created SSIBuddy
            item will be returned to the client upon successful addition
            </remarks>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.ModifyBuddy(csammisrun.OscarLib.SSIBuddy)">
            <summary>
            Modifies a buddy on the client's list
            </summary>
            <param name="changebuddy">
            The local <see cref="T:csammisrun.OscarLib.SSIBuddy"/> object, with the required
            fields changed
            </param>
            <remarks>
            SSI modification requires acknowledgement from the server. The newly modified SSIBuddy
            item will be returned to the client upon successful addition
            </remarks>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.RemoveBuddy(csammisrun.OscarLib.SSIBuddy)">
            <summary>
            Removes a buddy from the client's list
            </summary>
            <param name="buddy">The local <see cref="T:csammisrun.OscarLib.SSIBuddy"/> object</param>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.AddModifyBuddy(System.String,System.UInt16,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,csammisrun.OscarLib.SSIBuddy)">
            <summary>
            Contains SSI item creation and sending routines for adding or modifying SSI buddy items
            </summary>
            <param name="name">The buddy's screen name</param>
            <param name="parentID">The ID of the group to which the buddy should be added</param>
            <param name="index">The new index of the buddy in the group</param>
            <param name="alias">The alias of the buddy</param>
            <param name="email">The buddy's email address</param>
            <param name="SMS">The buddy's SMS contact number</param>
            <param name="comment">A comment about this buddy</param>
            <param name="soundfile">The path of a local soundfile associated with this buddy</param>
            <param name="authorizationRequired">Determines if u need to be authorized by the buddy</param>
            <param name="authorizationReason">The authorization reason/message that will be send to the buddy</param>
            <param name="original">The original <see cref="T:csammisrun.OscarLib.SSIBuddy"/> object if this is a modification
            operation, or <c>null</c> if this is a creation operation</param>
            <returns></returns>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.AddModifyBuddy(System.String,System.UInt16,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,csammisrun.OscarLib.SSIBuddy)">
            <summary>
            Contains SSI item creation and sending routines for adding or modifying SSI buddy items
            </summary>
            <param name="name">The buddy's screen name</param>
            <param name="parentID">The ID of the group to which the buddy should be added</param>
            <param name="alias">The alias of the buddy</param>
            <param name="email">The buddy's email address</param>
            <param name="SMS">The buddy's SMS contact number</param>
            <param name="comment">A comment about this buddy</param>
            <param name="soundfile">The path of a local soundfile associated with this buddy</param>
            <param name="authorizationRequired">Determines if u need to be authorized by the buddy</param>
            <param name="authorizationReason">The authorization reason/message that will be send to the buddy</param>
            <param name="original">The original <see cref="T:csammisrun.OscarLib.SSIBuddy"/> object if this is a modification
            operation, or <c>null</c> if this is a creation operation</param>
            <returns>The buddy object</returns>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.AddSSIBuddyToManager(csammisrun.OscarLib.SSIBuddy)">
            <summary>
            Encapsulates the operation to add an SSI buddy to the internal lists and counters
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.RemoveSSIBuddyFromManager(csammisrun.OscarLib.SSIBuddy)">
            <summary>
            Encapsulates the operation to remove an SSI buddy from the internal lists and counters
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.CreatePermit(csammisrun.OscarLib.Utility.SSIItem)">
            <summary>
            Creates a new <see cref="T:csammisrun.OscarLib.SSIPermit"/> object from an SSI permit item sent by the server
            </summary>
            <param name="item">The received <see cref="T:csammisrun.OscarLib.Utility.SSIItem"/> object</param>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.AddPermitItem(System.String)">
            <summary>
            Adds a new permit item to the client's list
            </summary>
            <param name="screenname">The screenname to add to the permit list</param>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.RemovePermitItem(csammisrun.OscarLib.SSIPermit)">
            <summary>
            Removes an item from the client's permit list
            </summary>
            <param name="removeitem">The local <see cref="T:csammisrun.OscarLib.SSIPermit"/> object to remove</param>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.CreateDeny(csammisrun.OscarLib.Utility.SSIItem)">
            <summary>
            Creates a new <see cref="T:csammisrun.OscarLib.SSIDeny"/> from an SSI deny item sent by the server
            </summary>
            <param name="item">The received <see cref="T:csammisrun.OscarLib.Utility.SSIItem"/> object</param>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.AddDenyItem(System.String)">
            <summary>
            Adds a new deny item to the client's list
            </summary>
            <param name="screenname">The screenname to add to the deny list</param>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.RemoveDenyItem(csammisrun.OscarLib.SSIDeny)">
            <summary>
            Removes an item from the client's deny list
            </summary>
            <param name="removeitem">The local <see cref="T:csammisrun.OscarLib.SSIDeny"/> object to remove</param>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.ProcessIcon(csammisrun.OscarLib.Utility.SSIItem)">
            <summary>
            Processes a server-stored icon hash
            </summary>
            <param name="item">An <see cref="T:csammisrun.OscarLib.Utility.SSIItem"/> sent by the server</param>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.ProcessVisibility(csammisrun.OscarLib.Utility.SSIItem)">
            <summary>
            Processes server-stored visibility settings
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.ProcessIdleTime(csammisrun.OscarLib.Utility.SSIItem)">
            <summary>
            Processes server-stored idle time settings
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.RemoveSSIItem(System.UInt16,System.UInt16,System.UInt16,System.String)">
            <summary>
            Removes an SSI item from the server-stored list
            </summary>
            <param name="type">The type of the item to remove</param>
            <param name="ID">The item's ID number</param>
            <param name="groupID">The item's group ID number</param>
            <param name="name">The name of the item</param>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.GetNextItemID">
            <summary>
            Returns the next unused item ID in the sequence
            </summary>
            <remarks>This method locks on the SSIManager object, caller locking is not necessary</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.GetSSIItems``1">
            <summary>
            Gets an enumerator for a specified type of SSI item
            </summary>
            <typeparam name="T">An <see cref="T:csammisrun.OscarLib.IServerSideItem"/>, typically an <see cref="T:csammisrun.OscarLib.SSIBuddy"/> or <see cref="T:csammisrun.OscarLib.SSIGroup"/></typeparam>
            <returns>An enumerator consisting of the SSI items of type <typeparamref name="T"/> contained by the SSI manager</returns>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.GetSSIBuddyList">
            <summary>
            Gets the server side buddy list
            </summary>
            <returns>The buddylist</returns>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.GetSSIGroupList">
            <summary>
            Gets the server side group list
            </summary>
            <returns>The grouplist</returns>
        </member>
        <member name="M:csammisrun.OscarLib.SSIManager.PreallocateLists(System.UInt16)">
            <summary>
            Resize the internal lists prior to SSI item processing
            </summary>
            <param name="num_items">The number of items that will be added</param>
            <remarks>This call is to avoid runtime- and over-allocation in the Items list</remarks>
        </member>
        <member name="P:csammisrun.OscarLib.SSIManager.Privacy">
            <summary>
            Gets or sets the client's <see cref="T:csammisrun.OscarLib.PrivacySetting"/>
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.SSIManager.AllowedUserClasses">
            <summary>
            Gets or sets the user classes that are allowed to contact the client
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.SSIManager.OutstandingRequests">
            <summary>
            Gets or sets a value indicating whether the SSI manager is waiting for the
            server to acknowledge a modification
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.SSIManager.MasterGroup">
            <summary>
            Gets the master SSIGroup for this client
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.StatusManager">
            <summary>
            Handles online and offline notifications, away messages, available messages, and profiles
            for the local and remote users.
            </summary>
            <remarks>This manager is responsible for processing SNACs from families 0x0002
            (Location) and 0x0003 (Buddy Management).</remarks>
        </member>
        <member name="F:csammisrun.OscarLib.StatusManager.SNAC_LOCATION_FAMILY">
            <summary>
            The SNAC family that handles location information
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.StatusManager.LOCATION_PARAMETER_REQUEST">
            <summary>
            The subtype for requesting location parameter information
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.StatusManager.LOCATION_PARAMETER_LIST">
            <summary>
            The subtype for location parameter information
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.StatusManager.LOCATION_PARAMETER_USERINFO">
            <summary>
            The subtype for setting user information
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.StatusManager.LOCATION_USER_INFO">
            <summary>
            The subtype for user information notification
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.StatusManager.SNAC_BUDDY_FAMILY">
            <summary>
            The SNAC family that handles buddy state information
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.StatusManager.BUDDY_PARAMETER_REQUEST">
            <summary>
            The subtype for requesting buddy parameter information
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.StatusManager.BUDDY_PARAMETER_LIST">
            <summary>
            The subtype for buddy parameter information
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.StatusManager.BUDDY_ONLINE_NOTIFICATION">
            <summary>
            The subtype for an online notification
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.StatusManager.BUDDY_OFFLINE_NOTIFICATION">
            <summary>
            The subtype for an offline notification
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.StatusManager.PARAMETER_MAXCAPABILITIES">
            <summary>
            The maximum number of parameters that can be reported
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.StatusManager.PARAMETER_PROFILELENGTH">
            <summary>
            The maximum length of a user profile in bytes
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.StatusManager.LOCATION_AWAYMESSAGE">
            <summary>
            The subtype for sending an away message to the server
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.StatusManager.LOCATION_AWAYMESSAGE_ENCODING">
            <summary>
            The subtype for sending an away message's text encoding to the server
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.StatusManager.LOCATION_CAPABILITIES">
            <summary>
            The subtype for sending a set of capabilities to the server
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.StatusManager.LOCATION_PROFILE">
            <summary>
            The subtype for sending a profile to the server
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.StatusManager.LOCATION_PROFILE_ENCODING">
            <summary>
            The subtype for sending a profile's text encoding to the server
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.StatusManager.PARAMETER_MAXBUDDIES">
            <summary>
            The maximum number of buddies in an old-style contact list
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.StatusManager.PARAMETER_MAXNOTIFICATIONS">
            <summary>
            TODO:  What the hell is this?
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.StatusManager.PARAMETER_MAXWATCHERS">
            <summary>
            The maximum number of entries in a Watcher list
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.StatusManager.#ctor(csammisrun.OscarLib.ISession)">
            <summary>
            Initializes a new StatusManager
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.StatusManager.SetIdleTime(System.UInt32)">
            <summary>
            Sets the client's idle time.
            </summary>
            <param name="seconds">The client's idle time, in seconds</param>
            <remarks>
            <para>
            To remove idle status, set <paramref name="seconds"/> to zero.
            </para>
            <para>
            This method should be used only once to set the client as idle,
            or to remove idle status. The server updates the client's idle time
            automatically.  So, for example, if the client application wants the
            user to appear idle after ten minutes, the application should call
            this method after 10 minutes of being idle:
            <code>Session s;
            ...
            s.SetIdleTime(600);</code>
            The next time this method is called, it should be to remove idle status:
            <code>s.SetIdleTime(0);</code>
            </para>
            </remarks>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.StatusManager.SetProfile(System.String)">
            <summary>
            Sets the client's profile
            </summary>
            <param name="profile">The profile to set</param>
            <remarks><para>The <paramref name="profile"/> is assumed to be encoded as <see cref="P:System.Text.Encoding.Unicode"/></para></remarks>
        </member>
        <member name="M:csammisrun.OscarLib.StatusManager.SetAwayMessage(System.String)">
            <summary>
            Sets the client's away message
            </summary>
            <param name="awayMessage">The away message to set</param>
            <remarks>
            <para>
            The session must be logged in for this function to succeed. Calling SetAwayMessage
            before a successful login is achieved (i.e., when the <see cref="E:csammisrun.OscarLib.ISession.LoginCompleted"/> event
            is raised) results in an exception.
            </para>
            <para>The <paramref name="awayMessage"/> is assumed to be encoded as <see cref="P:System.Text.Encoding.Unicode"/></para>
            </remarks>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the client is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.StatusManager.DropAwayMessage">
            <summary>
            Drops the client's away message
            </summary>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the client is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.StatusManager.RequestParameters">
            <summary>
            Requests parameter settings for the Location and Buddy Management SNAC families
            </summary>
            <remarks>This method sends both SNAC(0x02,0x02) and SNAC(0x03,0x02)</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.StatusManager.ReportClientCapabilities">
            <summary>
            Sends a list of the client's capabilities to the server
            </summary>
            <remarks>This method sends SNAC(0x02,0x04)</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.StatusManager.ProcessIncomingPacket(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Process an incoming <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/>
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> received by the server</param>
        </member>
        <member name="M:csammisrun.OscarLib.StatusManager.ProcessLocationParameterList(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes the parameter information sent by the server -- SNAC(02,03)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(02,03)</param>
        </member>
        <member name="M:csammisrun.OscarLib.StatusManager.ProcessBuddyParameterList(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes the parameter information sent by the server -- SNAC(03,03)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(03,03)</param>
        </member>
        <member name="M:csammisrun.OscarLib.StatusManager.ProcessOnlineNotification(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes a user status notification sent by the server -- SNAC(03,0B)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(03,0B)</param>
        </member>
        <member name="M:csammisrun.OscarLib.StatusManager.ProcessOfflineNotification(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes a user status notification sent by the server -- SNAC(03,0C)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(03,0C)</param>
        </member>
        <member name="M:csammisrun.OscarLib.StatusManager.ProcessUserInfo(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes user information sent by the server -- SNAC(02,06)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(02,06)</param>
        </member>
        <member name="M:csammisrun.OscarLib.StatusManager.SetAwayMessageProfileInternal(System.String,System.String)">
            <summary>
            Sets the away message and/or profile of the client
            </summary>
            <param name="awayMessage">The away message to set</param>
            <param name="profile">The profile to set</param>
        </member>
        <member name="P:csammisrun.OscarLib.StatusManager.Profile">
            <summary>
            Gets or sets the client's profile
            </summary>
            <remarks><para>The <paramref name="profile"/> is assumed to be encoded as <see cref="P:System.Text.Encoding.Unicode"/></para></remarks>
        </member>
        <member name="E:csammisrun.OscarLib.StatusManager.UserStatusReceived">
            <summary>
            Occurs when a user status notification is received
            </summary>
            <remarks>The first receipt of this event for a remote contact
            indicates that the user has come online.  Subsequent receipts will
            indicate that the user has changed idle or away states, or updated their profile.</remarks>
        </member>
        <member name="E:csammisrun.OscarLib.StatusManager.UserOffline">
            <summary>
            Occurs when a user on the client's contact list has gone offline
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.StatusManager.UserInfoReceived">
            <summary>
            Occurs when a response to a request for user information is received
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.ServiceManager">
            <summary>
            Handles the basic OSCAR connection and service request functionality
            </summary>
            <remarks>This manager is responsible for processing SNACs from family 0x0001 (basic service).</remarks>
        </member>
        <member name="F:csammisrun.OscarLib.ServiceManager.SNAC_BOS_FAMILY">
            <summary>
            The SNAC family responsible for basic OSCAR services
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServiceManager.BOS_SNAC_ERROR">
            <summary>
            BOS code for a SNAC level error
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServiceManager.BOS_CONNECTION_READY">
            <summary>
            BOS code for signalling that a client is ready to go online
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServiceManager.BOS_SUPPORTED_FAMILIES">
            <summary>
            BOS code for the list of families supported on a connection
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServiceManager.BOS_REQUEST_NEW_SERVICE">
            <summary>
            BOS code for requesting a new service connection
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServiceManager.BOS_NEW_SERVICE">
            <summary>
            BOS code for new service connection parameters
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServiceManager.BOS_RATE_LIMIT_REQUST">
            <summary>
            BOS code for requesting rate limit information
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServiceManager.BOS_RATE_LIMIT_INFORMATION">
            <summary>
            BOS code for initial rate limit information
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServiceManager.BOS_ACKNOWLEDGE_RATE_LIMITS">
            <summary>
            BOS code for acknowledging rate limitation
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServiceManager.BOS_RATE_CHANGE_NOTIFICATION">
            <summary>
            BOS code for information about a rate class update
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServiceManager.BOS_PAUSE_CONNECTION_REQUEST">
            <summary>
            BOS code for initiating a server migration sequence
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServiceManager.BOS_PAUSE_CONNECTION_RESPONSE">
            <summary>
            BOS code for responding to a connection pause request
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServiceManager.BOS_RESUME_CONNECTION">
            <summary>
            BOS code for notifying that server migration is complete
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServiceManager.BOS_REQUEST_OWN_INFORMATION">
            <summary>
            BOS code for requesting our own online information
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServiceManager.BOS_OWN_ONLINE_INFORMATION">
            <summary>
            BOS code for receiving our own online information
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServiceManager.BOS_SERVER_MIGRATION_NOTICE">
            <summary>
            BOS code for a OSCAR server migration notification
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServiceManager.BOS_FAMILY_VERSION_REQUEST">
            <summary>
            BOS code for requesting the list of SNAC family versions
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServiceManager.BOS_FAMILY_VERSIONS_RESPONSE">
            <summary>
            BOS code for the list of SNAC family versions
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServiceManager.BOS_SET_EXTENDED_STATUS">
            <summary>
            BOS code for setting extended ICQ statuses
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServiceManager.BOS_CLIENT_VERIFICATION_REQUEST">
            <summary>
            BOS code for a request for client verification
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServiceManager.BOS_CLIENT_VERIFICATION_RESPONSE">
            <summary>
            BOS code for a response to a client verification request
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServiceManager.BOS_PROCESS_EXTENDED_STATUS">
            <summary>
            BOS code for a reply to our own extended status
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.ServiceManager.#ctor(csammisrun.OscarLib.ISession)">
            <summary>
            Initializes a new ServiceManager
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.ServiceManager.RequestNewService(System.UInt16)">
            <summary>
            Sends a request for a new service family
            </summary>
            <param name="newfamily">The new family to request</param>
        </member>
        <member name="M:csammisrun.OscarLib.ServiceManager.RequestServiceVersions(csammisrun.OscarLib.Utility.Connection)">
            <summary>
            Requests the version of SNAC services provided to this connection
            </summary>
            <param name="connection">The <see cref="T:csammisrun.OscarLib.Utility.Connection"/> for which to retrieve service information</param>
        </member>
        <member name="M:csammisrun.OscarLib.ServiceManager.RequestOnlineInformation">
            <summary>
            Requests the client's own online information -- SNAC(01,0E)
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.ServiceManager.SendReadyNotification(csammisrun.OscarLib.Utility.Connection)">
            <summary>
            Notifies the OSCAR server that the new connection is ready to receive service-specific data
            </summary>
            <remarks>
            This SNAC must be sent within 30ish seconds of connection, or the connection will drop.
            This should not ever be a problem, barring a lost connection well below the level of this library.
            </remarks>
        </member>
        <member name="M:csammisrun.OscarLib.ServiceManager.SetAvailableMessage(System.String)">
            <summary>
            Sets the client's "Available" message -- SNAC(01,1E)
            </summary>
            <param name="availablemessage">The available message to set</param>
            <remarks>TODO:  This probably belongs in the status manager</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.ServiceManager.SetExtendedICQStatus(csammisrun.OscarLib.ICQFlags,csammisrun.OscarLib.ICQStatus)">
            <summary>
            Sets the client's ICQ status -- SNAC(01,1E)
            </summary>
            <param name="flags">The ICQ flags to set</param>
            <param name="status">The ICQ status flags to set</param>
            <remarks>TODO:  This probably belongs in the status manager</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.ServiceManager.SendVerificationResponse">
            <summary>
            Sends a response to a client verification request -- SNAC(01,20)
            </summary>
            <remarks>
            SNAC(01,1F) and SNAC(01,20) are used to verify that the client connecting
            to the network was the official AOL Instant Messenger.  The server sends
            two integers, an offset and a length, in SNAC(01,1F).  These parameters are then used to
            get 16 bytes of data in the offical client's static memory region. However, after
            AOL begain using this authentication method, the servers never changed the requested
            offset and length. The expected response was the same 16 bytes every time, which made
            it a fairly ineffective deterrent to "unauthorized" clients.
            </remarks>
        </member>
        <member name="M:csammisrun.OscarLib.ServiceManager.ProcessIncomingPacket(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Process an incoming <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> from SNAC family 1
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> received by the server</param>
        </member>
        <member name="M:csammisrun.OscarLib.ServiceManager.ProcessOwnInformation(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes the client's own online information -- SNAC(01,0F)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(01,0F)</param>
        </member>
        <member name="M:csammisrun.OscarLib.ServiceManager.ProcessServicesList(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes the server-supported family list -- SNAC(01,03)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object containing SNAC(01,03)</param>
        </member>
        <member name="M:csammisrun.OscarLib.ServiceManager.ProcessNewServiceResponse(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes the server response to a new family request -- SNAC(01,05)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object containing SNAC(01,05)</param>
        </member>
        <member name="M:csammisrun.OscarLib.ServiceManager.ProcessVersionsListAndGetRateLimits(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Sends SNAC(01,06) in response to SNAC(01,18)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(01,18)</param>
            <remarks>OscarLib doesn't store the version list, so this method just sends SNAC(01,06) for rate limit info</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.ServiceManager.ProcessRateLimitations(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes the list of rate limitations -- SNAC(01,07)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object containing SNAC(01,07)</param>
            <remarks>This is the last step in setting up a secondary service connection,
            and the trigger to initialize basic services for the primary connection.</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.ServiceManager.ProcessRateChange(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Process a rate change message from the server -- SNAC(01,0A)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(01,0A)</param>
        </member>
        <member name="M:csammisrun.OscarLib.ServiceManager.ProcessPauseRequest(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes a pause request from the server -- SNAC(01,0B)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(01,0B)</param>
        </member>
        <member name="M:csammisrun.OscarLib.ServiceManager.ProcessResumeRequest(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes a resume request from the server -- SNAC(01,0D)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(01,0D)</param>
        </member>
        <member name="M:csammisrun.OscarLib.ServiceManager.ProcessMigrationNotice(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes a server migration notification -- SNAC(01,12)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(01,12)</param>
        </member>
        <member name="M:csammisrun.OscarLib.ServiceManager.ProcessExtendedStatus(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes the client's own extended status update sent by the server -- SNAC(01,21)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(01,21)</param>
        </member>
        <member name="M:csammisrun.OscarLib.ServiceManager.ProcessVerificationRequest(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes a request for client verification -- SNAC(01,1F)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(01,1F)</param>
            <remarks>See the entry for <see cref="M:csammisrun.OscarLib.ServiceManager.SendVerificationResponse"/> for a description of
            how this SNAC is used.</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.ServiceManager.SetExtendedStatus(System.String,csammisrun.OscarLib.ICQFlags,csammisrun.OscarLib.ICQStatus)">
            <summary>
            Sets the client's extended status -- SNAC(01,1E)
            </summary>
            <param name="availablemessage">The available message to set</param>
            <param name="flags">The ICQ flags to set</param>
            <param name="status">The ICQ status to set</param>
            <remarks>Either the available message or the flags/status can be set in one call to SetExtendedStatus</remarks>
        </member>
        <member name="T:csammisrun.OscarLib.NotLoggedInException">
            <summary>
            Thrown when an operation is requested that requires the <see cref="T:csammisrun.OscarLib.ISession"/>
            to be logged in
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.NotLoggedInException.#ctor">
            <summary>
            Creates a new NotLoggedInException
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.LoggedInException">
            <summary>
            Thrown when an operation is requested that requires the <see cref="T:csammisrun.OscarLib.ISession"/>
            to be logged out
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.LoggedInException.#ctor">
            <summary>
            Creates a new LoggedInException with a blank message
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.LoggedInException.#ctor(System.String)">
            <summary>
            Creates a new LoggedInException
            </summary>
            <param name="message">The message to be passed with the exception</param>
        </member>
        <member name="P:csammisrun.OscarLib.LoggedInException.Message">
            <summary>
            Gets a message that describes the current exception
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Session">
            <summary>
            The representation of an AOL Instant Messenger or ICQ session
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnPacketDispatchException(System.Exception,csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.PacketDispatchException"/> event
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnStatusUpdate(System.String)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.StatusUpdate"/> event
            </summary>
            <param name="message">A status message</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnLoginStatusUpdate(System.String,System.Double)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.LoginStatusUpdate"/> event
            </summary>
            <param name="message">A status message</param>
            <param name="percentdone">The percentage of the login progress that has been completed</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnWarning(csammisrun.OscarLib.ServerErrorCode)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.WarningMessage"/> event
            </summary>
            <param name="errorcode">A <see cref="T:csammisrun.OscarLib.ServerErrorCode"/> describing the warning</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnError(csammisrun.OscarLib.ServerErrorCode)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.ErrorMessage"/> event or the <see cref="E:csammisrun.OscarLib.Session.LoginFailed"/> event
            </summary>
            <param name="errorcode">A <see cref="T:csammisrun.OscarLib.ServerErrorCode"/> describing the error</param>
            <remarks>If the login process has not completed, <see cref="E:csammisrun.OscarLib.Session.LoginFailed"/> is raised.
            Otherwise, <see cref="E:csammisrun.OscarLib.Session.ErrorMessage"/> is raised.</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnLoginComplete">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.LoginCompleted"/> event
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnWarningReceived(System.UInt16,System.Boolean,csammisrun.OscarLib.UserInfo)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.WarningReceived"/> event.
            </summary>
            <param name="newlevel">The client's new warning level</param>
            <param name="anonymous"><c>true</c> if this warning was sent anonymously, <c>false</c> otherwise</param>
            <param name="ui">A <see cref="T:csammisrun.OscarLib.UserInfo"/> structure describing the warning user. If <paramref name="anonymous"/> is
            <c>true</c>, this structure is unpopulated</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnDirectoryUpdateAcknowledged(System.Boolean)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.DirectoryUpdateAcknowledged"/> event
            </summary>
            <param name="success"><c>true</c> if the directory update succeded, and <c>false</c> otherwise</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnDirectConnectionRequestReceived(csammisrun.OscarLib.Cookie)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.FileTransferRequestReceived"/> event
            </summary>
            <param name="key">The unique key needed to respond to this request</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnChatInvitationReceived(csammisrun.OscarLib.UserInfo,System.String,System.String,System.Text.Encoding,System.String,csammisrun.OscarLib.Cookie)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.ChatInvitationReceived"/> event
            </summary>
            <param name="sender">A <see cref="T:csammisrun.OscarLib.UserInfo"/> object represnting the inviter</param>
            <param name="roomname">The name of the chatroom</param>
            <param name="message">An invitation chatroom</param>
            <param name="encoding">The text encoding used in the chatroom</param>
            <param name="language">The language used in the chatroom</param>
            <param name="key">The unique key needed to respond to this request</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnPopupMessage(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.PopupMessage"/> event
            </summary>
            <param name="width">The width of the popup box, in pixels</param>
            <param name="height">The height of the popup box, in pixels</param>
            <param name="delay">The autohide delay of the popup box, in seconds</param>
            <param name="url">The URL associated with the message</param>
            <param name="message">The message to display</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnSearchByEmailResults(System.String,System.String[])">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.SearchByEmailResults"/> event
            </summary>
            <param name="email">The email address that was searched for</param>
            <param name="results">The screennames that are associated with the email address</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnReportingIntervalReceived(System.Int32)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.ReportingIntervalReceived"/> event
            </summary>
            <param name="hours">The minimum status reporting interval, in hours</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnSearchResults(csammisrun.OscarLib.DirectoryEntry[])">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.SearchResults"/> event
            </summary>
            <param name="results">The results of the directory search</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnInterestsReceived(csammisrun.OscarLib.InterestItem[])">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.InterestsReceived"/> event
            </summary>
            <param name="results">The results of the interests request</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnContactListFinished(System.DateTime)">
            <summary>
            Notifies the server to activate the SSI data for the client, and to begin
            alerting its contacts that it is now online and ready to receive messages
            
            Implementing clients should call <see cref="M:csammisrun.OscarLib.Session.ActivateBuddyList"/> in response to this event
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnBuddyItemReceived(csammisrun.OscarLib.SSIBuddy)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.BuddyItemReceived"/> event
            </summary>
            <param name="buddy">An <see cref="T:csammisrun.OscarLib.SSIBuddy"/> object</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnBuddyItemRemoved(csammisrun.OscarLib.SSIBuddy)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.BuddyItemRemoved"/> event
            </summary>
            <param name="buddy">An <see cref="T:csammisrun.OscarLib.SSIBuddy"/> object</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnGroupItemReceived(csammisrun.OscarLib.SSIGroup)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.GroupItemReceived"/> event
            </summary>
            <param name="group">An <see cref="T:csammisrun.OscarLib.SSIGroup"/>"/&gt; object</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnGroupItemRemoved(csammisrun.OscarLib.SSIGroup)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.GroupItemRemoved"/> event
            </summary>
            <param name="group">An <see cref="T:csammisrun.OscarLib.SSIGroup"/> object</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnMasterGroupItemReceived(System.Int32)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.MasterGroupItemReceived"/> event
            </summary>
            <param name="numgroups">The number of groups we are going to receive</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnSSIEditComplete">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.SSIEditComplete"/> event
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnAuthorizationRequestReceived(System.String,System.String)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.AuthorizationRequestReceived"/> event
            </summary>
            <param name="screenname">the screenname that ask for authorization</param>
            <param name="reason">the reason message</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnAuthorizationResponseReceived(System.String,System.Boolean,System.String)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.AuthorizationResponseReceived"/> event
            </summary>
            <param name="screenname">the screenname that should get the response</param>
            <param name="authorizationGranted">Determines, if the authorization will be granted or not.</param>
            <param name="reason">The reason message</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnAuthorizationResponseReceived(System.String,System.String)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.FutureAuthorizationReceived"/> event
            </summary>
            <param name="screenname">the screenname that should get the future authorization</param>
            <param name="reason">The reason message</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnLoginFailed(csammisrun.OscarLib.LoginErrorCode)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.LoginFailed"/> event
            </summary>
            <param name="errorcode">A <see cref="T:csammisrun.OscarLib.LoginErrorCode"/> describing the failure</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnFileTransferProgress(csammisrun.OscarLib.Cookie,System.UInt32,System.UInt32)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.FileTransferProgress"/> event
            </summary>
            <param name="cookie">The rendezvous cookie belonging to the file being transfered</param>
            <param name="bytestransfered">The number of bytes transfered so far</param>
            <param name="bytestotal">The total number of bytes to be transfered</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnDirectIMMessageProgress(System.Boolean,csammisrun.OscarLib.Cookie,System.UInt32,System.UInt32)">
            <summary>
            Raises the DirectIM message progress events
            </summary>
            <param name="incoming">A value indicating whether the message is incoming or outgoing</param>
            <param name="cookie">The rendezvous cookie belonging to the DirectIM session</param>
            <param name="bytestransfered">The number of bytes transfered so far</param>
            <param name="bytestotal">The total number of bytes to be transfered</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnFileTransferCancelled(csammisrun.OscarLib.UserInfo,csammisrun.OscarLib.Cookie,System.String)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.FileTransferCancelled"/> event
            </summary>
            <param name="other">The <see cref="T:csammisrun.OscarLib.UserInfo"/> of the user on the other side of the connection</param>
            <param name="cookie">The rendezvous cookie belonging to the cancelled file</param>
            <param name="reason">The reason for the cancellation</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnDirectIMSessionCancelled(csammisrun.OscarLib.Utility.DirectConnection,System.String)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.DirectIMSessionCancelled"/> event
            </summary>
            <param name="cookie">The rendezvous cookie belonging to the cancelled session</param>
            <param name="reason">The reason for the cancellation</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnDirectIMSessionClosed(csammisrun.OscarLib.UserInfo,csammisrun.OscarLib.Cookie)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.DirectIMSessionClosed"/>
            </summary>
            <param name="other">A <see cref="T:csammisrun.OscarLib.UserInfo"/> object describing the other session participant</param>
            <param name="cookie">The rendezvous cookie belonging to the cancelled session</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnDirectConnectionComplete(csammisrun.OscarLib.UserInfo,csammisrun.OscarLib.Cookie)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.DirectIMSessionReady"/> event
            </summary>
            <param name="other">A <see cref="T:csammisrun.OscarLib.UserInfo"/> object describing the other session participant</param>
            <param name="cookie">The rendezvous cookie belonging to the session</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnFileTransferCompleted(csammisrun.OscarLib.Cookie)">
            <summary>
            Raises the <see cref="E:csammisrun.OscarLib.Session.FileTransferCompleted"/> event
            </summary>
            <param name="cookie">The rendezvous cookie belonging to the completed file</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.OnDirectIMReceived(csammisrun.OscarLib.DirectIM)">
            <summary>
            Raises the <see cref="!:OscarLib_DirectIMReceived"/> event
            </summary>
            <param name="message">The <see cref="T:csammisrun.OscarLib.DirectIM"/> received</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.#ctor(System.String,System.String)">
            <summary>
            Create a new OSCAR session
            </summary>
            <param name="screenname">The screenname to log in</param>
            <param name="password">The password associated with the screenname</param>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="screenname"/> is not
            a valid AIM or ICQ screenname.</exception>
        </member>
        <member name="M:csammisrun.OscarLib.Session.SetDefaultIdentification">
            <summary>
            Sets the session's <see cref="P:csammisrun.OscarLib.Session.ClientIdentification"/> to the AOL defaults
            </summary>
            <exception cref="T:csammisrun.OscarLib.LoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is already logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.Session.InitializeLogger(System.String)">
            <summary>
            Initialize the logging system
            </summary>
            <param name="baseDir">The directory in which to save log files</param>
            <returns>The full logfile path</returns>
        </member>
        <member name="M:csammisrun.OscarLib.Session.Logon(System.String,System.Int32)">
            <summary>
            Begins the process of logging in to the OSCAR service
            </summary>
            <param name="loginserver">The OSCAR login server</param>
            <param name="port">The OSCAR service port</param>
            <remarks>
            <para>
            This function is non-blocking, because the login process does not happen
            instantly. The OSCAR library will raise the <see cref="E:csammisrun.OscarLib.ISession.LoginCompleted"/> event
            when the login process has finished successfully.
            </para>
            <para>
            The OSCAR library raises periodic status update events throughout the login process
            via the <see cref="E:csammisrun.OscarLib.ISession.StatusUpdate"/> event.
            </para>
            <para>
            Errors may occur during the login process;  if an error occurs, the OSCAR library raises
            the <see cref="E:csammisrun.OscarLib.ISession.ErrorMessage"/> event, and stops the remaining login sequence.
            </para>
            </remarks>
            <exception cref="T:csammisrun.OscarLib.LoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is already logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.Session.conn_ServerConnnectionCompleted(csammisrun.OscarLib.Utility.Connection)">
            <summary>
            This is only connected to the initial login server connection
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.Logoff">
            <summary>
            Disconnects all active OSCAR connections and resets the session
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Session.SetAvailableMessage(System.String)">
            <summary>
            Sets the client's available message
            </summary>
            <param name="message">The available message to set</param>
            <remarks>
            <para>
            If the session is logged in at the time SetAvailableMessage is called, the
            available message is reset immediately. Otherwise, it will be set once the
            session is logged in.
            </para>
            </remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Session.RequestUserInfo(System.String,csammisrun.OscarLib.UserInfoRequest)">
            <summary>
            Requests long information about a user
            </summary>
            <param name="screenname">The user to get information about</param>
            <param name="type">The type of information to request</param>
            <remarks>Results are returned by the <see cref="!:UserInfoReceived"/> event</remarks>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.Session.RequestBasicUserInfo(System.String,csammisrun.OscarLib.BasicUserInfoRequest)">
            <summary>
            Requests basic user information
            </summary>
            <param name="screenname">The user to get information about</param>
            <param name="type">The type of information to request</param>
            <remarks>
            <para>Results are returned by the <see cref="!:UserInfoReceived"/> event</para>
            <para>Gaim uses this method of user info request exclusively</para>
            </remarks>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.Session.SearchUsersByEmail(System.String)">
            <summary>
            Requests a list of accounts associated with an email address
            </summary>
            <param name="email">The email address to use while searching</param>
            <throws cref="T:System.Exception">Thrown when the session is not logged in</throws>
            <remarks>Results are returned by the <see cref="E:csammisrun.OscarLib.Session.SearchByEmailResults"/> event</remarks>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.Session.SendAIMInvitation(System.String,System.String)">
            <summary>
            Sends an invitation to join AIM
            </summary>
            <param name="email">The email address of the person to invite</param>
            <param name="text">The text of the invitation</param>
            <remarks>
            The libfaim documentation contains this delightful vignette:
            <code>Once upon a time, there used to be a menu item in AIM clients that
            said something like "Invite a friend to use AIM..." and then it would
            ask for an email address and it would sent a mail to them saying
            how perfectly wonderful the AIM service is and why you should use it
            and click here if you hate the person who sent this to you and want to
            complain and yell at them in a small box with pretty fonts.</code>
            </remarks>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.Session.AddBuddy(System.String,System.UInt16,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
             <summary>
             Adds a buddy to the client's server-side buddy list
             </summary>
             <param name="screenname">The screenname of the buddy to add</param>
             <param name="parentID">The ID of the parent group of the buddy</param>
             <param name="index">The index of the buddy in the group</param>
             <param name="alias">The alias of the buddy ("" for none)</param>
             <param name="email">The email address of the buddy ("" for none)</param>
             <param name="comment">The comment to be stored for the buddy ("" for none)</param>
             <param name="SMS">The SMS number for the buddy ("" for none)</param>
             <param name="soundfile">The soundfile for the buddy ("" for none)</param>
             <param name="authorziationRequired"><c>true</c> if we require authorization for this buddy, <c>false</c> otherwise</param>
            <param name="authorizationReason">The authorization reason/message that will be send to the client</param>
             <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
             <remarks>This function will probably not remain here; the SSI Manager will be made public</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Session.AddBuddy(System.String,System.UInt16,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
             <summary>
             Adds a buddy to the client's server-side buddy list
             </summary>
             <param name="screenname">The screenname of the buddy to add</param>
             <param name="parentID">The ID of the parent group of the buddy</param>
             <param name="alias">The alias of the buddy ("" for none)</param>
             <param name="email">The email address of the buddy ("" for none)</param>
             <param name="comment">The comment to be stored for the buddy ("" for none)</param>
             <param name="SMS">The SMS number for the buddy ("" for none)</param>
             <param name="soundfile">The soundfile for the buddy ("" for none)</param>
             <param name="authorziationRequired"><c>true</c> if we require authorization for this buddy, <c>false</c> otherwise</param>
            <param name="authorizationReason">The authorization reason/message that will be send to the client</param>
             <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
             <remarks>This function will probably not remain here; the SSI Manager will be made public</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Session.MoveBuddy(System.UInt16,System.UInt16,System.Int32)">
            <summary>
            Moves a buddy
            </summary>
            <param name="buddyID">The ID of the buddy to move</param>
            <param name="parentID">The ID of the destination group</param>
            <param name="index">The index in the destination group to move to</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.RemoveBuddy(System.UInt16,System.UInt16)">
            <summary>
            Remove a buddy
            </summary>
            <param name="buddyID">The ID of the buddy to remove</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.AddGroup(System.String,System.Int32)">
            <summary>
            Adds a group to the client's server-side buddy list
            </summary>
            <param name="groupname">The name of the new group</param>
            <param name="index">The index into the current list of groups</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.AddGroup(System.String,System.UInt16)">
            <summary>
            Adds a group to the client's server-side buddy list
            </summary>
            <param name="groupname">The name of the new group</param>
            <param name="id">The group id</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.AddGroup(System.String)">
            <summary>
            Adds a group to the client's server-side buddy list
            </summary>
            <param name="groupname">The name of the new group</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.AddMasterGroup(System.String)">
            <summary>
            Adds the master group. This is necessary if a contact list is empty to add further groups after
            </summary>
            <param name="groupname">The master group name</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.MoveGroup(System.UInt16,System.Int32)">
            <summary>
            Move a group in the buddy list
            </summary>
            <param name="groupID">The ID of the group to move</param>
            <param name="index">The new index of the group</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.RemoveGroup(System.UInt16)">
            <summary>
            Remove a group from the server-side buddy list
            </summary>
            <param name="groupID">ID of the group to remove</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.ActivateBuddyList">
            <summary>
            Tells AIM to begin sending UserStatus objects to client (online or away)
            Client should call in response to <see cref="E:csammisrun.OscarLib.Session.ContactListFinished"/> event
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Session.RequestInterestsList">
            <summary>
            Requests a list of user interests from the server
            </summary>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.Session.SendStatusReport">
            <summary>
            Sends a client status report to the server
            </summary>
            <remarks>
            <para>
            This report contains generic information about the client's machine. Its contents are as follows:
            <list>
            <item>The time the report was sent</item>
            <item>The client's screenname</item>
            <item>The name and version of Windows on this machine</item>
            <item>The name of this machine's processor</item>
            <item>The name and version of this machine's Winsock library</item>
            </list>
            </para>
            <para>This report should be sent at regular intervals by the client application. The minimum required
            reporting interval is sent by the server during login and received by the
            <see cref="E:csammisrun.OscarLib.Session.ReportingIntervalReceived"/> event</para>
            </remarks>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.Session.SendAuthorizationRequest(System.String,System.String)">
            <summary>
            Sends an icq authorization request
            </summary>
            <param name="screenname">the destination screenname</param>
            <param name="reason">the request reason</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.SendAuthorizationResponse(System.String,System.Boolean,System.String)">
            <summary>
            Sends an icq authorization response
            </summary>
            <param name="screenname">the destination screenname</param>
            <param name="grantAuthorization">true, if the authorization should be granted, otherwise false</param>
            <param name="reason">the reason for the decision</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.SendFutureAuthorizationGrant(System.String,System.String)">
            <summary>
            Grants the authorization to another screenname for the future
            </summary>
            <param name="screenname">The uin/screenname</param>
            <param name="reason">The reason message</param>
            <remarks>TODO ... seems to be obsolete in the current Oscar version</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Session.SendContactListCheckout">
            <summary>
            Sends a requests for the server side buddylist. Server should reply with
            the buddylist, or with the info that the client side buddylist is up to date
            <remarks>TODO have to be tested</remarks>
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Session.SendContactListCheckout(System.DateTime)">
            <summary>
            Sends a requests for the server side buddylist. Server should reply with
            the buddylist, or with the info that the client side buddylist is up to date
            </summary>
            <param name="lastModificationDate">the date when the client side buddylist was updated the last time</param>
            <remarks>TODO have to be tested</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Session.GetBuddyIcon(System.String)">
            <summary>
            Requests a remote client's buddy icon
            </summary>
            <param name="screenname">The screenname of the client</param>
            <param name="icon">The <see cref="!:IconInfo"/> of the client's icon, received from the
            <see cref="E:csammisrun.OscarLib.StatusManager.UserStatusReceived"/> event</param>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.Session.SendFile(System.String,System.String)">
            <summary>
            Send a file to a remote client via a direct connection
            </summary>
            <param name="recipient">The screenname of the remote client</param>
            <param name="filename">The path of the file to send</param>
            <returns>A key with which to reference this file transfer, or "" if a warning was
            generated during the initialization process</returns>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.Session.StartDirectIM(System.String,System.String)">
            <summary>
            Start a DirectIM session with a remote client via a direct connection
            </summary>
            <param name="recipient">The screenname of the remote client</param>
            <param name="message">A message with which to invite the remote client</param>
            <returns>A key with which to reference this DirectIM session, or "" if a warning was
            generated during the initialization process</returns>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.Session.SendFileProxied(System.String,System.String)">
            <summary>
            Send a file to a remote client via an AOL proxy
            </summary>
            <param name="recipient">The screenname of the remote client</param>
            <param name="filename">The path of the file to send</param>
            <returns>A key with which to reference this file transfer, or "" if a warning was
            generated during the initialization process</returns>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.Session.StartDirectIMProxied(System.String,System.String)">
            <summary>
            Start a DirectIM session with a remote client via an AOL proxy
            </summary>
            <param name="recipient">The screenname of the remote client</param>
            <param name="message">A message with which to invite the remote client</param>
            <returns>A key with which to reference this DirectIM session, or "" if a warning was
            generated during the initialization process</returns>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
        </member>
        <member name="M:csammisrun.OscarLib.Session.AcceptDirectIMSession(csammisrun.OscarLib.Cookie)">
            <summary>
            Accept an invitation to a DirectIM session
            </summary>
            <param name="key">The key received in the <see cref="!:OscarLib_DirectIMRequestReceived"/> event</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.AcceptFileTransfer(csammisrun.OscarLib.Cookie,System.String)">
            <summary>
            Accept a file being sent to the client
            </summary>
            <param name="key">The key received in the <see cref="E:csammisrun.OscarLib.Session.FileTransferRequestReceived"/> event</param>
            <param name="savelocation">The path to which to save the file</param>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
            <exception cref="T:System.Exception">Thrown when <paramref name="key"/> is not a valid file transfer key</exception>
        </member>
        <member name="M:csammisrun.OscarLib.Session.CancelFileTransfer(csammisrun.OscarLib.Cookie)">
            <summary>
            Cancel a pending or in-progress file transfer
            </summary>
            <param name="key">The key received with the transfer request</param>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
            <exception cref="T:System.Exception">Thrown when <paramref name="key"/> is not a valid file transfer key</exception>
        </member>
        <member name="M:csammisrun.OscarLib.Session.CancelDirectIMSession(csammisrun.OscarLib.Cookie)">
            <summary>
            Cancel a pending or in-progress Direct IM session
            </summary>
            <param name="key">The key received with the connection request</param>
            <exception cref="T:csammisrun.OscarLib.NotLoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is not logged in</exception>
            <exception cref="T:System.Exception">Thrown when <paramref name="key"/> is not a valid file transfer key</exception>
        </member>
        <member name="M:csammisrun.OscarLib.Session.SetICQInfo(csammisrun.OscarLib.ICQInfo)">
            <summary>
            Update the user's ICQ settings on the server
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.GetNextRequestID">
            <summary>
            Gets the next SNAC request ID in the sequence 0 through 2^32 - 1, inclusive
            </summary>
            <returns>The next SNAC request ID</returns>
            <remarks>The request ID sequence wraps around if it is about to overflow</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Session.HashPassword(System.Byte[])">
            <summary>
            Returns an MD5 hash of the client's password, an authorization key, and a constant string
            </summary>
            <param name="authkey">The authorization key sent by the server</param>
            <returns>A 16-byte MD5 hash</returns>
            <remarks>
            <para>
            The hashing process is fairly simple:
            <list>
            <item>The authorization key is put into a buffer</item>
            <item>The password itself is hashed via MD5 and appended to the buffer</item>
            <item>The constant string, "AOL Instant Messenger (SM)", is appended to the buffer in plaintext</item>
            <item>The entire buffer is MD5 hashed and returned to the caller</item>
            </list>
            </para>
            <para>
            This method exists to prevent the password from having to be passed around in a data structure
            </para>
            </remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Session.StoreRequestID(System.UInt32,System.Object)">
            <summary>
            Stores data associated with a SNAC request/reply
            </summary>
            <param name="requestid">A SNAC request ID</param>
            <param name="data">The data to be stored</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.RetrieveRequestID(System.UInt32)">
            <summary>
            Retrieves data associated with a SNAC request/reply
            </summary>
            <param name="requestid">A SNAC request ID</param>
            <returns>The data previously stored by <see cref="M:csammisrun.OscarLib.Session.StoreRequestID(System.UInt32,System.Object)"/></returns>
        </member>
        <member name="M:csammisrun.OscarLib.Session.SetPrivacyFromServer(csammisrun.OscarLib.PrivacySetting)">
            <summary>
            Sets the session's privacy setting sent by the server in SNAC(13,06)
            </summary>
            <param name="ps">One of the <see cref="T:csammisrun.OscarLib.PrivacySetting"/> enumeration members</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.SetPresence(System.Boolean)">
            <summary>
            Sets whether or not the client's idle time is public -- SNAC(13,06)
            </summary>
            <param name="publicidletime">true if others can see this client's idle time, false otherwise</param>
        </member>
        <member name="M:csammisrun.OscarLib.Session.ParameterSetArrived">
            <summary>
            Keeps track of the SNAC parameter responses that have been received thus far
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Session.DirectSocketConnectionFactory(System.String,System.Int32,System.Delegate)">
            <summary>
            Implements an asynchronous socket connection factory that operates with no network proxy
            </summary>
            <param name="host">The host to which to connect</param>
            <param name="port">The port on the host to which to connect</param>
            <param name="callback">A <see cref="T:System.Delegate"/> to be called when the socket creation is complete</param>
            <remarks>This is a public wrapper to the internal method <see cref="M:csammisrun.OscarLib.Utility.Connection.CreateDirectConnectSocket(System.String,System.Int32,System.Delegate)"/></remarks>
        </member>
        <member name="P:csammisrun.OscarLib.Session.LastModificationDate">
            <summary>
            Gets or Sets the last modification date and time of the buddylist
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.PacketDispatchException">
            <summary>
            Occurs when an unhandled exception is raised in the course of dispatching and processing a packet
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.StatusUpdate">
            <summary>
            Occurs when the library generates a status update message
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.LoginStatusUpdate">
            <summary>
            Occurs when the library generates a status update message during login
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.WarningMessage">
            <summary>
            Occurs when the library generates a warning message
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.ErrorMessage">
            <summary>
            Occurs when the library generates an error message
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.LoginCompleted">
            <summary>
            Occurs when the login process is complete.
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.WarningReceived">
            <summary>
            Occurs when a remote client has warned this client
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.DirectoryUpdateAcknowledged">
            <summary>
            Occurs when the server sends acknowledgement of a directory update request
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.FileTransferRequestReceived">
            <summary>
            Occurs when a file transfer request is received
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.DirectIMRequestReceived">
            <summary>
            Occurs when a Direct IM transfer request is received
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.ChatInvitationReceived">
            <summary>
            Occurs when a chat room invitation is received
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.PopupMessage">
            <summary>
            Occurs when the server sends a popup message
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.SearchByEmailResults">
            <summary>
            Occurs when results from a user search are available
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.ReportingIntervalReceived">
            <summary>
            Occurs when the server sends the minimum status reporting interval at login
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.SearchResults">
            <summary>
            Occurs when the server sends the results of a directory search
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.InterestsReceived">
            <summary>
            Occurs when the server sends a list of interests
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.ContactListFinished">
            <summary>
            Occurs when the buddy list has been completely sent by the server
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.BuddyItemReceived">
            <summary>
            Occurs when the server sends a new buddy item to the client
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.BuddyItemRemoved">
            <summary>
            Occurs when a buddy item has been removed from the server-side list
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.GroupItemReceived">
            <summary>
            Occurs when the server sends a new group item to the client
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.GroupItemRemoved">
            <summary>
            Occurs when a buddy item has been removed from the server-side list
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.MasterGroupItemReceived">
            <summary>
            Occurs when the server sends the master group item to the client
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.SSIEditComplete">
            <summary>
            Occurs when the an SSI edit is completed
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.AuthorizationRequestReceived">
            <summary>
            Occurs when a client ask for authorization (ICQ)
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.AuthorizationResponseReceived">
            <summary>
            Occurs when a client granted or declined the authorization (ICQ)
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.FutureAuthorizationReceived">
            <summary>
            Occurs when a client granted the authorization for the future (ICQ)
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.LoginFailed">
            <summary>
            Occurs when the login sequence fails
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.FileTransferProgress">
            <summary>
            Occurs during a file transfer to indicate transfer progression
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.DirectIMIncomingMessageProgress">
            <summary>
            Occurs during a DirectIM session to indicate the progress of an incoming message
            </summary>
            <remarks>This event will only fire if the incoming message contains attachments</remarks>
        </member>
        <member name="E:csammisrun.OscarLib.Session.DirectIMOutgoingMessageProgress">
            <summary>
            Occurs during a DirectIM session to indicate the progress of an outgoing message
            </summary>
            <remarks>This event will only fire if the outgoing message contains attachments</remarks>
        </member>
        <member name="E:csammisrun.OscarLib.Session.FileTransferCancelled">
            <summary>
            Occurs when a file transfer has been cancelled
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.DirectIMSessionCancelled">
            <summary>
            Raised when a DirectIM session has been cancelled
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.DirectIMSessionClosed">
            <summary>
            Raised when a DirectIM session has been closed
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.DirectIMSessionReady">
            <summary>
            Raised when a DirectIM session is ready for data
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.FileTransferCompleted">
            <summary>
            Occurs when a file transfer has completed
            </summary>
        </member>
        <member name="E:csammisrun.OscarLib.Session.DirectIMReceived">
            <summary>
            Occurs when a Direct IM has been received
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Session.ScreenName">
            <summary>
            Gets or sets the screen name associated with this session
            </summary>
            <remarks>
            The screen name cannot be set by this property while the client is offline.
            When the client is online, setting the screen name by this property changes the
            screen name's formatting on the server.
            </remarks>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="screenname"/> is not
            a valid AIM or ICQ screenname.</exception>
        </member>
        <member name="P:csammisrun.OscarLib.Session.LoginPort">
            <summary>
            Gets or sets the port number used for OSCAR logins
            </summary>
            <remarks>
            Traditionally, this is port 5190; however, AIM 6 has been caught using port 443 to negotiate
            connections with login.oscar.aol.com and ars.oscar.aol.com.  Future versions of OscarLib may use
            this property to support login via port 443.
            </remarks>
        </member>
        <member name="P:csammisrun.OscarLib.Session.ClientIdentification">
            <summary>
            Gets or sets this session's OSCAR identification information
            </summary>
            <exception cref="T:csammisrun.OscarLib.LoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is already logged in</exception>
        </member>
        <member name="P:csammisrun.OscarLib.Session.ClientCapabilities">
            <summary>
            Gets or sets the OSCAR capabilities associated with the session
            </summary>
            <remarks>
            The client capabilities must be set before the session is logged in because the
            client's capabilities are communicated during the login process and are kept through
            the session.
            </remarks>
            <exception cref="T:csammisrun.OscarLib.LoggedInException">Thrown when the <see cref="T:csammisrun.OscarLib.ISession"/> is already logged in</exception>
        </member>
        <member name="P:csammisrun.OscarLib.Session.Encoding">
            <summary>
            Gets the recommented enocding format depending on the client capability settings
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Session.AvailableMessage">
            <summary>
            Gets the session's Available message string
            </summary>
            <remarks>To set the the session's Available message, use the
            <see cref="M:csammisrun.OscarLib.ISession.SetAvailableMessage(System.String)"/> method</remarks>
        </member>
        <member name="P:csammisrun.OscarLib.Session.PublicIdleTime">
            <summary>
            Gets a value indicating whether this client's idle time is publicly available
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Session.LoggedIn">
            <summary>
            Gets a value indicating whether this client has completed the login process
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Session.SSI">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.SSIManager"/> associated with this session
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Session.Limits">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.LimitManager"/> associated with this session
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Session.ICQ">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.IcqManager"/> associated with this session
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Session.Messages">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.MessageManager"/> associated with this session
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Session.ChatRooms">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.ChatRoomManager"/> associated with this session
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Session.Graphics">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.GraphicsManager"/> associated with this session
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Session.Statuses">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.StatusManager"/> associated with this session
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Session.ScratchPath">
            <summary>
            Gets or sets a filesystem path where OscarLib can place received data
            </summary>
            <remarks>During an OSCAR Direct Connect session, "transient" files may come over the wire.
            If ScratchPath is set to a valid path, OscarLib will save the files locally and return
            <see cref="T:System.IO.FileStream"/> references to the objects. Otherwise, the files will
            be returned as <see cref="T:System.IO.MemoryStream"/> objects, which will take more active memory.</remarks>
        </member>
        <member name="P:csammisrun.OscarLib.Session.Connections">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.Utility.ConnectionManager"/> associated with this session
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Session.Services">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.ServiceManager"/> associated with this session
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Session.Dispatcher">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.Utility.PacketDispatcher"/> associated with this session
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Session.Families">
            <summary>
            Gets the <see cref="T:csammisrun.OscarLib.Utility.FamilyManager"/> associated with this session
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Session.CurrentSession">
            <summary>
            Gets a reference to the current session
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Session.RateClasses">
            <summary>
            Gets or sets the <see cref="T:csammisrun.OscarLib.Utility.RateClassManager"/> associated with this session
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Session.ProxiedSocketFactory">
            <summary>
            Gets or sets the <see cref="T:csammisrun.OscarLib.ProxiedSocketFactoryDelegate"/> to use to create new socket connections
            </summary>
            <remarks>By default, this property is set to <see cref="M:csammisrun.OscarLib.Session.DirectSocketConnectionFactory(System.String,System.Int32,System.Delegate)"/></remarks>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.SNAC02">
            <summary>
            Provides static methods for processing messages in SNAC family 0x0002 -- location services
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC02.RequestBasicUserInfo(csammisrun.OscarLib.ISession,System.String,csammisrun.OscarLib.BasicUserInfoRequest)">
            <summary>
            Requests user information from the server, one block at a time -- SNAC(02,05)
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
            <param name="screenname">The screenname to get information about</param>
            <param name="requesttype">The type of information to retrieve</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC02.SetDirectoryInformation(csammisrun.OscarLib.ISession,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets the user's directory information -- SNAC(02,09)
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
            <param name="allow"><c>true</c> if other users may search this information, <c>false</c> if not</param>
            <param name="firstname">A first name</param>
            <param name="middlename">A middle name</param>
            <param name="lastname">A last name</param>
            <param name="maidenname">A maiden name</param>
            <param name="nickname">A nickname</param>
            <param name="city">A city</param>
            <param name="state">A state</param>
            <param name="country">A country (two-letter code)</param>
            <param name="zip">A ZIP code</param>
            <param name="address">An address</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC02.ProcessUpdateResult(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes a reply to a directory or interests information update -- SNAC(02,0A) and SNAC(02,10)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(02,0A)</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC02.SetSelfLocation(csammisrun.OscarLib.ISession)">
            <summary>
            Registers the user's screenname with the Location service -- SNAC(02,0B)
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
            <remarks>
            The function of this SNAC is unknown, but the official AIM client (5.9.3861) sends it sometime
            after SNAC(01,02) is sent.
            </remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC02.ProcessSelfLocationReply(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes a reply to SNAC(02,0B) -- SNAC(02,0C)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(02,0C)</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC02.SetInterestsInformation(csammisrun.OscarLib.ISession,System.Boolean,System.String[])">
            <summary>
            Sets the user's interests list -- SNAC(02,0F)
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
            <param name="allow"><c>true</c> if other users may search this information, <c>false</c> if not</param>
            <param name="interests">An array of interest names</param>
            <remarks>
            OSCAR allows a user to set up to five interests. If <paramref name="interests"/> contains
            more than five items, only the first five are used.
            </remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC02.RequestUserInfo(csammisrun.OscarLib.ISession,System.String,csammisrun.OscarLib.UserInfoRequest)">
            <summary>
            Requests user information from the server -- SNAC(02,15)
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
            <param name="screenname">The screenname to get information about</param>
            <param name="requesttype">The type of information to retrieve</param>
            <remarks>The <cparam>requesttype</cparam> field can be a single <see cref="T:csammisrun.OscarLib.UserInfoRequest"/>,
            or several ORed together</remarks>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.SNAC06">
            <summary>
            Provides static methods for processing messages in SNAC family 0x0006 -- invitation service
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC06.SendInvitiationRequest(csammisrun.OscarLib.ISession,System.String,System.String)">
            <summary>
            Sends an AIM invitation to a receipient -- SNAC(06,02)
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
            <param name="email">The email address of the person to invite</param>
            <param name="text">The text of the invitation</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC06.ProcessInvitationConfirmation(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes the parameter information sent by the server -- SNAC(06,03)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(06,03) </param>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.SNAC08">
            <summary>
            Provides static methods for processing messages in SNAC family 0x0008 -- popups service
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC08.ProcessPopupMessage(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes a popup message sent by the server -- SNAC(08,02)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(08,02)</param>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.SNAC09">
            <summary>
            Provides static methods for processing messages in SNAC family 0x0009 -- privacy management service
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC09.RequestParametersList(csammisrun.OscarLib.ISession)">
            <summary>
            Sends a request for parameter information -- SNAC(09,02)
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC09.ProcessParametersList(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes the parameter information sent by the server -- SNAC(09,03)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(09,03)</param>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.SNAC0A">
            <summary>
            Provides static methods for processing messages in SNAC family 0x000A -- User lookup service
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC0A.FindUsersByEmail(csammisrun.OscarLib.ISession,System.String)">
            <summary>
            Sends a request to find accounts by their associated email address -- SNAC(0A,02)
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
            <param name="email">The email address to query</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC0A.ProcessSearchResults(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes the results of a search-by-email request -- SNAC(0A,03)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(0A,03)</param>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.SNAC0B">
            <summary>
            Provides static methods for processing messages in SNAC family 0x000B -- statistic reporting service
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC0B.ProcessReportingInterval(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes the reporting interval alert -- SNAC(0B,02)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object containing SNAC(0B,02)</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC0B.SendStatusReport(csammisrun.OscarLib.ISession)">
            <summary>
            Sends a status report to the OSCAR server -- SNAC(0B,03)
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
            <remarks>libfaim does not send this report</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC0B.ProcessReportAcknowledgement(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes the statistic report acknowledgement -- SNAC(0B,04)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object containing SNAC(0B,04)</param>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.SNAC0F">
            <summary>
            Provides static methods for processing messages in SNAC family 0x000F -- Directory search service
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC0F.SearchByEmail(csammisrun.OscarLib.ISession,System.String)">
            <summary>
            Performs a directory search by email address -- SNAC(0F,02)
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
            <param name="email">The email address to search for</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC0F.SearchByInfo(csammisrun.OscarLib.ISession,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Performs a directory search by personal information -- SNAC(0F,02)
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
            <param name="items">The number of non-null search terms</param>
            <param name="firstname">A first name</param>
            <param name="middlename">A middle name</param>
            <param name="lastname">A last name</param>
            <param name="maidenname">A maiden name</param>
            <param name="nickname">A nickname</param>
            <param name="city">A city</param>
            <param name="state">A state</param>
            <param name="country">A country (two letter code)</param>
            <param name="zip">A ZIP code</param>
            <param name="address">An address</param>
            <remarks>
            <para>If a search term is to be ignored, it must be set to <c>null</c>.</para>
            <para>There must be at least one non-null search term.</para></remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC0F.SearchByInterest(csammisrun.OscarLib.ISession,System.String)">
            <summary>
            Performs a directory search by interest -- SNAC(0F,02)
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
            <param name="interest">The interest to search for</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC0F.ProcessSearchResults(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes the parameter information sent by the server -- SNAC(0F,03)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(0F,03)</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC0F.RequestInterestList(csammisrun.OscarLib.ISession)">
            <summary>
            Requests a list of known interests -- SNAC(0F,04)
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC0F.ProcessInterestList(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes a list of known interests from the server -- SNAC(0F,05)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(0F,05)</param>
            <remarks>
            libfaim doesn't implement the interest list fetching, so this one's thanks to Mark Doliner's
            (thekingant@users.sourceforge.net) documentation.
            </remarks>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.SNAC13">
            <summary>
            Provides static methods for processing messages in SNAC family 0x0013 -- SSI service
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC13.RequestParametersList(csammisrun.OscarLib.ISession)">
            <summary>
            Sends a request for parameter information -- SNAC(13,02)
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC13.ProcessParametersList(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes the parameter information sent by the server -- SNAC(13,03)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(13,03)</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC13.RequestInitialContactList(csammisrun.OscarLib.ISession)">
            <summary>
            Sends a request for the original SSI contact list -- SNAC(13,04)
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC13.ProcessBuddyList(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes the server-stored buddy list -- SNAC(13,06)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(13,06)</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC13.ActivateSSI(csammisrun.OscarLib.ISession)">
            <summary>
            Requests that the server activate the client's SSI information -- SNAC(13,07)
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
            <remarks>
            Sending this SNAC will cause the server to begin broadcasting online notifications
            to the contacts on the client's buddy list.
            </remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC13.AddSSIItems(csammisrun.OscarLib.ISession,csammisrun.OscarLib.Utility.SSIItem[])">
            <summary>
            Adds a series of SSI items to the server-side list -- SNAC(13,08)
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
            <param name="items">An array of <see cref="T:csammisrun.OscarLib.Utility.SSIItem"/> objects</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC13.ProcessItemsAdded(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes a notification of SSI items added remotely -- SNAC(13,08)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> containing SNAC(13,08)</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC13.ModifySSIItems(csammisrun.OscarLib.ISession,csammisrun.OscarLib.Utility.SSIItem[])">
            <summary>
            Modifies a series of SSI items on the server-side list -- SNAC(13,09)
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
            <param name="items">An array of <see cref="T:csammisrun.OscarLib.Utility.SSIItem"/> objects</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC13.ProcessItemsModified(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes a notification of SSI items modified remotely -- SNAC(13,09)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> containing SNAC(13,09)</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC13.ProcessItemsRemoved(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes a notification of SSI items removed remotely -- SNAC(13,0A)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> containing SNAC(13,0A)</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC13.RemoveSSIItems(csammisrun.OscarLib.ISession,csammisrun.OscarLib.Utility.SSIItem[])">
            <summary>
            Removes a series of SSI items from the server-side list -- SNAC(13,0A)
            </summary>
            <param name="sess"></param>
            <param name="items">An array of <see cref="T:csammisrun.OscarLib.Utility.SSIItem"/> objects</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC13.ProcessSSIUpdateResponse(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes the response codes from an SSI update -- SNAC(13,0E)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(13,0E)</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC13.ProcessSSIUpToDate(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes the "Local SSI is up to date" message from the server -- SNAC(13,0F)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(13,0F)</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC13.SendEditStart(csammisrun.OscarLib.ISession)">
            <summary>
            Starts an SSI modification transaction -- SNAC(13,11)
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC13.SendEditComplete(csammisrun.OscarLib.ISession)">
            <summary>
            Finishes an SSI modification transaction -- SNAC(13,12)
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC13.ProcessAddedMessage(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes a "You Were Added" notification sent by the server -- SNAC(13,1C)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object with a buffer containing SNAC(13,1C)</param>
            <remarks>
            The server only sends this SNAC to ICQ clients, so the packet is passed to to the
            <see cref="T:csammisrun.OscarLib.IcqManager"/> for dealing-with
            </remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC13.SendAuthorizationRequest(csammisrun.OscarLib.ISession,System.String,System.String)">
            <summary>
            Sends the authorization request to another client
            </summary>
            <param name="sess">the session object</param>
            <param name="screenname">the destination screenname</param>
            <param name="reason">the reason for the authorization request</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC13.ProcessAuthorizationRequest(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes a authorization request snac
            </summary>
            <param name="dp">the data packet of the snac</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC13.SendAuthorizationResponse(csammisrun.OscarLib.ISession,System.String,System.Boolean,System.String)">
            <summary>
            Sends a response for a authorization request
            </summary>
            <param name="sess">the session object</param>
            <param name="screenname">the destination screenname</param>
            <param name="grantAuthorization">Determines if the authorization is granted</param>
            <param name="reason">The reason for this decision</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC13.ProcessAuthorizationResponse(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes an authorization response snac
            </summary>
            <param name="dp">the data packet of the snac</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC13.SendFutureAuthorizationGrant(csammisrun.OscarLib.ISession,System.String,System.String)">
            <summary>
            Allows the authorization to another client in the future
            </summary>
            <param name="sess">the session object</param>
            <param name="screenname">the destination screenname</param>
            <param name="reason">the reason for the future authorization</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC13.ProcessFutureAuthorizationGrant(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes a authorization request snac
            </summary>
            <param name="dp">the data packet of the snac</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC13.SendContactListCheckout(csammisrun.OscarLib.ISession,System.DateTime,System.Boolean,System.UInt16)">
            <summary>
            Requests for the server side contact list.
            </summary>
            <param name="sess">the session object</param>
            <param name="modificationDate">the last client side modification date</param>
            <param name="isLocalTime">Determines if the given modification time is in the local or universal time format</param>
            <param name="itemCount">the total item count at the client side</param>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.SNAC15">
            <summary>
            Provides static methods for processing messages in SNAC family 0x0015 -- ICQ-specific functions
            </summary>
            <remarks>Good news, everyone! ICQ-specific messages use little-endian byte storage,
            making every existing marshaling function completely irrelevant. Note that I'm extending the
            custom Marshal functions instead of using the BitConverter class, because I don't know how
            it would behave on systems where Mono is compiled to big-endian processors. I doubt this
            will ever be a problem, but what the hell, basically no trouble for me.</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC15.HidePublicIP(csammisrun.OscarLib.ISession)">
            <summary>
            Hides the client's IP address from view
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC15.ChangeICQPassword(csammisrun.OscarLib.ISession,System.String)">
            <summary>
            Changes the password on an ICQ account
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
            <param name="newpassword">The new password</param>
            <remarks>If the new password is longer than 8 characters, it is automatically
            truncated to 8 characters by the server.</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC15.GetAllICQInfo(csammisrun.OscarLib.ISession,System.String)">
            <summary>
            Requests a full set of information about an ICQ account
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
            <param name="screenname">The account for which to retrieve information</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC15.GetSimpleICQInfo(csammisrun.OscarLib.ISession,System.String)">
            <summary>
            Requests a minimal set of information about an ICQ account
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
            <param name="screenname">The account for which to retrieve information</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC15.GetAlias(csammisrun.OscarLib.ISession,System.String)">
            <summary>
            Requests the alias assigned to an ICQ account
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
            <param name="screenname">The account for which to retrieve information</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC15.SendXmlRequest(csammisrun.OscarLib.ISession,System.String)">
            <summary>
            Sends an XML string
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
            <param name="xml">The contents of an XML document</param>
            <remarks>I have no idea how to use this.</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC15.SendSMSMessage(csammisrun.OscarLib.ISession,System.String,System.String,System.String)">
            <summary>
            Sends an out-of-the-country text message
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
            <param name="number">The number to which to send the message</param>
            <param name="message">The message to send</param>
            <param name="alias">The sender's alias</param>
            <remarks><paramref name="message"/> must be in codepage 1252. A delivery receipt
            is automatically requested by this method.</remarks>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.SNAC17">
            <summary>
            Provides static methods for processing messages in SNAC family 0x0017 -- authentication and registration
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC17.SendAuthorizationRequest(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Sends authorization request -- SNAC(17,02)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object containing SNAC(17,07)</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC17.ProcessLoginResponse(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes a login response -- SNAC(17,03)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object containing SNAC(17,03)</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC17.SendMD5Request(csammisrun.OscarLib.ISession)">
            <summary>
            Send MD5 key request -- SNAC(17,06)
            </summary>
            <param name="sess">A <see cref="T:csammisrun.OscarLib.ISession"/> object</param>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.SNAC18">
            <summary>
            Provides static methods for processing messages in SNAC family 0x0018 -- e-mail notification
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNAC18.ProcessEmailInformation(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes a notification of e-mail information change -- SNAC(18,07)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object containing SNAC(18,07)</param>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.SNACHandler">
            <summary>
            Defines a handler for an incoming SNAC
            </summary>
            <param name="dp">The <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> containing the SNAC</param>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.SNACFunctions">
            <summary>
            Provides a set of static methods for dispatching incoming and outgoing SNAC data
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNACFunctions.GetSNACErrorCodes(csammisrun.OscarLib.Utility.DataPacket,System.UInt16@,System.UInt16@)">
            <summary>
            Reads the error code and subcode from a SNAC(XX,01) packet
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object containing SNAC(XX,01)</param>
            <param name="errorCode">The main error code contained in the SNAC</param>
            <param name="subCode">The subcode contained in the SNAC, or 0 if there is no subcode present</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNACFunctions.ProcessErrorNotification(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Processes an error notification -- SNAC(XX,01)
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object containing SNAC(XX,01)</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNACFunctions.BuildFLAP(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Enqueues a SNAC for transmission with the appropriate RateClass
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object</param>
            <remarks>
            <para>
            This needs commenting
            </para>
            </remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNACFunctions.DispatchToRateClass(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Send a data packet to the rate class that will send it
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.SNACFunctions.ProcessSNAC(csammisrun.OscarLib.Utility.DataPacket)">
            <summary>
            Dispatch a newly received SNAC to a handler function
            </summary>
            <param name="dp">A <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> object</param>
            <remarks>
            This function is HUGE! NDisplay gave it an atrocious complexity rating, but
            it's as straightforward as a giant select() statement can be.
            </remarks>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.Constants">
            <summary>
            Summary description for Constants.
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.LoginErrorCode">
            <summary>
            Describes the potential errors the AOL servers can report during login
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.InvalidScreennamePassword">
            <summary>
            The screenname is unrecognized or not in a format recognized by OSCAR, or the password does not match the screenname
            </summary>
            <remarks>The OSCAR server could send either this or <see cref="F:csammisrun.OscarLib.LoginErrorCode.IncorrectScreennamePassword"/> to indicate a bad username and/or password</remarks>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.ServiceUnavailable">
            <summary>
            A necessary OSCAR service is unavailable
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.UnknownError">
            <summary>
            The server has experienced an unknown error
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.IncorrectScreennamePassword">
            <summary>
            The screenname is unrecognized or not in a format recognized by OSCAR, or the password does not match the screenname
            </summary>
            <remarks>The OSCAR server could send either this or <see cref="F:csammisrun.OscarLib.LoginErrorCode.InvalidScreennamePassword"/> to indicate a bad username and/or password</remarks>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.WrongPassword">
            <summary>
            The password is incorrect
            </summary>
            <remarks>Logging in with ICQ accounts has returned 0x0005 for login failed when the password is wrong</remarks>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.BadAuthorizationInfo">
            <summary>
            The client sent incorrect authorization sequences
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.AccountInvalid">
            <summary>
            The account has become invalidated
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.AccountDeleted">
            <summary>
            The AOL admins have deleted the account
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.AccountExpired">
            <summary>
            The account has expired
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.DatabaseNoAccess">
            <summary>
            The server has experienced an internal error
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.ResolverNoAccess">
            <summary>
            The server has experienced an internal error
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.DatabaseInvalidFields">
            <summary>
            The server has experienced an internal error
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.DatabaseBadStatus">
            <summary>
            The server has experienced an internal error
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.ResolverBadStatus">
            <summary>
            The server has experienced an internal error
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.InternalError">
            <summary>
            The server has experienced an internal error
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.ServiceOffline">
            <summary>
            The server has experienced an internal error
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.AccountSuspended">
            <summary>
            The account has been suspended for activity against the Terms of Service
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.DatabaseSendError">
            <summary>
            The server has experienced an internal error
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.DatabaseLinkError">
            <summary>
            The server has experienced an internal error
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.ReservationMapError">
            <summary>
            The server has experienced an internal error
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.ReservationLinkError">
            <summary>
            The server has experienced an internal error
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.ReservationTimeout">
            <summary>
            The server has experienced an internal error
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.TooManyUsersFromIP">
            <summary>
            Too many accounts are logged in from the same external IP address
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.RateLimitExceeded">
            <summary>
            The account has attempted to log in too frequently in a span of time
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.WarningLevelTooHigh">
            <summary>
            The account's warning level is too high to allow login
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.OldICQVersion">
            <summary>
            The client is using an outdated version of the ICQ protocol
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.CantRegisterICQ">
            <summary>
            The ICQ number cannot be registered on the network
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.InvalidSecurID">
            <summary>
            An AOL admin account has provided an invalid SecurID for authentication
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.AccountSuspendedBecauseOfAge">
            <summary>
            The AOL admins have started reading your mail and realized you're &lt; 13 years old in real life
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.CantReachAuthServer">
            <summary>
            The authorization server cannot be reached
            </summary>
            <remarks>This is the first server to which OSCAR clients connect.  The first thing to check if this
            error code is received is to ensure that your network is functioning correctly. After that, it's AOL's fault.</remarks>
        </member>
        <member name="F:csammisrun.OscarLib.LoginErrorCode.CantReachBOSServer">
            <summary>
            The Basic OSCAR Service server cannot be reached
            </summary>
            <remarks>This is the server to which a client is redirected after successful authentication. Failure to connect
            to the BOS server is due to an OSCAR service outage.  Note that there are many BOS servers; some screennames may
            be able to connect when others cannot.</remarks>
        </member>
        <member name="T:csammisrun.OscarLib.ServerErrorCode">
            <summary>
            Describes the potential errors the AOL servers can report during an active session
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.InvalidSNACHeader">
            <summary>
            Malformed SNAC header
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.ServerRateLimited">
            <summary>
            The server cannot send messages as fast as the client is requesting them
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.ClientRateLimited">
            <summary>
            The local client has been rate limited
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.ReceiverNotLoggedIn">
            <summary>
            The recepient of a message or request is not logged into the network
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.RequestedServiceUnavailable">
            <summary>
            A secondary service is not available
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.RequestedServiceUnknown">
            <summary>
            The requested secondary service does not exist
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.ObsoleteSNAC">
            <summary>
            The client sent a SNAC that is no longer supported
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.NotSupportedByServer">
            <summary>
            The server does not support the requested feature
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.NotSupportedByClient">
            <summary>
            The client has reported during authentication that it does not support a given feature
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.RefusedByClient">
            <summary>
            The remote client has refused the message
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.ReplyTooBig">
            <summary>
            The server's reply was too large to transmit
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.ResponsesLost">
            <summary>
            The response to a query was lost by the system
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.RequestDenied">
            <summary>
            The server has denied the client's request
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.InvalidSNACFormat">
            <summary>
            Malformed SNAC packet contents
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.InsufficientRights">
            <summary>
            The client does not have sufficient rights to send a message
            </summary>
            <remarks>This most likely refers to administrator functions such as SecureID</remarks>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.ReceiverBlocked">
            <summary>
            The server will not relay the message because the receiver has been blocked by the sender
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.SenderWarningTooHigh">
            <summary>
            The server will not relay the message because the sender's warning level is too high
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.ReceiverWarningTooHigh">
            <summary>
            The server will not relay the message because the receiver's warning level is too high
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.UserUnavailable">
            <summary>
            The remote user was unavailable
            </summary>
            <remarks>This error has been encountered when attempting to send an IM to a user via SNAC04 during an existing Direct
            Connection session with the same user</remarks>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.NoMatch">
            <summary>
            No match to request
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.ListOverflow">
            <summary>
            Internal server error:  A list has overflowed
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.AmbiguousRequest">
            <summary>
            The client's request specified an ambiguous target
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.ServerQueueFull">
            <summary>
            The server is not currently accepting new messages
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.NotOnAOL">
            <summary>
            Operation can't be performed while connected via AOL
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.LostSecondaryConnection">
            <summary>
            A secondary service connection (chat, buddy icons, etc.) has been lost
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.LostBOSConnection">
            <summary>
            The primary service connection has been lost
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.UnrequestedChatRoomInformation">
            <summary>
            Received unsolicited chat room information
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.OscarLibUnsupportedFunction">
            <summary>
            The server requested a function which OscarLib does not support
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.UnknownSNACFamily">
            <summary>
            Client received an unknown SNAC family
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.UnknownMessageChannel">
            <summary>
            Client received an unknown ICBM channel
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.UnknownRendezvousChannel">
            <summary>
            Client received an unknown Rendezvous channel
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.UnknownError">
            <summary>
            Unknown error
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.SSIItemNotFound">
            <summary>
            The client referred to an unknown SSI item
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.SSIItemAlreadyExists">
            <summary>
            The client has attempted to add an SSI item with a duplicate ID
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.SSICantAddItem">
            <summary>
            The server cannot add an item due to conflicting information
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.SSIItemLimitExceeded">
            <summary>
            Too many SSI items of the specified type exist on the server
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.ServerErrorCode.SSIItemRequiresAuthorization">
            <summary>
            Modifying the specified SSI item requires SecureID authorization
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.Tlv">
            <summary>
            Represents a TLV. TLV stands for Type, Length, Value and is used to transmit data in an organized format
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.Tlv.TypeNumber">
            <summary>
            The type of this TLV
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.Tlv.DataSize">
            <summary>
            The size, in bytes, of the data that follows the header
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.Tlv.Data">
            <summary>
            A byte array of data. Complex data such as strings must be packed into the byte array by the user
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.TLVMarshal">
            <summary>
            Summary description for TLV.
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.ByteStreamReadException">
            <summary>
            An exception caused by a bad read request from a <see cref="T:csammisrun.OscarLib.Utility.ByteStream"/>
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.ByteStreamReadException.streamSize">
            <summary>
            The size of the ByteStream that threw the exception
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.ByteStreamReadException.currentPosition">
            <summary>
            The read position in the ByteStream at the time the exception was thrown
            </summary>
        </member>
        <member name="F:csammisrun.OscarLib.Utility.ByteStreamReadException.requestedRead">
            <summary>
            The number of bytes that were requested to be read
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStreamReadException.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a ByteStreamReadException
            </summary>
            <param name="streamSize">The size of the ByteStream that threw the exception</param>
            <param name="currentPosition">The read position in the ByteStream at the time the exception was thrown</param>
            <param name="requestedRead">The number of bytes that were requested to be read</param>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.ByteStreamReadException.StreamSize">
            <summary>
            Gets the size of the ByteStream that threw the exception
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.ByteStreamReadException.CurrentPosition">
            <summary>
            Gets the read position in the ByteStream at the time the exception was thrown
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.ByteStreamReadException.RequestedRead">
            <summary>
            Gets the number of bytes that were requested to be read
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.ByteStreamReadException.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.ByteStream">
            <summary>
            A utility class for reading and writing data to or from a byte array
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.#ctor">
            <summary>
            Initializes a new <see cref="T:csammisrun.OscarLib.Utility.ByteStream"/> for writing
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.#ctor(System.Byte[])">
            <summary>
            Initializes a new <see cref="T:csammisrun.OscarLib.Utility.ByteStream"/> from a data buffer
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.Finalize">
            <summary>
            Disposes the <see cref="T:csammisrun.OscarLib.Utility.ByteStream"/>
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.CreateDataPacket">
            <summary>
            Creates a <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/> from the beginning of the stream
            </summary>
            <returns>A new <see cref="T:csammisrun.OscarLib.Utility.DataPacket"/></returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.AdvanceToPosition(System.Int32)">
            <summary>
            Advances the read index to a new position
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.AdvanceOffset(System.Int32)">
            <summary>
            Advances the read index by a specified amount
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.ReadByte">
            <summary>
            Reads a byte from the stream
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.ReadUshort">
            <summary>
            Reads a 16-bit integer from the stream
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.ReadUshortLE">
            <summary>
            Reads a 16-bit little-endian integer from the stream
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.ReadUint">
            <summary>
            Reads a 32-bit integer from the stream
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.ReadUintLE">
            <summary>
            Reads a 32-bit little-endian integer from the stream
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.ReadIPAddress">
            <summary>
            Reads an IP address from a 32-bit integer value in the stream
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.ReadString(System.Int32,System.Text.Encoding)">
            <summary>
            Reads a string from the stream using the specified encoding
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.ReadNullTerminatedString(System.Int32)">
            <summary>
            Reads a buffer containing an ASCII null-terminated string from the byte stream
            </summary>
            <param name="length">The potential length of the string, including zero-padding</param>
            <returns>An ASCII string from the byte array</returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.ReadUserInfo">
            <summary>
            Reads a <see cref="T:csammisrun.OscarLib.UserInfo"/> from the stream
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.ReadIconInfo(System.Byte[],csammisrun.OscarLib.UserInfo)">
            <summary>
            Parses a byte buffer into an <see cref="T:csammisrun.OscarLib.BartID"/> object
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.ReadSSIItem">
            <summary>
            Reads an <see cref="T:csammisrun.OscarLib.Utility.SSIItem"/> from the stream
            </summary>
            <returns>A populated <see cref="T:csammisrun.OscarLib.Utility.SSIItem"/></returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.ReadInterestItem">
            <summary>
            Reads an <see cref="T:csammisrun.OscarLib.InterestItem"/> from the stream
            </summary>
            <returns>A populated <see cref="T:csammisrun.OscarLib.InterestItem"/></returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.ReadTlvBlock(System.Int32)">
            <summary>
            Read a specified number of TLVs from the stream into a <see cref="T:csammisrun.OscarLib.Utility.TlvBlock"/>
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.ReadTlvBlockByLength(System.Int32)">
            <summary>
            Reads a tlv block 
            </summary>
            <param name="tlvBlockLength">the total byte length of the block</param>
            <returns>the tlv block</returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.ReadDateTime">
            <summary>
            Converts a 4-byte unsigned integer DateTime object
            </summary>
            <returns>A <see cref="T:System.DateTime"/> object representing the date in UTC</returns>
            <remarks>This method assumes the integer being read represents the UNIX time_t format:
            the number of seconds since the epoch (00:00:00 1 Jan 1970 GMT).</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.ReadDateTimeLE">
            <summary>
            Converts a 4-byte little-endian unsigned integer DateTime object
            </summary>
            <returns>A <see cref="T:System.DateTime"/> object representing the date in UTC</returns>
            <remarks>This method assumes the integer being read represents the UNIX time_t format:
            the number of seconds since the epoch (00:00:00 1 Jan 1970 GMT).</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.ReadFileTransferInformation(csammisrun.OscarLib.Utility.FileTransferConnection)">
            <summary>
            Reads file transfer information from the byte stream into the <see cref="T:csammisrun.OscarLib.Utility.FileTransferConnection"/>
            </summary>
            <param name="connection">The <see cref="T:csammisrun.OscarLib.Utility.FileTransferConnection"/> to populate with information</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.ReadByteArray(System.Int32)">
            <summary>
            Reads a byte array from the stream
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.ReadByteArrayToEnd">
            <summary>
            Reads the remainder of the stream into a byte array
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.PrependOscarHeaders(csammisrun.OscarLib.Utility.FLAPHeader,csammisrun.OscarLib.Utility.SNACHeader)">
            <summary>
            Prepends a <see cref="T:csammisrun.OscarLib.Utility.FLAPHeader"/> and a <see cref="T:csammisrun.OscarLib.Utility.SNACHeader"/> into the byte stream
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.WriteByte(System.Byte)">
            <summary>
            Writes a byte into the stream
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.WriteUshort(System.UInt16)">
            <summary>
            Writes a 16-bit integer into the stream
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.WriteUshortLE(System.UInt16)">
            <summary>
            Writes a 16-bit little endian integer into the stream
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.WriteUint(System.UInt32)">
            <summary>
            Writes a 32-bit integer into the stream
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.WriteUintLE(System.UInt32)">
            <summary>
            Writes a 32-bit little endian integer into the stream
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.WriteString(System.String,System.Text.Encoding)">
            <summary>
            Writes a string into the stream using the specified encoding
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.WriteTlvBlock(csammisrun.OscarLib.Utility.TlvBlock)">
            <summary>
            Writes a <see cref="T:csammisrun.OscarLib.Utility.TlvBlock"/> into the stream
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.WriteByteArray(System.Byte[])">
            <summary>
            Writes a byte array into the stream
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.WriteSSIItem(csammisrun.OscarLib.Utility.SSIItem)">
            <summary>
            Writes an <see cref="T:csammisrun.OscarLib.Utility.SSIItem"/> into the stream
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.WriteSSIItems(csammisrun.OscarLib.Utility.SSIItem[])">
            <summary>
            Writes a series of <see cref="T:csammisrun.OscarLib.Utility.SSIItem"/>s into the stream
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.WriteBartID(csammisrun.OscarLib.BartID)">
            <summary>
            Writes a <see cref="T:csammisrun.OscarLib.BartID"/> into the stream
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.GetBytes">
            <summary>
            Gets a transmittable byte array representing the byte stream
            </summary>
            <returns></returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.GetByteCount">
            <summary>
            Gets the current number of bytes in the stream
            </summary>
            <remarks>This method returns the full number of bytes in the stream,
            as opposed to the number of bytes remaining to be read.</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.GetRemainingByteCount">
            <summary>
            Gets the number of bytes remaining to be read
            </summary>
            <returns></returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.ConvertDateTimeToUint(System.DateTime,System.Boolean)">
            <summary>
            Converts a Microsoft DateTime object to the icq uint value
            </summary>
            <param name="dateTime">the Microsoft dateTime object</param>
            <param name="isLocalTime">Determines if the dateTime object has the local or the universal time format</param>
            <returns>the icq time format. past seconds since 1969</returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.Dispose">
            <summary>
            Releases resources allocated by this ByteStream
            </summary>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.ByteStream.HasMoreData">
            <summary>
            Gets a value indicating whether there remains data to be read
            </summary>
            <remarks>This method will return false if the stream was created for writing</remarks>
        </member>
        <member name="P:csammisrun.OscarLib.Utility.ByteStream.CurrentPosition">
            <summary>
            Gets the current read position in the stream
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.ByteStream.ISegment">
            <summary>
            Defines an interface for a segment in a byte stream
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ByteStream.ISegment.GetBytes">
            <summary>
            Get a byte array composed of the current segment
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.ByteStream.ByteSegment">
            <summary>
            Defines a segment for a byte value
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.ByteStream.UshortSegment">
            <summary>
            Defines a segment for a ushort value
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.ByteStream.UintSegment">
            <summary>
            Defines a segment for a uint value
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.ByteStream.StringSegment">
            <summary>
            Defines a segment for a string value
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.ByteStream.TlvBlockSegment">
            <summary>
            Defines a segment for a <see cref="T:csammisrun.OscarLib.Utility.TlvBlock"/> value
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.ByteStream.ByteArraySegment">
            <summary>
            Defines a segment for a byte array
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.ByteStream.FlapSegment">
            <summary>
            Defines a segment for a <see cref="T:csammisrun.OscarLib.Utility.FLAPHeader"/>
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.ByteStream.SnacSegment">
            <summary>
            Defines a segment for a <see cref="T:csammisrun.OscarLib.Utility.SNACHeader"/>
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.ByteStream.SSIItemSegment">
            <summary>
            Defines a segment for an <see cref="T:csammisrun.OscarLib.Utility.SSIItem"/>
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.CapabilityProcessor.GetCapabilityArray(csammisrun.OscarLib.Capabilities)">
            <summary>
            Creates a CLSID array from a Capabilities enumeration
            </summary>
            <param name="caps">A Capabilities enumeration</param>
            <returns>A byte array containing the CLSIDs of the capabilities</returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.CapabilityProcessor.ProcessCLSIDList(System.Byte[])">
            <summary>
            Creates a Capabilities enumeration from a CLSID array
            </summary>
            <param name="buffer">A byte array containing the CLSIDs of the capabilities</param>
            <returns>A Capabilities enumeration</returns>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.ScreennameVerifier">
            <summary>
            Contains utility methods to verify the correctness of a screenname
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ScreennameVerifier.IsValidAIM(System.String)">
            <summary>
            Verifies if a screenname is a valid AIM network name
            </summary>
            <param name="screenname">The screenname to verify</param>
            <returns>A value indicating whether or not the screename is valid</returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ScreennameVerifier.IsValidICQ(System.String)">
            <summary>
            Verifies if a screenname is a valid ICQ network name
            </summary>
            <param name="screenname">The screenname to verify</param>
            <returns>A value indicating whether or not the screename is valid</returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.ScreennameVerifier.IsValidSMS(System.String)">
            <summary>
            Verifies if a screenname is a valid SMS number
            </summary>
            <param name="screenname">The screenname to verify</param>
            <returns>A value indicating whether or not the screename is valid</returns>
        </member>
        <member name="T:csammisrun.OscarLib.Utility.TlvBlock">
            <summary>
            A self-contained block of TLV data
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.TlvBlock.#ctor">
            <summary>
            Initializes a new <see cref="T:csammisrun.OscarLib.Utility.TlvBlock"/>
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.TlvBlock.#ctor(System.Byte[])">
            <summary>
            Initializes a new <see cref="T:csammisrun.OscarLib.Utility.TlvBlock"/> from received data
            </summary>
            <param name="data">A received data buffer</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.TlvBlock.#ctor(System.Byte[],System.Int32)">
            <summary>
            Initializes a new <see cref="T:csammisrun.OscarLib.Utility.TlvBlock"/> from received data
            </summary>
            <param name="data">A received data buffer</param>
            <param name="startIndex">The start of the TLV block in the data buffer</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.TlvBlock.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Initializes a new <see cref="T:csammisrun.OscarLib.Utility.TlvBlock"/> from received data
            </summary>
            <param name="data">A received data buffer</param>
            <param name="startIndex">The start of the TLV block in the data buffer</param>
            <param name="readLength">The length of the TLV block in the data buffer</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.TlvBlock.Finalize">
            <summary>
            Destructor:  Disposes the TLV block and its resources
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.TlvBlock.HasTlv(System.Int32)">
            <summary>
            Gets a value indicating whether or not a TLV with the specified type code exists in the block
            </summary>
            <param name="typeCode">The type code of the TLV to search for</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.TlvBlock.ReadByte(System.Int32)">
            <summary>
            Reads a byte from the TLV block
            </summary>
            <param name="typeCode">The type code of the TLV that contains the data</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.TlvBlock.ReadUshort(System.Int32)">
            <summary>
            Reads a 16-bit unsigned integer from the TLV block
            </summary>
            <param name="typeCode">The type code of the TLV that contains the data</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.TlvBlock.ReadUint(System.Int32)">
            <summary>
            Reads a 32-bit unsigned integer from the TLV block
            </summary>
            <param name="typeCode">The type code of the TLV that contains the data</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.TlvBlock.ReadIPAddress(System.Int32)">
            <summary>
            Reads an IP address from a 32-bit integer value in the TLV block
            </summary>
            <param name="typeCode">The type code of the TLV that contains the data</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.TlvBlock.ReadString(System.Int32,System.Text.Encoding)">
            <summary>
            Reads a string from the TLV block
            </summary>
            <param name="typeCode">The type code of the TLV that contains the data</param>
            <param name="stringEncoding">The <see cref="T:System.Text.Encoding"/> of the string contained in the TLV</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.TlvBlock.ReadDateTime(System.Int32)">
            <summary>
            Converts a 4-byte unsigned integer DateTime object
            </summary>
            <param name="typeCode">The type code of the TLV that contains the data</param>
            <returns>A <see cref="T:System.DateTime"/> object representing the date in UTC</returns>
            <remarks>This method assumes the integer being read represents the UNIX time_t format:
            the number of seconds since the epoch (00:00:00 1 Jan 1970 GMT).</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.TlvBlock.ReadByteArray(System.Int32)">
            <summary>
            Reads a byte array from the TLV block
            </summary>
            <param name="typeCode">The type code of the TLV that contains the data</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.TlvBlock.ReadAllTlvs(System.Int32)">
            <summary>
            Reads a list of TLVs with the given type code from the TLV block
            </summary>
            <param name="typeCode">The type code of the TLVs to read</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.TlvBlock.ReadTlv(System.Int32)">
            <summary>
            Reads one tlv in a tlv block
            </summary>
            <param name="typeCode">the typecode of the tlv</param>
            <returns>the tlv object</returns>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.TlvBlock.GetTlvCount">
            <summary>
            Gets the number of parsed TLVs
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.TlvBlock.WriteEmpty(System.Int32)">
            <summary>
            Writes an empty TLV into the block
            </summary>
            <param name="typeCode">The type code of the TLV to write</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.TlvBlock.WriteByte(System.Int32,System.Byte)">
            <summary>
            Writes a single byte TLV into the block
            </summary>
            <param name="typeCode">The type code of the TLV to contain the data</param>
            <param name="data">The data to write</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.TlvBlock.WriteUshort(System.Int32,System.UInt16)">
            <summary>
            Writes a 16-bit unsigned integer TLV into the block
            </summary>
            <param name="typeCode">The type code of the TLV to contain the data</param>
            <param name="data">The data to write</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.TlvBlock.WriteDateTime(System.Int32,System.DateTime)">
            <summary>
            Writes a DateTime TLV into the block
            </summary>
            <param name="typeCode">The type code of the TLV to contain the data</param>
            <param name="date">The data to write</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.TlvBlock.WriteUint(System.Int32,System.UInt32)">
            <summary>
            Writes a 16-bit unsigned integer TLV into the block
            </summary>
            <param name="typeCode">The type code of the TLV to contain the data</param>
            <param name="data">The data to write</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.TlvBlock.WriteString(System.Int32,System.String,System.Text.Encoding)">
            <summary>
            Writes a string TLV into the block
            </summary>
            <param name="typeCode">The type code of the TLV to contain the data</param>
            <param name="data">The data to write</param>
            <param name="encoding">The encoding to use to write the data</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.TlvBlock.WriteByteArray(System.Int32,System.Byte[])">
            <summary>
            Writes a byte array TLV into the block
            </summary>
            <param name="typeCode">The type code of the TLV to contain the data</param>
            <param name="data">The data to write</param>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.TlvBlock.CheckAccess">
            <summary>
            Checks to ensure that this <see cref="T:csammisrun.OscarLib.Utility.TlvBlock"/> can be written
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.TlvBlock.Dispose">
            <summary>
            Called to release memory allocated by the TlvBlock
            </summary>
            <remarks>TODO:  This...does nothing</remarks>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.TlvBlock.GetBytes">
            <summary>
            Gets a transmittable byte array representing the <see cref="T:csammisrun.OscarLib.Utility.TlvBlock"/>
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.Utility.TlvBlock.GetByteCount">
            <summary>
            Gets the number of bytes in this <see cref="T:csammisrun.OscarLib.Utility.TlvBlock"/>
            </summary>
        </member>
        <member name="T:csammisrun.OscarLib.UtilityMethods">
            <summary>
            Contains global utility methods
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.UtilityMethods.DeHexUri(System.String)">
            <summary>
            Translate %XX to ASCII values
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.UtilityMethods.ParseInt(System.String,System.Globalization.NumberStyles)">
            <summary>
            Wraps Int32.Parse methods for Windows CE compatibility
            </summary>
        </member>
        <member name="M:csammisrun.OscarLib.UtilityMethods.OscarEncodingToString(System.Text.Encoding)">
            <summary>
            Returns a string describing an Encoding that is appropriate for OSCAR
            </summary>
            <param name="encoding">An <see cref="T:System.Text.Encoding"/></param>
            <returns>A string representation of <paramref name="encoding"/> suitable for OSCAR</returns>
        </member>
        <member name="M:csammisrun.OscarLib.UtilityMethods.FindBestOscarEncoding(System.String)">
            <summary>
            Scans an input string to determine its best-fit OSCAR-supported encoding
            </summary>
            <param name="input">An input string to be scanned</param>
            <returns>A text encoding with which to encode the string; see Remarks</returns>
            <remarks>
            <para>OSCAR supports three text encodings:  ASCII, ISO-8859-1, and UTF16-BE. In order
            to minimize outgoing message length, this method finds the best-fit encoding for the string.</para>
            </remarks>
        </member>
    </members>
</doc>
